-- Decompiled with CoDLUIDecompiler by JariK

-- OP Count: 0x4C
-- Constant Count: 0x14
-- Registers Count: 0x2
-- UpValue Count: 0x0
-- SubFuncs Count: 0xF
-- r(0) = g[0] // QuestManager
-- r(0) = r(0).field(1) // QuestManager.NewQuestThread
-- r(1) = c[2] // "GenericTriggers"
QuestManager.NewQuestThread("GenericTriggers")
-- r(0) = g[2] // GenericTriggers
	-- OP Count: 0x13
	-- Constant Count: 0x9
	-- Registers Count: 0x5
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function GenericTriggers.Init(arg0)
	arg0.TriggerEntities = {}
	-- r(1) = r(0):c[1] // arg0:StartNewEntityThread
	-- r(3) = c[2] // "GenericTriggerMarker"
	-- r(4) = g[2] // GenericTriggerMarker
	arg0:StartNewEntityThread("GenericTriggerMarker", GenericTriggerMarker)
	-- r(1) = r(0):c[1] // arg0:StartNewEntityThread
	-- r(3) = c[3] // "GenericTriggerLightableTorch"
	-- r(4) = g[4] // LightableTorch
	arg0:StartNewEntityThread("GenericTriggerLightableTorch", LightableTorch)
	-- r(1) = r(0):c[1] // arg0:StartNewEntityThread
	-- r(3) = c[5] // "GenericTriggerLightableBrazier"
	-- r(4) = g[6] // LightableBrazier
	arg0:StartNewEntityThread("GenericTriggerLightableBrazier", LightableBrazier)
	-- r(1) = r(0):c[1] // arg0:StartNewEntityThread
	-- r(3) = c[7] // "MagicDoor_Fire"
	-- r(4) = g[8] // MagicDoorFireSpell
	arg0:StartNewEntityThread("MagicDoor_Fire", MagicDoorFireSpell)
	-- return
end

-- r(0) = g[2] // GenericTriggers
	-- OP Count: 0x9
	-- Constant Count: 0x5
	-- Registers Count: 0x3
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function GenericTriggers.Update(arg0)
	-- r(1) = g[0] // Layers
	-- r(1) = r(1).field(1) // Layers.ActivateLayer
	-- r(2) = c[2] // "GenericTriggers"
	Layers.ActivateLayer("GenericTriggers")
	-- r(1) = g[3] // coroutine
	-- r(1) = r(1).field(4) // coroutine.yield
	coroutine.yield()
	-- skip the next [-4] opcodes // advance -4 lines
	-- return
end

-- r(0) = g[2] // GenericTriggers
	-- OP Count: 0x14
	-- Constant Count: 0x9
	-- Registers Count: 0x6
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function GenericTriggers.OnFireballHit(arg0, arg1)
	-- r(2) = g[0] // coroutine
	-- r(2) = r(2).field(1) // coroutine.yield
	coroutine.yield()
	-- r(2) = g[2] // MessageEvents
	-- r(2) = r(2).field(3) // MessageEvents.IsMessageSentTo
	-- r(3) = g[4] // EMessageEventType
	-- r(3) = r(3).field(5) // EMessageEventType.MESSAGE_EVENT_HIT_BY_SPELL_TYPE
	-- r(4) = r(1) // arg1
	local registerVal2, registerVal3 = MessageEvents.IsMessageSentTo(EMessageEventType.MESSAGE_EVENT_HIT_BY_SPELL_TYPE, arg1)
	-- skip the next [-11] opcodes // advance -11 lines
	-- r(4) = r(3):c[6] // registerVal3:GetExtraDataAsNumber
	local registerVal4 = registerVal3:GetExtraDataAsNumber()
	-- r(5) = g[7] // ESpellType
	-- r(5) = r(5).field(8) // ESpellType.SPELL_FIREBALL
	-- skip the next [-17] opcodes // advance -17 lines
	-- skip the next [1] opcodes // advance 1 lines
	-- skip the next [-19] opcodes // advance -19 lines
	-- return
end

-- r(0) = g[0] // QuestManager
-- r(0) = r(0).field(6) // QuestManager.NewEntityThread
-- r(1) = c[7] // "GenericTriggerMarker"
QuestManager.NewEntityThread("GenericTriggerMarker")
-- r(0) = g[7] // GenericTriggerMarker
	-- OP Count: 0x2
	-- Constant Count: 0x2
	-- Registers Count: 0x2
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function GenericTriggerMarker.Init(arg0)
	arg0.CurrentState = 0.000000
	-- return
end

-- r(0) = g[7] // GenericTriggerMarker
	-- OP Count: 0x86
	-- Constant Count: 0x26
	-- Registers Count: 0x10
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function GenericTriggerMarker.CustomUpdate(arg0)
	-- r(1) = g[0] // coroutine
	-- r(1) = r(1).field(1) // coroutine.yield
	coroutine.yield()
	-- r(1) = r(0).field(2) // arg0.CurrentState
	-- skip the next [-6] opcodes // advance -6 lines
	-- r(1) = g[4] // ECGenericTrigger
	-- r(1) = r(1).field(5) // ECGenericTrigger.IsAvailable
	-- r(2) = r(0).field(6) // arg0.Entity
	local registerVal1 = ECGenericTrigger.IsAvailable(arg0.Entity)
	-- skip the next [-12] opcodes // advance -12 lines
	-- r(1) = g[4] // ECGenericTrigger
	-- r(1) = r(1).field(7) // ECGenericTrigger.GetTriggerEntity
	-- r(2) = r(0).field(6) // arg0.Entity
	registerVal1 = ECGenericTrigger.GetTriggerEntity(arg0.Entity)
	-- skip the next [4] opcodes // advance 4 lines
	-- r(2) = r(1):c[9] // registerVal1:IsAlive
	local registerVal2 = registerVal1:IsAlive()
	if registerVal1 == nil or not registerVal2 then
		-- r(1) = r(0).field(6) // arg0.Entity
	end
	-- skip the next [-25] opcodes // advance -25 lines
	-- r(2) = r(1):c[9] // arg0.Entity:IsAlive
	registerVal2 = arg0.Entity:IsAlive()
	-- skip the next [-29] opcodes // advance -29 lines
	-- r(2) = g[4] // ECGenericTrigger
	-- r(2) = r(2).field(10) // ECGenericTrigger.GetIsActive
	-- r(3) = r(0).field(6) // arg0.Entity
	registerVal2 = ECGenericTrigger.GetIsActive(arg0.Entity)
	-- skip the next [-35] opcodes // advance -35 lines
	-- r(2) = r(0).field(6) // arg0.Entity
	if arg0.Entity == arg0.Entity then
		-- r(2) = g[4] // ECGenericTrigger
		-- r(2) = r(2).field(12) // ECGenericTrigger.GetTriggerType
		-- r(3) = r(0).field(6) // arg0.Entity
		registerVal2 = ECGenericTrigger.GetTriggerType(arg0.Entity)
		arg0.Type = registerVal2
		-- r(2) = g[4] // ECGenericTrigger
		-- r(2) = r(2).field(14) // ECGenericTrigger.GetTriggerParameter
		-- r(3) = r(0).field(6) // arg0.Entity
		registerVal2 = ECGenericTrigger.GetTriggerParameter(arg0.Entity)
		arg0.Parameter = registerVal2
		-- r(2) = g[4] // ECGenericTrigger
		-- r(2) = r(2).field(16) // ECGenericTrigger.GetTriggeredEntities
		-- r(3) = r(0).field(6) // arg0.Entity
		registerVal2 = ECGenericTrigger.GetTriggeredEntities(arg0.Entity)
		arg0.Targets = registerVal2
		-- r(2) = r(0).field(6) // arg0.Entity
		-- r(2) = r(2):c[17] // arg0.Entity:GetRecord
		registerVal2 = arg0.Entity:GetRecord()
		-- r(3) = r(2):c[17] // registerVal2:GetRecord
		-- r(5) = c[18] // "GenericTriggerComponent"
		local registerVal3 = registerVal2:GetRecord("GenericTriggerComponent")
		-- r(4) = r(3):c[20] // registerVal3:GetFloat
		-- r(6) = c[19] // "StartTime"
		local registerVal4 = registerVal3:GetFloat("StartTime")
		arg0.StartTime = registerVal4
		-- r(4) = r(3):c[20] // registerVal3:GetFloat
		-- r(6) = c[21] // "EndTime"
		registerVal4 = registerVal3:GetFloat("EndTime")
		arg0.EndTime = registerVal4
		-- r(4) = r(3):c[17] // registerVal3:GetRecord
		-- r(6) = c[22] // "EntityReference"
		registerVal4 = registerVal3:GetRecord("EntityReference")
		-- r(5) = r(4):c[23] // registerVal4:IsNull
		local registerVal5 = registerVal4:IsNull()
		if not registerVal5 then
			-- r(5) = r(4):c[24] // registerVal4:GetID
			registerVal5 = registerVal4:GetID()
			arg0.EntityReference = registerVal5
		end
		-- r(5) = r(3):c[26] // registerVal3:GetString
		-- r(7) = c[25] // "CounterName"
		registerVal5 = registerVal3:GetString("CounterName")
		arg0.CounterName = registerVal5
		arg0.LightableBraziers = {}
		-- r(5) = r(3):c[17] // registerVal3:GetRecord
		-- r(7) = c[27] // "LightableBraziers"
		registerVal5 = registerVal3:GetRecord("LightableBraziers")
		-- r(6) = r(5):c[23] // registerVal5:IsNull
		local registerVal6 = registerVal5:IsNull()
		if not registerVal6 then
			-- r(6) = r(5):c[28] // registerVal5:GetNumSubRecords
			registerVal6 = registerVal5:GetNumSubRecords()
			-- r(7) = r(0).field(27) // arg0.LightableBraziers
			-- r(8) = c[29] // 1.000000
			-- r(9) = r(6) // registerVal6
			-- r(10) = c[29] // 1.000000
			for index8=1.000000, registerVal6, 1.000000 do
				-- r(12) = r(5):c[30] // registerVal5:GetSubRecordAtIndex
				-- r(14) = r(11) // index8
				local registerVal12 = registerVal5:GetSubRecordAtIndex(index8)
				-- r(13) = r(12):c[23] // registerVal12:IsNull
				local registerVal13 = registerVal12:IsNull()
				if not registerVal13 then
					-- r(13) = r(0).field(27) // arg0.LightableBraziers
					arg0.LightableBraziers[(#arg0.LightableBraziers + 1.000000)] = {}
					-- r(13) = r(0).field(27) // arg0.LightableBraziers
					-- r(13) = r(13)[r(7)] // arg0.LightableBraziers[(#arg0.LightableBraziers + 1.000000)]
					-- r(14) = r(12):c[24] // registerVal12:GetID
					local registerVal14 = registerVal12:GetID()
					arg0.LightableBraziers[(#arg0.LightableBraziers + 1.000000)].LightableBrazierRef = registerVal14
					-- r(13) = r(0).field(27) // arg0.LightableBraziers
					-- r(13) = r(13)[r(7)] // arg0.LightableBraziers[(#arg0.LightableBraziers + 1.000000)]
					arg0.LightableBraziers[(#arg0.LightableBraziers + 1.000000)].Counted = false
				end
			end
		end
		-- r(6) = g[34] // GenericTrigger
		-- r(6) = r(6).field(35) // GenericTrigger.CheckTrigger
		-- r(7) = r(0) // arg0
		GenericTrigger.CheckTrigger(arg0)
		-- skip the next [7] opcodes // advance 7 lines
	else
		-- r(2) = r(0).field(36) // arg0.ParentQuest
		-- r(2) = r(2):c[37] // arg0.ParentQuest:StartNewEntityThread
		-- r(4) = r(1) // arg0.Entity
		-- r(5) = g[34] // GenericTrigger
		-- r(6) = false
		-- r(7) = r(0) // arg0
		arg0.ParentQuest:StartNewEntityThread(arg0.Entity, GenericTrigger, false, arg0)
	end
	arg0.CurrentState = 1.000000
	-- skip the next [-133] opcodes // advance -133 lines
	-- return
end

-- r(0) = g[0] // QuestManager
-- r(0) = r(0).field(6) // QuestManager.NewEntityThread
-- r(1) = c[9] // "GenericTrigger"
QuestManager.NewEntityThread("GenericTrigger")
-- r(0) = g[9] // GenericTrigger
	-- OP Count: 0x2
	-- Constant Count: 0x2
	-- Registers Count: 0x2
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function GenericTrigger.Init(arg0)
	arg0.CurrentState = 0.000000
	-- return
end

-- r(0) = g[9] // GenericTrigger
	-- OP Count: 0x6C8
	-- Constant Count: 0xA9
	-- Registers Count: 0xA
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x1
function GenericTrigger.CheckTrigger(arg0)
	-- r(1) = r(0).field(0) // arg0.Targets
	-- skip the next [1731] opcodes // advance 1731 lines
	-- r(1) = r(0).field(2) // arg0.Type
	if arg0.Type == "Chest" then
		-- r(1) = g[3] // Chest
		-- r(1) = r(1).field(4) // Chest.IsAvailable
		-- r(2) = r(0).field(5) // arg0.Entity
		local registerVal1 = Chest.IsAvailable(arg0.Entity)
		-- skip the next [1722] opcodes // advance 1722 lines
		-- r(1) = g[3] // Chest
		-- r(1) = r(1).field(6) // Chest.IsOpen
		-- r(2) = r(0).field(5) // arg0.Entity
		registerVal1 = Chest.IsOpen(arg0.Entity)
		-- skip the next [1716] opcodes // advance 1716 lines
		-- r(1) = r(0).field(7) // arg0.StartTime
		-- skip the next [3] opcodes // advance 3 lines
		-- r(1) = r(0).field(8) // arg0.EndTime
		if arg0.StartTime ~= 0.000000 or arg0.EndTime ~= 0.000000 then
			-- r(1) = g[9] // Timing
			-- r(1) = r(1).field(10) // Timing.GetTimeOfDay
			registerVal1 = Timing.GetTimeOfDay()
			-- r(2) = g[9] // Timing
			-- r(2) = r(2).field(11) // Timing.GetTimeFrom24HourClock
			-- r(3) = r(0).field(7) // arg0.StartTime
			local registerVal2 = Timing.GetTimeFrom24HourClock(arg0.StartTime)
			-- r(3) = g[9] // Timing
			-- r(3) = r(3).field(11) // Timing.GetTimeFrom24HourClock
			-- r(4) = r(0).field(8) // arg0.EndTime
			local registerVal3 = Timing.GetTimeFrom24HourClock(arg0.EndTime)
			if registerVal3 < registerVal2 then
				-- skip the next [2] opcodes // advance 2 lines
				if registerVal3 >= registerVal1 or registerVal1 >= registerVal2 then
					-- r(4) = g[3] // Chest
					-- r(4) = r(4).field(6) // Chest.IsOpen
					-- r(5) = r(0).field(5) // arg0.Entity
					local registerVal4 = Chest.IsOpen(arg0.Entity)
					-- skip the next [27] opcodes // advance 27 lines
				else
					-- r(4) = g[12] // coroutine
					-- r(4) = r(4).field(13) // coroutine.yield
					coroutine.yield()
					-- r(4) = g[9] // Timing
					-- r(4) = r(4).field(10) // Timing.GetTimeOfDay
					registerVal4 = Timing.GetTimeOfDay()
					-- r(1) = r(4) // registerVal4
					-- skip the next [-18] opcodes // advance -18 lines
					-- skip the next [18] opcodes // advance 18 lines
				else
					-- skip the next [8] opcodes // advance 8 lines
					if registerVal2 < registerVal4 and registerVal4 < registerVal3 then
						-- r(4) = g[3] // Chest
						-- r(4) = r(4).field(6) // Chest.IsOpen
						-- r(5) = r(0).field(5) // arg0.Entity
						registerVal4 = Chest.IsOpen(arg0.Entity)
						-- skip the next [8] opcodes // advance 8 lines
					else
						-- r(4) = g[12] // coroutine
						-- r(4) = r(4).field(13) // coroutine.yield
						coroutine.yield()
						-- r(4) = g[9] // Timing
						-- r(4) = r(4).field(10) // Timing.GetTimeOfDay
						registerVal4 = Timing.GetTimeOfDay()
						-- r(1) = r(4) // registerVal4
						-- skip the next [-18] opcodes // advance -18 lines
					end
				end
			end
			-- r(4) = g[14] // GenericTrigger
			-- r(4) = r(4).field(15) // GenericTrigger.TriggerEntities
			-- r(5) = r(0) // arg0
			GenericTrigger.TriggerEntities(arg0)
			-- skip the next [1655] opcodes // advance 1655 lines
		else
			-- r(1) = g[3] // Chest
			-- r(1) = r(1).field(6) // Chest.IsOpen
			-- r(2) = r(0).field(5) // arg0.Entity
			registerVal1 = Chest.IsOpen(arg0.Entity)
			-- skip the next [4] opcodes // advance 4 lines
			-- r(1) = g[12] // coroutine
			-- r(1) = r(1).field(13) // coroutine.yield
			coroutine.yield()
			-- skip the next [-10] opcodes // advance -10 lines
			-- r(1) = g[14] // GenericTrigger
			-- r(1) = r(1).field(15) // GenericTrigger.TriggerEntities
			-- r(2) = r(0) // arg0
			GenericTrigger.TriggerEntities(arg0)
			-- skip the next [1640] opcodes // advance 1640 lines
		else
			-- r(1) = r(0).field(2) // arg0.Type
			if arg0.Type == "ShotSwitch" then
				-- r(1) = r(0).field(7) // arg0.StartTime
				-- skip the next [3] opcodes // advance 3 lines
				-- r(1) = r(0).field(8) // arg0.EndTime
				if arg0.StartTime ~= 0.000000 or arg0.EndTime ~= 0.000000 then
					-- r(1) = g[9] // Timing
					-- r(1) = r(1).field(10) // Timing.GetTimeOfDay
					registerVal1 = Timing.GetTimeOfDay()
					-- r(2) = g[9] // Timing
					-- r(2) = r(2).field(11) // Timing.GetTimeFrom24HourClock
					-- r(3) = r(0).field(7) // arg0.StartTime
					registerVal2 = Timing.GetTimeFrom24HourClock(arg0.StartTime)
					-- r(3) = g[9] // Timing
					-- r(3) = r(3).field(11) // Timing.GetTimeFrom24HourClock
					-- r(4) = r(0).field(8) // arg0.EndTime
					registerVal3 = Timing.GetTimeFrom24HourClock(arg0.EndTime)
					if registerVal3 < registerVal2 then
						-- skip the next [2] opcodes // advance 2 lines
						if registerVal3 >= registerVal1 or registerVal1 >= registerVal2 then
							-- r(4) = r(0).field(17) // arg0.Hit
							-- skip the next [24] opcodes // advance 24 lines
						else
							-- r(4) = g[12] // coroutine
							-- r(4) = r(4).field(13) // coroutine.yield
							coroutine.yield()
							-- r(4) = g[9] // Timing
							-- r(4) = r(4).field(10) // Timing.GetTimeOfDay
							registerVal4 = Timing.GetTimeOfDay()
							-- r(1) = r(4) // registerVal4
							-- skip the next [-15] opcodes // advance -15 lines
							-- skip the next [15] opcodes // advance 15 lines
						else
							-- skip the next [5] opcodes // advance 5 lines
							if registerVal2 < registerVal4 and registerVal4 < registerVal3 then
								-- r(4) = r(0).field(17) // arg0.Hit
								-- skip the next [8] opcodes // advance 8 lines
							else
								-- r(4) = g[12] // coroutine
								-- r(4) = r(4).field(13) // coroutine.yield
								coroutine.yield()
								-- r(4) = g[9] // Timing
								-- r(4) = r(4).field(10) // Timing.GetTimeOfDay
								registerVal4 = Timing.GetTimeOfDay()
								-- r(1) = r(4) // registerVal4
								-- skip the next [-15] opcodes // advance -15 lines
							end
						end
					end
					-- r(4) = g[14] // GenericTrigger
					-- r(4) = r(4).field(15) // GenericTrigger.TriggerEntities
					-- r(5) = r(0) // arg0
					GenericTrigger.TriggerEntities(arg0)
					-- skip the next [1582] opcodes // advance 1582 lines
				else
					-- r(1) = r(0).field(17) // arg0.Hit
					-- skip the next [4] opcodes // advance 4 lines
					-- r(1) = g[12] // coroutine
					-- r(1) = r(1).field(13) // coroutine.yield
					coroutine.yield()
					-- skip the next [-7] opcodes // advance -7 lines
					-- r(1) = g[14] // GenericTrigger
					-- r(1) = r(1).field(15) // GenericTrigger.TriggerEntities
					-- r(2) = r(0) // arg0
					GenericTrigger.TriggerEntities(arg0)
					-- skip the next [1570] opcodes // advance 1570 lines
				else
					-- r(1) = r(0).field(2) // arg0.Type
					if arg0.Type == "ShotSwitchMelee" then
						-- r(1) = g[19] // cprint
						-- r(2) = c[20] // "GenericTriggers - ShotSwitchMelee detected - Entity: "
						-- r(3) = g[21] // tostring
						-- r(4) = r(0).field(5) // arg0.Entity
						registerVal3 = tostring(arg0.Entity)
						-- r(2) = r(2)..r(3) // ("GenericTriggers - ShotSwitchMelee detected - Entity: " .. registerVal3)
						cprint(("GenericTriggers - ShotSwitchMelee detected - Entity: " .. registerVal3))
						-- r(1) = g[12] // coroutine
						-- r(1) = r(1).field(13) // coroutine.yield
						coroutine.yield()
						-- r(1) = g[22] // Health
						-- r(1) = r(1).field(23) // Health.SetAsOnlyVulnerableToAttackType
						-- r(2) = r(0).field(5) // arg0.Entity
						-- r(3) = g[24] // EAttackType
						-- r(3) = r(3).field(25) // EAttackType.ATTACK_MELEE
						Health.SetAsOnlyVulnerableToAttackType(arg0.Entity, EAttackType.ATTACK_MELEE)
						arg0.BeenHitByMelee = false
						-- r(1) = g[22] // Health
						-- r(1) = r(1).field(28) // Health.SetAsInvulnerable
						-- r(2) = r(0).field(5) // arg0.Entity
						-- r(3) = true
						Health.SetAsInvulnerable(arg0.Entity, true)
						arg0.SetAsInvulnerable = true
						-- r(1) = g[22] // Health
						-- r(1) = r(1).field(30) // Health.Get
						-- r(2) = r(0).field(5) // arg0.Entity
						registerVal1 = Health.Get(arg0.Entity)
						-- r(2) = g[19] // cprint
						-- r(3) = c[31] // "GenericTriggers - ShotSwitchMelee - intial_health = "
						-- r(4) = g[21] // tostring
						-- r(5) = r(1) // registerVal1
						registerVal4 = tostring(registerVal1)
						-- r(3) = r(3)..r(4) // ("GenericTriggers - ShotSwitchMelee - intial_health = " .. registerVal4)
						cprint(("GenericTriggers - ShotSwitchMelee - intial_health = " .. registerVal4))
						-- r(2) = r(0).field(7) // arg0.StartTime
						-- skip the next [3] opcodes // advance 3 lines
						-- r(2) = r(0).field(8) // arg0.EndTime
						if arg0.StartTime ~= 0.000000 or arg0.EndTime ~= 0.000000 then
							-- r(2) = g[9] // Timing
							-- r(2) = r(2).field(10) // Timing.GetTimeOfDay
							registerVal2 = Timing.GetTimeOfDay()
							-- r(3) = r(0).field(26) // arg0.BeenHitByMelee
							-- skip the next [58] opcodes // advance 58 lines
							-- r(3) = g[12] // coroutine
							-- r(3) = r(3).field(13) // coroutine.yield
							coroutine.yield()
							-- r(3) = g[9] // Timing
							-- r(3) = r(3).field(10) // Timing.GetTimeOfDay
							registerVal3 = Timing.GetTimeOfDay()
							-- r(2) = r(3) // registerVal3
							-- r(3) = g[22] // Health
							-- r(3) = r(3).field(30) // Health.Get
							-- r(4) = r(0).field(5) // arg0.Entity
							registerVal3 = Health.Get(arg0.Entity)
							if registerVal3 < registerVal1 then
								-- r(4) = g[19] // cprint
								-- r(5) = c[32] // "GenericTriggers - ShotSwitchMelee - Hit detected"
								cprint("GenericTriggers - ShotSwitchMelee - Hit detected")
								arg0.BeenHitByMelee = true
							end
							-- r(4) = g[9] // Timing
							-- r(4) = r(4).field(33) // Timing.IsTimeOfDayBetween
							-- r(5) = r(0).field(7) // arg0.StartTime
							-- r(6) = r(0).field(8) // arg0.EndTime
							registerVal4 = Timing.IsTimeOfDayBetween(arg0.StartTime, arg0.EndTime)
							-- skip the next [17] opcodes // advance 17 lines
							-- r(4) = r(0).field(28) // arg0.SetAsInvulnerable
							-- skip the next [-30] opcodes // advance -30 lines
							-- r(4) = g[19] // cprint
							-- r(5) = c[34] // "GenericTriggers - ShotSwitchMelee - Its the right time of day to hit it. Setting invulnerablity false for: "
							-- r(6) = g[21] // tostring
							-- r(7) = r(0).field(5) // arg0.Entity
							local registerVal6 = tostring(arg0.Entity)
							-- r(5) = r(5)..r(6) // ("GenericTriggers - ShotSwitchMelee - Its the right time of day to hit it. Setting invulnerablity false for: " .. registerVal6)
							cprint(("GenericTriggers - ShotSwitchMelee - Its the right time of day to hit it. Setting invulnerablity false for: " .. registerVal6))
							-- r(4) = g[22] // Health
							-- r(4) = r(4).field(28) // Health.SetAsInvulnerable
							-- r(5) = r(0).field(5) // arg0.Entity
							-- r(6) = false
							Health.SetAsInvulnerable(arg0.Entity, false)
							arg0.SetAsInvulnerable = false
							-- skip the next [-44] opcodes // advance -44 lines
							-- r(4) = r(0).field(28) // arg0.SetAsInvulnerable
							-- skip the next [-47] opcodes // advance -47 lines
							-- r(4) = g[19] // cprint
							-- r(5) = c[35] // "GenericTriggers - ShotSwitchMelee - Its the wrong time of day to hit it. Setting invulnerablity true for: "
							-- r(6) = g[21] // tostring
							-- r(7) = r(0).field(5) // arg0.Entity
							registerVal6 = tostring(arg0.Entity)
							-- r(5) = r(5)..r(6) // ("GenericTriggers - ShotSwitchMelee - Its the wrong time of day to hit it. Setting invulnerablity true for: " .. registerVal6)
							cprint(("GenericTriggers - ShotSwitchMelee - Its the wrong time of day to hit it. Setting invulnerablity true for: " .. registerVal6))
							-- r(4) = g[22] // Health
							-- r(4) = r(4).field(28) // Health.SetAsInvulnerable
							-- r(5) = r(0).field(5) // arg0.Entity
							-- r(6) = true
							Health.SetAsInvulnerable(arg0.Entity, true)
							arg0.SetAsInvulnerable = true
							-- skip the next [-61] opcodes // advance -61 lines
							-- r(3) = g[22] // Health
							-- r(3) = r(3).field(28) // Health.SetAsInvulnerable
							-- r(4) = r(0).field(5) // arg0.Entity
							-- r(5) = true
							Health.SetAsInvulnerable(arg0.Entity, true)
							-- r(3) = g[14] // GenericTrigger
							-- r(3) = r(3).field(15) // GenericTrigger.TriggerEntities
							-- r(4) = r(0) // arg0
							GenericTrigger.TriggerEntities(arg0)
							-- skip the next [1453] opcodes // advance 1453 lines
						else
							-- r(2) = r(0).field(26) // arg0.BeenHitByMelee
							-- skip the next [14] opcodes // advance 14 lines
							-- r(2) = g[12] // coroutine
							-- r(2) = r(2).field(13) // coroutine.yield
							coroutine.yield()
							-- r(2) = g[22] // Health
							-- r(2) = r(2).field(30) // Health.Get
							-- r(3) = r(0).field(5) // arg0.Entity
							registerVal2 = Health.Get(arg0.Entity)
							-- skip the next [-12] opcodes // advance -12 lines
							-- r(3) = g[19] // cprint
							-- r(4) = c[32] // "GenericTriggers - ShotSwitchMelee - Hit detected"
							cprint("GenericTriggers - ShotSwitchMelee - Hit detected")
							arg0.BeenHitByMelee = true
							-- skip the next [-17] opcodes // advance -17 lines
							-- r(2) = g[22] // Health
							-- r(2) = r(2).field(28) // Health.SetAsInvulnerable
							-- r(3) = r(0).field(5) // arg0.Entity
							-- r(4) = true
							Health.SetAsInvulnerable(arg0.Entity, true)
							-- r(2) = g[14] // GenericTrigger
							-- r(2) = r(2).field(15) // GenericTrigger.TriggerEntities
							-- r(3) = r(0) // arg0
							GenericTrigger.TriggerEntities(arg0)
							-- skip the next [1426] opcodes // advance 1426 lines
						else
							-- r(1) = r(0).field(2) // arg0.Type
							if arg0.Type == "ShotSwitchRanged" then
								-- r(1) = g[19] // cprint
								-- r(2) = c[37] // "GenericTriggers - ShotSwitchRanged detected - Entity: "
								-- r(3) = g[21] // tostring
								-- r(4) = r(0).field(5) // arg0.Entity
								registerVal3 = tostring(arg0.Entity)
								-- r(2) = r(2)..r(3) // ("GenericTriggers - ShotSwitchRanged detected - Entity: " .. registerVal3)
								cprint(("GenericTriggers - ShotSwitchRanged detected - Entity: " .. registerVal3))
								-- r(1) = g[12] // coroutine
								-- r(1) = r(1).field(13) // coroutine.yield
								coroutine.yield()
								-- r(1) = g[22] // Health
								-- r(1) = r(1).field(23) // Health.SetAsOnlyVulnerableToAttackType
								-- r(2) = r(0).field(5) // arg0.Entity
								-- r(3) = g[24] // EAttackType
								-- r(3) = r(3).field(38) // EAttackType.ATTACK_RANGED
								Health.SetAsOnlyVulnerableToAttackType(arg0.Entity, EAttackType.ATTACK_RANGED)
								arg0.BeenHitByRanged = false
								-- r(1) = g[22] // Health
								-- r(1) = r(1).field(28) // Health.SetAsInvulnerable
								-- r(2) = r(0).field(5) // arg0.Entity
								-- r(3) = true
								Health.SetAsInvulnerable(arg0.Entity, true)
								arg0.SetAsInvulnerable = true
								-- r(1) = g[22] // Health
								-- r(1) = r(1).field(30) // Health.Get
								-- r(2) = r(0).field(5) // arg0.Entity
								registerVal1 = Health.Get(arg0.Entity)
								-- r(2) = g[19] // cprint
								-- r(3) = c[40] // "GenericTriggers - ShotSwitchRanged - intial_health = "
								-- r(4) = g[21] // tostring
								-- r(5) = r(1) // registerVal1
								registerVal4 = tostring(registerVal1)
								-- r(3) = r(3)..r(4) // ("GenericTriggers - ShotSwitchRanged - intial_health = " .. registerVal4)
								cprint(("GenericTriggers - ShotSwitchRanged - intial_health = " .. registerVal4))
								-- r(2) = r(0).field(7) // arg0.StartTime
								-- skip the next [3] opcodes // advance 3 lines
								-- r(2) = r(0).field(8) // arg0.EndTime
								if arg0.StartTime ~= 0.000000 or arg0.EndTime ~= 0.000000 then
									-- r(2) = g[9] // Timing
									-- r(2) = r(2).field(10) // Timing.GetTimeOfDay
									registerVal2 = Timing.GetTimeOfDay()
									-- r(3) = r(0).field(39) // arg0.BeenHitByRanged
									-- skip the next [58] opcodes // advance 58 lines
									-- r(3) = g[12] // coroutine
									-- r(3) = r(3).field(13) // coroutine.yield
									coroutine.yield()
									-- r(3) = g[9] // Timing
									-- r(3) = r(3).field(10) // Timing.GetTimeOfDay
									registerVal3 = Timing.GetTimeOfDay()
									-- r(2) = r(3) // registerVal3
									-- r(3) = g[22] // Health
									-- r(3) = r(3).field(30) // Health.Get
									-- r(4) = r(0).field(5) // arg0.Entity
									registerVal3 = Health.Get(arg0.Entity)
									if registerVal3 < registerVal1 then
										-- r(4) = g[19] // cprint
										-- r(5) = c[41] // "GenericTriggers - ShotSwitchRanged - Hit detected"
										cprint("GenericTriggers - ShotSwitchRanged - Hit detected")
										arg0.BeenHitByRanged = true
									end
									-- r(4) = g[9] // Timing
									-- r(4) = r(4).field(33) // Timing.IsTimeOfDayBetween
									-- r(5) = r(0).field(7) // arg0.StartTime
									-- r(6) = r(0).field(8) // arg0.EndTime
									registerVal4 = Timing.IsTimeOfDayBetween(arg0.StartTime, arg0.EndTime)
									-- skip the next [17] opcodes // advance 17 lines
									-- r(4) = r(0).field(28) // arg0.SetAsInvulnerable
									-- skip the next [-30] opcodes // advance -30 lines
									-- r(4) = g[19] // cprint
									-- r(5) = c[42] // "GenericTriggers - ShotSwitchRanged - Its the right time of day to hit it. Setting invulnerablity false for: "
									-- r(6) = g[21] // tostring
									-- r(7) = r(0).field(5) // arg0.Entity
									registerVal6 = tostring(arg0.Entity)
									-- r(5) = r(5)..r(6) // ("GenericTriggers - ShotSwitchRanged - Its the right time of day to hit it. Setting invulnerablity false for: " .. registerVal6)
									cprint(("GenericTriggers - ShotSwitchRanged - Its the right time of day to hit it. Setting invulnerablity false for: " .. registerVal6))
									-- r(4) = g[22] // Health
									-- r(4) = r(4).field(28) // Health.SetAsInvulnerable
									-- r(5) = r(0).field(5) // arg0.Entity
									-- r(6) = false
									Health.SetAsInvulnerable(arg0.Entity, false)
									arg0.SetAsInvulnerable = false
									-- skip the next [-44] opcodes // advance -44 lines
									-- r(4) = r(0).field(28) // arg0.SetAsInvulnerable
									-- skip the next [-47] opcodes // advance -47 lines
									-- r(4) = g[19] // cprint
									-- r(5) = c[43] // "GenericTriggers - ShotSwitchRanged - Its the wrong time of day to hit it. Setting invulnerablity true for: "
									-- r(6) = g[21] // tostring
									-- r(7) = r(0).field(5) // arg0.Entity
									registerVal6 = tostring(arg0.Entity)
									-- r(5) = r(5)..r(6) // ("GenericTriggers - ShotSwitchRanged - Its the wrong time of day to hit it. Setting invulnerablity true for: " .. registerVal6)
									cprint(("GenericTriggers - ShotSwitchRanged - Its the wrong time of day to hit it. Setting invulnerablity true for: " .. registerVal6))
									-- r(4) = g[22] // Health
									-- r(4) = r(4).field(28) // Health.SetAsInvulnerable
									-- r(5) = r(0).field(5) // arg0.Entity
									-- r(6) = true
									Health.SetAsInvulnerable(arg0.Entity, true)
									arg0.SetAsInvulnerable = true
									-- skip the next [-61] opcodes // advance -61 lines
									-- r(3) = g[22] // Health
									-- r(3) = r(3).field(28) // Health.SetAsInvulnerable
									-- r(4) = r(0).field(5) // arg0.Entity
									-- r(5) = true
									Health.SetAsInvulnerable(arg0.Entity, true)
									-- r(3) = g[14] // GenericTrigger
									-- r(3) = r(3).field(15) // GenericTrigger.TriggerEntities
									-- r(4) = r(0) // arg0
									GenericTrigger.TriggerEntities(arg0)
									-- skip the next [1309] opcodes // advance 1309 lines
								else
									-- r(2) = r(0).field(39) // arg0.BeenHitByRanged
									-- skip the next [14] opcodes // advance 14 lines
									-- r(2) = g[12] // coroutine
									-- r(2) = r(2).field(13) // coroutine.yield
									coroutine.yield()
									-- r(2) = g[22] // Health
									-- r(2) = r(2).field(30) // Health.Get
									-- r(3) = r(0).field(5) // arg0.Entity
									registerVal2 = Health.Get(arg0.Entity)
									-- skip the next [-12] opcodes // advance -12 lines
									-- r(3) = g[19] // cprint
									-- r(4) = c[41] // "GenericTriggers - ShotSwitchRanged - Hit detected"
									cprint("GenericTriggers - ShotSwitchRanged - Hit detected")
									arg0.BeenHitByRanged = true
									-- skip the next [-17] opcodes // advance -17 lines
									-- r(2) = g[22] // Health
									-- r(2) = r(2).field(28) // Health.SetAsInvulnerable
									-- r(3) = r(0).field(5) // arg0.Entity
									-- r(4) = true
									Health.SetAsInvulnerable(arg0.Entity, true)
									-- r(2) = g[14] // GenericTrigger
									-- r(2) = r(2).field(15) // GenericTrigger.TriggerEntities
									-- r(3) = r(0) // arg0
									GenericTrigger.TriggerEntities(arg0)
									-- skip the next [1282] opcodes // advance 1282 lines
								else
									-- r(1) = r(0).field(2) // arg0.Type
									if arg0.Type == "ShotSwitchSpell" then
										-- r(1) = g[19] // cprint
										-- r(2) = c[45] // "GenericTriggers - ShotSwitchSpell detected - Entity: "
										-- r(3) = g[21] // tostring
										-- r(4) = r(0).field(5) // arg0.Entity
										registerVal3 = tostring(arg0.Entity)
										-- r(2) = r(2)..r(3) // ("GenericTriggers - ShotSwitchSpell detected - Entity: " .. registerVal3)
										cprint(("GenericTriggers - ShotSwitchSpell detected - Entity: " .. registerVal3))
										-- r(1) = g[12] // coroutine
										-- r(1) = r(1).field(13) // coroutine.yield
										coroutine.yield()
										-- r(1) = g[22] // Health
										-- r(1) = r(1).field(23) // Health.SetAsOnlyVulnerableToAttackType
										-- r(2) = r(0).field(5) // arg0.Entity
										-- r(3) = g[24] // EAttackType
										-- r(3) = r(3).field(46) // EAttackType.ATTACK_SPELL
										Health.SetAsOnlyVulnerableToAttackType(arg0.Entity, EAttackType.ATTACK_SPELL)
										arg0.BeenHitBySpell = false
										-- r(1) = g[22] // Health
										-- r(1) = r(1).field(28) // Health.SetAsInvulnerable
										-- r(2) = r(0).field(5) // arg0.Entity
										-- r(3) = true
										Health.SetAsInvulnerable(arg0.Entity, true)
										arg0.SetAsInvulnerable = true
										-- r(1) = r(0).field(7) // arg0.StartTime
										-- skip the next [3] opcodes // advance 3 lines
										-- r(1) = r(0).field(8) // arg0.EndTime
										if arg0.StartTime ~= 0.000000 or arg0.EndTime ~= 0.000000 then
											-- r(1) = g[9] // Timing
											-- r(1) = r(1).field(10) // Timing.GetTimeOfDay
											registerVal1 = Timing.GetTimeOfDay()
											-- r(2) = r(0).field(47) // arg0.BeenHitBySpell
											-- skip the next [27] opcodes // advance 27 lines
											-- r(2) = g[12] // coroutine
											-- r(2) = r(2).field(13) // coroutine.yield
											coroutine.yield()
											-- r(2) = g[9] // Timing
											-- r(2) = r(2).field(10) // Timing.GetTimeOfDay
											registerVal2 = Timing.GetTimeOfDay()
											-- r(1) = r(2) // registerVal2
											-- r(2) = g[9] // Timing
											-- r(2) = r(2).field(33) // Timing.IsTimeOfDayBetween
											-- r(3) = r(0).field(7) // arg0.StartTime
											-- r(4) = r(0).field(8) // arg0.EndTime
											registerVal2 = Timing.IsTimeOfDayBetween(arg0.StartTime, arg0.EndTime)
											-- skip the next [-17] opcodes // advance -17 lines
											-- r(2) = g[48] // MessageEvents
											-- r(2) = r(2).field(49) // MessageEvents.IsMessageSentTo
											-- r(3) = g[50] // EMessageEventType
											-- r(3) = r(3).field(51) // EMessageEventType.MESSAGE_EVENT_HIT_BY_SPELL_TYPE
											-- r(4) = r(0).field(5) // arg0.Entity
											registerVal2, registerVal3 = MessageEvents.IsMessageSentTo(EMessageEventType.MESSAGE_EVENT_HIT_BY_SPELL_TYPE, arg0.Entity)
											-- skip the next [-25] opcodes // advance -25 lines
											-- r(4) = g[19] // cprint
											-- r(5) = c[52] // "GenericTriggers - ShotSwitchSpell - Hit detected"
											cprint("GenericTriggers - ShotSwitchSpell - Hit detected")
											arg0.BeenHitBySpell = true
											-- skip the next [-30] opcodes // advance -30 lines
											-- r(2) = g[14] // GenericTrigger
											-- r(2) = r(2).field(15) // GenericTrigger.TriggerEntities
											-- r(3) = r(0) // arg0
											GenericTrigger.TriggerEntities(arg0)
											-- skip the next [1212] opcodes // advance 1212 lines
										else
											-- r(1) = r(0).field(47) // arg0.BeenHitBySpell
											-- skip the next [15] opcodes // advance 15 lines
											-- r(1) = g[12] // coroutine
											-- r(1) = r(1).field(13) // coroutine.yield
											coroutine.yield()
											-- r(1) = g[22] // Health
											-- r(1) = r(1).field(30) // Health.Get
											-- r(2) = r(0).field(5) // arg0.Entity
											registerVal1 = Health.Get(arg0.Entity)
											-- r(2) = g[53] // initial_health
											-- skip the next [-13] opcodes // advance -13 lines
											-- r(2) = g[19] // cprint
											-- r(3) = c[52] // "GenericTriggers - ShotSwitchSpell - Hit detected"
											cprint("GenericTriggers - ShotSwitchSpell - Hit detected")
											arg0.BeenHitBySpell = true
											-- skip the next [-18] opcodes // advance -18 lines
											-- r(1) = g[14] // GenericTrigger
											-- r(1) = r(1).field(15) // GenericTrigger.TriggerEntities
											-- r(2) = r(0) // arg0
											GenericTrigger.TriggerEntities(arg0)
											-- skip the next [1189] opcodes // advance 1189 lines
										else
											-- r(1) = r(0).field(2) // arg0.Type
											if arg0.Type == "ProximitySwitch" then
												-- r(1) = g[55] // tonumber
												-- r(2) = r(0).field(56) // arg0.Parameter
												registerVal1 = tonumber(arg0.Parameter)
												-- r(2) = r(0).field(7) // arg0.StartTime
												-- skip the next [3] opcodes // advance 3 lines
												-- r(2) = r(0).field(8) // arg0.EndTime
												if arg0.StartTime ~= 0.000000 or arg0.EndTime ~= 0.000000 then
													-- r(2) = g[9] // Timing
													-- r(2) = r(2).field(10) // Timing.GetTimeOfDay
													registerVal2 = Timing.GetTimeOfDay()
													-- r(3) = g[9] // Timing
													-- r(3) = r(3).field(11) // Timing.GetTimeFrom24HourClock
													-- r(4) = r(0).field(7) // arg0.StartTime
													registerVal3 = Timing.GetTimeFrom24HourClock(arg0.StartTime)
													-- r(4) = g[9] // Timing
													-- r(4) = r(4).field(11) // Timing.GetTimeFrom24HourClock
													-- r(5) = r(0).field(8) // arg0.EndTime
													registerVal4 = Timing.GetTimeFrom24HourClock(arg0.EndTime)
													if registerVal4 < registerVal3 then
														-- skip the next [2] opcodes // advance 2 lines
														if registerVal4 >= registerVal2 or registerVal2 >= registerVal3 then
															-- r(5) = g[57] // IsDistanceBetweenThingsUnder
															-- r(6) = r(0).field(5) // arg0.Entity
															-- r(7) = g[58] // QuestManager
															-- r(7) = r(7).field(59) // QuestManager.HeroEntity
															-- r(8) = r(1) // registerVal1
															local registerVal5 = IsDistanceBetweenThingsUnder(arg0.Entity, QuestManager.HeroEntity, registerVal1)
															if registerVal5 then
																-- r(5) = g[60] // ECGenericTrigger
																-- r(5) = r(5).field(4) // ECGenericTrigger.IsAvailable
																-- r(6) = r(0).field(5) // arg0.Entity
																registerVal5 = ECGenericTrigger.IsAvailable(arg0.Entity)
																-- skip the next [47] opcodes // advance 47 lines
																-- r(5) = g[60] // ECGenericTrigger
																-- r(5) = r(5).field(61) // ECGenericTrigger.GetIsActive
																-- r(6) = r(0).field(5) // arg0.Entity
																registerVal5 = ECGenericTrigger.GetIsActive(arg0.Entity)
																-- skip the next [41] opcodes // advance 41 lines
															else
															else
																-- r(5) = g[12] // coroutine
																-- r(5) = r(5).field(13) // coroutine.yield
																coroutine.yield()
																-- r(5) = g[9] // Timing
																-- r(5) = r(5).field(10) // Timing.GetTimeOfDay
																registerVal5 = Timing.GetTimeOfDay()
																-- r(2) = r(5) // registerVal5
																-- skip the next [-32] opcodes // advance -32 lines
																-- skip the next [32] opcodes // advance 32 lines
															else
																-- skip the next [22] opcodes // advance 22 lines
																-- skip the next [20] opcodes // advance 20 lines
																-- r(5) = g[57] // IsDistanceBetweenThingsUnder
																-- r(6) = r(0).field(5) // arg0.Entity
																-- r(7) = g[58] // QuestManager
																-- r(7) = r(7).field(59) // QuestManager.HeroEntity
																-- r(8) = r(1) // registerVal1
																registerVal5 = IsDistanceBetweenThingsUnder(arg0.Entity, QuestManager.HeroEntity, registerVal1)
																if registerVal3 < registerVal5 and registerVal5 < registerVal4 and registerVal5 then
																	-- r(5) = g[60] // ECGenericTrigger
																	-- r(5) = r(5).field(4) // ECGenericTrigger.IsAvailable
																	-- r(6) = r(0).field(5) // arg0.Entity
																	registerVal5 = ECGenericTrigger.IsAvailable(arg0.Entity)
																	-- skip the next [14] opcodes // advance 14 lines
																	-- r(5) = g[60] // ECGenericTrigger
																	-- r(5) = r(5).field(61) // ECGenericTrigger.GetIsActive
																	-- r(6) = r(0).field(5) // arg0.Entity
																	registerVal5 = ECGenericTrigger.GetIsActive(arg0.Entity)
																	-- skip the next [8] opcodes // advance 8 lines
																else
																	-- r(5) = g[12] // coroutine
																	-- r(5) = r(5).field(13) // coroutine.yield
																	coroutine.yield()
																	-- r(5) = g[9] // Timing
																	-- r(5) = r(5).field(10) // Timing.GetTimeOfDay
																	registerVal5 = Timing.GetTimeOfDay()
																	-- r(2) = r(5) // registerVal5
																	-- skip the next [-32] opcodes // advance -32 lines
																end
															end
														end
													end
													-- r(5) = g[14] // GenericTrigger
													-- r(5) = r(5).field(15) // GenericTrigger.TriggerEntities
													-- r(6) = r(0) // arg0
													GenericTrigger.TriggerEntities(arg0)
													-- skip the next [1094] opcodes // advance 1094 lines
												else
													-- r(2) = g[57] // IsDistanceBetweenThingsUnder
													-- r(3) = r(0).field(5) // arg0.Entity
													-- r(4) = g[58] // QuestManager
													-- r(4) = r(4).field(59) // QuestManager.HeroEntity
													-- r(5) = r(1) // registerVal1
													registerVal2 = IsDistanceBetweenThingsUnder(arg0.Entity, QuestManager.HeroEntity, registerVal1)
													if registerVal2 then
														-- r(2) = g[60] // ECGenericTrigger
														-- r(2) = r(2).field(4) // ECGenericTrigger.IsAvailable
														-- r(3) = r(0).field(5) // arg0.Entity
														registerVal2 = ECGenericTrigger.IsAvailable(arg0.Entity)
														-- skip the next [10] opcodes // advance 10 lines
														-- r(2) = g[60] // ECGenericTrigger
														-- r(2) = r(2).field(61) // ECGenericTrigger.GetIsActive
														-- r(3) = r(0).field(5) // arg0.Entity
														registerVal2 = ECGenericTrigger.GetIsActive(arg0.Entity)
														-- skip the next [4] opcodes // advance 4 lines
													else
														-- r(2) = g[12] // coroutine
														-- r(2) = r(2).field(13) // coroutine.yield
														coroutine.yield()
														-- skip the next [-24] opcodes // advance -24 lines
													end
													-- r(2) = g[14] // GenericTrigger
													-- r(2) = r(2).field(15) // GenericTrigger.TriggerEntities
													-- r(3) = r(0) // arg0
													GenericTrigger.TriggerEntities(arg0)
													-- skip the next [1065] opcodes // advance 1065 lines
												else
													-- r(1) = r(0).field(2) // arg0.Type
													if arg0.Type == "Counter" then
														-- r(1) = g[63] // Gameflow
														-- r(2) = r(0).field(64) // arg0.CounterName
														Gameflow[arg0.CounterName] = 0.000000
														-- r(1) = g[55] // tonumber
														-- r(2) = r(0).field(56) // arg0.Parameter
														registerVal1 = tonumber(arg0.Parameter)
														-- r(2) = g[19] // cprint
														-- r(3) = c[65] // "GenericTriggers - Counter active. Counter waiting to reach: "
														-- r(4) = r(1) // registerVal1
														-- r(3) = r(3)..r(4) // ("GenericTriggers - Counter active. Counter waiting to reach: " .. registerVal1)
														cprint(("GenericTriggers - Counter active. Counter waiting to reach: " .. registerVal1))
														-- r(2) = r(0).field(66) // arg0.CounterComplete
														-- skip the next [10] opcodes // advance 10 lines
														-- r(2) = g[12] // coroutine
														-- r(2) = r(2).field(13) // coroutine.yield
														coroutine.yield()
														-- r(2) = g[63] // Gameflow
														-- r(3) = r(0).field(64) // arg0.CounterName
														-- r(2) = r(2)[r(3)] // Gameflow[arg0.CounterName]
														-- skip the next [-11] opcodes // advance -11 lines
														arg0.CounterComplete = true
														-- skip the next [-13] opcodes // advance -13 lines
														-- r(2) = g[19] // cprint
														-- r(3) = c[67] // "GenericTriggers - Counter variable == parameter value. Triggering..."
														cprint("GenericTriggers - Counter variable == parameter value. Triggering...")
														-- r(2) = g[14] // GenericTrigger
														-- r(2) = r(2).field(15) // GenericTrigger.TriggerEntities
														-- r(3) = r(0) // arg0
														GenericTrigger.TriggerEntities(arg0)
														-- skip the next [1030] opcodes // advance 1030 lines
													else
														-- r(1) = r(0).field(2) // arg0.Type
														if arg0.Type == "ChangeFaction" then
															-- r(1) = g[19] // cprint
															-- r(2) = c[69] // "GenericTriggers - ChangeFaction active"
															cprint("GenericTriggers - ChangeFaction active")
															-- r(1) = g[70] // EntityManager
															-- r(1) = r(1).field(71) // EntityManager.GetEntityFromRecordID
															-- r(2) = r(0).field(72) // arg0.EntityReference
															registerVal1 = EntityManager.GetEntityFromRecordID(arg0.EntityReference)
															-- skip the next [1018] opcodes // advance 1018 lines
															-- r(2) = r(1):c[74] // registerVal1:IsAlive
															registerVal2 = registerVal1:IsAlive()
															-- skip the next [1014] opcodes // advance 1014 lines
															-- r(2) = r(0).field(56) // arg0.Parameter
															if arg0.Parameter ~= "" then
																-- r(2) = g[76] // EFactionID
																-- r(3) = r(0).field(56) // arg0.Parameter
																-- r(2) = r(2)[r(3)] // EFactionID[arg0.Parameter]
																if EFactionID[arg0.Parameter] ~= nil then
																	-- r(2) = g[77] // Faction
																	-- r(2) = r(2).field(78) // Faction.SetCurrentFaction
																	-- r(3) = r(1) // registerVal1
																	-- r(4) = g[76] // EFactionID
																	-- r(5) = r(0).field(56) // arg0.Parameter
																	-- r(4) = r(4)[r(5)] // EFactionID[arg0.Parameter]
																	Faction.SetCurrentFaction(registerVal1, EFactionID[arg0.Parameter])
																	-- r(2) = g[19] // cprint
																	-- r(3) = c[79] // "GenericTriggers - ChangeFaction - The Faction of an entity has been changed"
																	cprint("GenericTriggers - ChangeFaction - The Faction of an entity has been changed")
																	-- skip the next [995] opcodes // advance 995 lines
																else
																	-- r(2) = g[80] // Debug
																	-- r(2) = r(2).field(81) // Debug.Error
																	-- r(3) = c[82] // "GenericTriggers - ChangeFaction - ERROR - Faction derived from TriggerParameter field not found in EFactionID. Faction inputted as: "
																	-- r(4) = r(0).field(56) // arg0.Parameter
																	-- r(3) = r(3)..r(4) // ("GenericTriggers - ChangeFaction - ERROR - Faction derived from TriggerParameter field not found in EFactionID. Faction inputted as: " .. arg0.Parameter)
																	Debug.Error(("GenericTriggers - ChangeFaction - ERROR - Faction derived from TriggerParameter field not found in EFactionID. Faction inputted as: " .. arg0.Parameter))
																	-- skip the next [988] opcodes // advance 988 lines
																else
																	-- r(2) = g[80] // Debug
																	-- r(2) = r(2).field(81) // Debug.Error
																	-- r(3) = c[83] // "GenericTriggers - ChangeFaction - ERROR - empty string in TriggerParameter field?"
																	Debug.Error("GenericTriggers - ChangeFaction - ERROR - empty string in TriggerParameter field?")
																	-- skip the next [983] opcodes // advance 983 lines
																else
																	-- r(1) = r(0).field(2) // arg0.Type
																	if arg0.Type == "FollowTriggerZone" then
																		-- r(1) = g[19] // cprint
																		-- r(2) = c[85] // "GenericTriggers - FollowTriggerZone active"
																		cprint("GenericTriggers - FollowTriggerZone active")
																		-- r(1) = g[55] // tonumber
																		-- r(2) = r(0).field(56) // arg0.Parameter
																		registerVal1 = tonumber(arg0.Parameter)
																		-- r(2) = g[86] // Trigger
																		-- r(2) = r(2).field(87) // Trigger.SetToTriggerOnSpecificEntity
																		-- r(3) = r(0).field(5) // arg0.Entity
																		-- r(4) = g[88] // GetLocalHero
																		Trigger.SetToTriggerOnSpecificEntity(arg0.Entity, GetLocalHero())
																		-- r(2) = r(0):c[89] // arg0:HasTriggerFired
																		-- r(4) = r(0).field(5) // arg0.Entity
																		registerVal2 = arg0:HasTriggerFired(arg0.Entity)
																		-- skip the next [4] opcodes // advance 4 lines
																		-- r(2) = g[12] // coroutine
																		-- r(2) = r(2).field(13) // coroutine.yield
																		coroutine.yield()
																		-- skip the next [-9] opcodes // advance -9 lines
																		-- r(2) = g[19] // cprint
																		-- r(3) = c[90] // "GenericTriggers - FollowTriggerZone - hero entered zone"
																		cprint("GenericTriggers - FollowTriggerZone - hero entered zone")
																		-- r(2) = g[70] // EntityManager
																		-- r(2) = r(2).field(71) // EntityManager.GetEntityFromRecordID
																		-- r(3) = r(0).field(72) // arg0.EntityReference
																		registerVal2 = EntityManager.GetEntityFromRecordID(arg0.EntityReference)
																		-- skip the next [950] opcodes // advance 950 lines
																		-- r(3) = r(2):c[74] // registerVal2:IsAlive
																		registerVal3 = registerVal2:IsAlive()
																		-- skip the next [946] opcodes // advance 946 lines
																		-- r(3) = g[91] // Follow
																		-- r(3) = r(3).field(4) // Follow.IsAvailable
																		-- r(4) = r(2) // registerVal2
																		registerVal3 = Follow.IsAvailable(registerVal2)
																		-- skip the next [940] opcodes // advance 940 lines
																		-- r(3) = g[91] // Follow
																		-- r(3) = r(3).field(92) // Follow.FollowEntity
																		-- r(4) = r(2) // registerVal2
																		-- r(5) = g[58] // QuestManager
																		-- r(5) = r(5).field(59) // QuestManager.HeroEntity
																		-- r(6) = r(1) // registerVal1
																		Follow.FollowEntity(registerVal2, QuestManager.HeroEntity, registerVal1)
																		-- r(3) = g[19] // cprint
																		-- r(4) = c[93] // "GenericTriggers - FollowTriggerZone - An entity has been set to follow the hero"
																		cprint("GenericTriggers - FollowTriggerZone - An entity has been set to follow the hero")
																		-- skip the next [929] opcodes // advance 929 lines
																	else
																		-- r(1) = r(0).field(2) // arg0.Type
																		if arg0.Type == "StopFollowTriggerZone" then
																			-- r(1) = g[19] // cprint
																			-- r(2) = c[95] // "GenericTriggers - StopFollowTriggerZone active"
																			cprint("GenericTriggers - StopFollowTriggerZone active")
																			-- r(1) = g[86] // Trigger
																			-- r(1) = r(1).field(87) // Trigger.SetToTriggerOnSpecificEntity
																			-- r(2) = r(0).field(5) // arg0.Entity
																			-- r(3) = g[88] // GetLocalHero
																			Trigger.SetToTriggerOnSpecificEntity(arg0.Entity, GetLocalHero())
																			-- r(1) = r(0):c[89] // arg0:HasTriggerFired
																			-- r(3) = r(0).field(5) // arg0.Entity
																			registerVal1 = arg0:HasTriggerFired(arg0.Entity)
																			-- skip the next [4] opcodes // advance 4 lines
																			-- r(1) = g[12] // coroutine
																			-- r(1) = r(1).field(13) // coroutine.yield
																			coroutine.yield()
																			-- skip the next [-9] opcodes // advance -9 lines
																			-- r(1) = g[19] // cprint
																			-- r(2) = c[96] // "GenericTriggers - StopFollowTriggerZone - hero entered zone"
																			cprint("GenericTriggers - StopFollowTriggerZone - hero entered zone")
																			-- r(1) = g[70] // EntityManager
																			-- r(1) = r(1).field(71) // EntityManager.GetEntityFromRecordID
																			-- r(2) = r(0).field(72) // arg0.EntityReference
																			registerVal1 = EntityManager.GetEntityFromRecordID(arg0.EntityReference)
																			-- skip the next [899] opcodes // advance 899 lines
																			-- r(2) = r(1):c[74] // registerVal1:IsAlive
																			registerVal2 = registerVal1:IsAlive()
																			-- skip the next [895] opcodes // advance 895 lines
																			-- r(2) = g[91] // Follow
																			-- r(2) = r(2).field(4) // Follow.IsAvailable
																			-- r(3) = r(1) // registerVal1
																			registerVal2 = Follow.IsAvailable(registerVal1)
																			-- skip the next [889] opcodes // advance 889 lines
																			-- r(2) = g[91] // Follow
																			-- r(2) = r(2).field(97) // Follow.StopFollowing
																			-- r(3) = r(1) // registerVal1
																			Follow.StopFollowing(registerVal1)
																			-- r(2) = g[19] // cprint
																			-- r(3) = c[98] // "GenericTriggers - StopFollowTriggerZone - An entity has been set to STOP following the hero"
																			cprint("GenericTriggers - StopFollowTriggerZone - An entity has been set to STOP following the hero")
																			-- skip the next [881] opcodes // advance 881 lines
																		else
																			-- r(1) = r(0).field(2) // arg0.Type
																			if arg0.Type == "HeroTriggerZone" then
																				-- r(1) = g[19] // cprint
																				-- r(2) = c[100] // "GenericTriggers - HeroTriggerZone active: "
																				-- r(3) = g[21] // tostring
																				-- r(4) = r(0).field(5) // arg0.Entity
																				registerVal3 = tostring(arg0.Entity)
																				-- r(2) = r(2)..r(3) // ("GenericTriggers - HeroTriggerZone active: " .. registerVal3)
																				cprint(("GenericTriggers - HeroTriggerZone active: " .. registerVal3))
																				-- r(1) = g[55] // tonumber
																				-- r(2) = r(0).field(56) // arg0.Parameter
																				registerVal1 = tonumber(arg0.Parameter)
																				-- r(2) = g[86] // Trigger
																				-- r(2) = r(2).field(87) // Trigger.SetToTriggerOnSpecificEntity
																				-- r(3) = r(0).field(5) // arg0.Entity
																				-- r(4) = g[88] // GetLocalHero
																				Trigger.SetToTriggerOnSpecificEntity(arg0.Entity, GetLocalHero())
																				-- r(2) = g[86] // Trigger
																				-- r(2) = r(2).field(101) // Trigger.IsTriggerEntityInsideTriggerVolume
																				-- r(3) = r(0).field(5) // arg0.Entity
																				registerVal2 = Trigger.IsTriggerEntityInsideTriggerVolume(arg0.Entity)
																				-- skip the next [4] opcodes // advance 4 lines
																				-- r(2) = g[12] // coroutine
																				-- r(2) = r(2).field(13) // coroutine.yield
																				coroutine.yield()
																				-- skip the next [-10] opcodes // advance -10 lines
																				-- r(2) = g[19] // cprint
																				-- r(3) = c[102] // "GenericTriggers - HeroTriggerZone - hero entered zone: "
																				-- r(4) = g[21] // tostring
																				-- r(5) = r(0).field(5) // arg0.Entity
																				registerVal4 = tostring(arg0.Entity)
																				-- r(3) = r(3)..r(4) // ("GenericTriggers - HeroTriggerZone - hero entered zone: " .. registerVal4)
																				cprint(("GenericTriggers - HeroTriggerZone - hero entered zone: " .. registerVal4))
																				-- r(2) = g[70] // EntityManager
																				-- r(2) = r(2).field(71) // EntityManager.GetEntityFromRecordID
																				-- r(3) = r(0).field(72) // arg0.EntityReference
																				registerVal2 = EntityManager.GetEntityFromRecordID(arg0.EntityReference)
																				-- skip the next [18] opcodes // advance 18 lines
																				-- r(3) = r(2):c[74] // registerVal2:IsAlive
																				registerVal3 = registerVal2:IsAlive()
																				if registerVal2 ~= nil and registerVal3 then
																					-- r(3) = g[86] // Trigger
																					-- r(3) = r(3).field(103) // Trigger.IsSpecificEntityInsideTriggerVolume
																					-- r(4) = r(0).field(5) // arg0.Entity
																					-- r(5) = r(2) // registerVal2
																					registerVal3 = Trigger.IsSpecificEntityInsideTriggerVolume(arg0.Entity, registerVal2)
																					-- skip the next [4] opcodes // advance 4 lines
																					-- r(3) = g[12] // coroutine
																					-- r(3) = r(3).field(13) // coroutine.yield
																					coroutine.yield()
																					-- skip the next [-11] opcodes // advance -11 lines
																					-- r(3) = g[19] // cprint
																					-- r(4) = c[104] // "GenericTriggers - HeroTriggerZone - character from EntityReference also entered zone"
																					cprint("GenericTriggers - HeroTriggerZone - character from EntityReference also entered zone")
																				end
																				if registerVal1 == 1.000000 then
																					-- r(3) = r(0):c[106] // arg0:WaitFor
		-- OP Count: 0x8
		-- Constant Count: 0x3
		-- Registers Count: 0x2
		-- UpValue Count: 0x1
		-- SubFuncs Count: 0x0
																					local function __FUNC_46AF_()
																						-- r(0) = g[0] // Trigger
																						-- r(0) = r(0).field(1) // Trigger.IsTriggerEntityInsideTriggerVolume
																						-- r(1) = r(1).field(2) // .Entity
																						local registerVal0 = Trigger.IsTriggerEntityInsideTriggerVolume(.Entity)
																						return (not registerVal0)
																						-- return
																					end

																					-- r(0) = r(0) // arg0
																					arg0:WaitFor(__FUNC_46AF_)
																					-- r(3) = g[19] // cprint
																					-- r(4) = c[107] // "GenericTriggers - HeroTriggerZone - hero entered and now left"
																					cprint("GenericTriggers - HeroTriggerZone - hero entered and now left")
																				end
																				-- r(3) = g[86] // Trigger
																				-- r(3) = r(3).field(108) // Trigger.SetAsActive
																				-- r(4) = r(0).field(5) // arg0.Entity
																				-- r(5) = false
																				Trigger.SetAsActive(arg0.Entity, false)
																				-- r(3) = g[14] // GenericTrigger
																				-- r(3) = r(3).field(15) // GenericTrigger.TriggerEntities
																				-- r(4) = r(0) // arg0
																				GenericTrigger.TriggerEntities(arg0)
																				-- skip the next [802] opcodes // advance 802 lines
																			else
																				-- r(1) = r(0).field(2) // arg0.Type
																				if arg0.Type == "RemoteHeroTriggerZone" then
																					-- r(1) = g[19] // cprint
																					-- r(2) = c[110] // "GenericTriggers - RemoteHeroTriggerZone active"
																					cprint("GenericTriggers - RemoteHeroTriggerZone active")
																					-- r(1) = g[55] // tonumber
																					-- r(2) = r(0).field(56) // arg0.Parameter
																					registerVal1 = tonumber(arg0.Parameter)
																					-- r(2) = g[86] // Trigger
																					-- r(2) = r(2).field(111) // Trigger.SetToTriggerOnRemoteHero
																					-- r(3) = r(0).field(5) // arg0.Entity
																					Trigger.SetToTriggerOnRemoteHero(arg0.Entity)
																					-- r(2) = r(0):c[89] // arg0:HasTriggerFired
																					-- r(4) = r(0).field(5) // arg0.Entity
																					registerVal2 = arg0:HasTriggerFired(arg0.Entity)
																					-- skip the next [4] opcodes // advance 4 lines
																					-- r(2) = g[12] // coroutine
																					-- r(2) = r(2).field(13) // coroutine.yield
																					coroutine.yield()
																					-- skip the next [-9] opcodes // advance -9 lines
																					-- r(2) = g[19] // cprint
																					-- r(3) = c[112] // "GenericTriggers - RemoteHeroTriggerZone - remote hero entered zone"
																					cprint("GenericTriggers - RemoteHeroTriggerZone - remote hero entered zone")
																					-- r(2) = g[70] // EntityManager
																					-- r(2) = r(2).field(71) // EntityManager.GetEntityFromRecordID
																					-- r(3) = r(0).field(72) // arg0.EntityReference
																					registerVal2 = EntityManager.GetEntityFromRecordID(arg0.EntityReference)
																					-- skip the next [18] opcodes // advance 18 lines
																					-- r(3) = r(2):c[74] // registerVal2:IsAlive
																					registerVal3 = registerVal2:IsAlive()
																					if registerVal2 ~= nil and registerVal3 then
																						-- r(3) = g[86] // Trigger
																						-- r(3) = r(3).field(103) // Trigger.IsSpecificEntityInsideTriggerVolume
																						-- r(4) = r(0).field(5) // arg0.Entity
																						-- r(5) = r(2) // registerVal2
																						registerVal3 = Trigger.IsSpecificEntityInsideTriggerVolume(arg0.Entity, registerVal2)
																						-- skip the next [4] opcodes // advance 4 lines
																						-- r(3) = g[12] // coroutine
																						-- r(3) = r(3).field(13) // coroutine.yield
																						coroutine.yield()
																						-- skip the next [-11] opcodes // advance -11 lines
																						-- r(3) = g[19] // cprint
																						-- r(4) = c[113] // "GenericTriggers - RemoteHeroTriggerZone - character from EntityReference also entered zone"
																						cprint("GenericTriggers - RemoteHeroTriggerZone - character from EntityReference also entered zone")
																					end
																					-- r(3) = g[14] // GenericTrigger
																					-- r(3) = r(3).field(15) // GenericTrigger.TriggerEntities
																					-- r(4) = r(0) // arg0
																					GenericTrigger.TriggerEntities(arg0)
																					-- skip the next [748] opcodes // advance 748 lines
																				else
																					-- r(1) = r(0).field(2) // arg0.Type
																					if arg0.Type == "EitherPlayerTriggerZone" then
																						-- r(1) = g[21] // tostring
																						-- r(2) = r(0).field(5) // arg0.Entity
																						registerVal1 = tostring(arg0.Entity)
																						-- r(2) = g[19] // cprint
																						-- r(3) = c[115] // "GenericTriggers - EitherPlayerTriggerZone active: "
																						-- r(4) = r(1) // registerVal1
																						-- r(3) = r(3)..r(4) // ("GenericTriggers - EitherPlayerTriggerZone active: " .. registerVal1)
																						cprint(("GenericTriggers - EitherPlayerTriggerZone active: " .. registerVal1))
																						-- r(2) = g[86] // Trigger
																						-- r(2) = r(2).field(116) // Trigger.SetToTriggerOnAnyPlayerEntity
																						-- r(3) = r(0).field(5) // arg0.Entity
																						Trigger.SetToTriggerOnAnyPlayerEntity(arg0.Entity)
																						-- r(2) = r(0):c[89] // arg0:HasTriggerFired
																						-- r(4) = r(0).field(5) // arg0.Entity
																						registerVal2 = arg0:HasTriggerFired(arg0.Entity)
																						-- skip the next [4] opcodes // advance 4 lines
																						-- r(2) = g[12] // coroutine
																						-- r(2) = r(2).field(13) // coroutine.yield
																						coroutine.yield()
																						-- skip the next [-9] opcodes // advance -9 lines
																						-- r(2) = g[19] // cprint
																						-- r(3) = c[117] // "GenericTriggers - EitherPlayerTriggerZone - either hero entered zone: "
																						-- r(4) = r(1) // registerVal1
																						-- r(3) = r(3)..r(4) // ("GenericTriggers - EitherPlayerTriggerZone - either hero entered zone: " .. registerVal1)
																						cprint(("GenericTriggers - EitherPlayerTriggerZone - either hero entered zone: " .. registerVal1))
																						-- r(2) = g[70] // EntityManager
																						-- r(2) = r(2).field(71) // EntityManager.GetEntityFromRecordID
																						-- r(3) = r(0).field(72) // arg0.EntityReference
																						registerVal2 = EntityManager.GetEntityFromRecordID(arg0.EntityReference)
																						-- skip the next [18] opcodes // advance 18 lines
																						-- r(3) = r(2):c[74] // registerVal2:IsAlive
																						registerVal3 = registerVal2:IsAlive()
																						if registerVal2 ~= nil and registerVal3 then
																							-- r(3) = g[86] // Trigger
																							-- r(3) = r(3).field(103) // Trigger.IsSpecificEntityInsideTriggerVolume
																							-- r(4) = r(0).field(5) // arg0.Entity
																							-- r(5) = r(2) // registerVal2
																							registerVal3 = Trigger.IsSpecificEntityInsideTriggerVolume(arg0.Entity, registerVal2)
																							-- skip the next [4] opcodes // advance 4 lines
																							-- r(3) = g[12] // coroutine
																							-- r(3) = r(3).field(13) // coroutine.yield
																							coroutine.yield()
																							-- skip the next [-11] opcodes // advance -11 lines
																							-- r(3) = g[19] // cprint
																							-- r(4) = c[118] // "GenericTriggers - EitherPlayerTriggerZone - character from EntityReference also entered zone"
																							cprint("GenericTriggers - EitherPlayerTriggerZone - character from EntityReference also entered zone")
																						end
																						-- r(3) = g[14] // GenericTrigger
																						-- r(3) = r(3).field(15) // GenericTrigger.TriggerEntities
																						-- r(4) = r(0) // arg0
																						GenericTrigger.TriggerEntities(arg0)
																						-- skip the next [690] opcodes // advance 690 lines
																					else
																						-- r(1) = r(0).field(2) // arg0.Type
																						if arg0.Type == "BothPlayersTriggerZone" then
																							-- r(1) = g[19] // cprint
																							-- r(2) = c[120] // "GenericTriggers - BothPlayersTriggerZone active"
																							cprint("GenericTriggers - BothPlayersTriggerZone active")
																							-- r(1) = g[86] // Trigger
																							-- r(1) = r(1).field(121) // Trigger.SetToTriggerOnBothPlayerEntities
																							-- r(2) = r(0).field(5) // arg0.Entity
																							Trigger.SetToTriggerOnBothPlayerEntities(arg0.Entity)
																							-- r(1) = r(0):c[89] // arg0:HasTriggerFired
																							-- r(3) = r(0).field(5) // arg0.Entity
																							registerVal1 = arg0:HasTriggerFired(arg0.Entity)
																							-- skip the next [4] opcodes // advance 4 lines
																							-- r(1) = g[12] // coroutine
																							-- r(1) = r(1).field(13) // coroutine.yield
																							coroutine.yield()
																							-- skip the next [-9] opcodes // advance -9 lines
																							-- r(1) = g[19] // cprint
																							-- r(2) = c[122] // "GenericTriggers - BothPlayersTriggerZone - both heroes entered zone"
																							cprint("GenericTriggers - BothPlayersTriggerZone - both heroes entered zone")
																							-- r(1) = g[70] // EntityManager
																							-- r(1) = r(1).field(71) // EntityManager.GetEntityFromRecordID
																							-- r(2) = r(0).field(72) // arg0.EntityReference
																							registerVal1 = EntityManager.GetEntityFromRecordID(arg0.EntityReference)
																							-- skip the next [18] opcodes // advance 18 lines
																							-- r(2) = r(1):c[74] // registerVal1:IsAlive
																							registerVal2 = registerVal1:IsAlive()
																							if registerVal1 ~= nil and registerVal2 then
																								-- r(2) = g[86] // Trigger
																								-- r(2) = r(2).field(103) // Trigger.IsSpecificEntityInsideTriggerVolume
																								-- r(3) = r(0).field(5) // arg0.Entity
																								-- r(4) = r(1) // registerVal1
																								registerVal2 = Trigger.IsSpecificEntityInsideTriggerVolume(arg0.Entity, registerVal1)
																								-- skip the next [4] opcodes // advance 4 lines
																								-- r(2) = g[12] // coroutine
																								-- r(2) = r(2).field(13) // coroutine.yield
																								coroutine.yield()
																								-- skip the next [-11] opcodes // advance -11 lines
																								-- r(2) = g[19] // cprint
																								-- r(3) = c[123] // "GenericTriggers - BothPlayersTriggerZone - character from EntityReference also entered zone"
																								cprint("GenericTriggers - BothPlayersTriggerZone - character from EntityReference also entered zone")
																							end
																							-- r(2) = g[14] // GenericTrigger
																							-- r(2) = r(2).field(15) // GenericTrigger.TriggerEntities
																							-- r(3) = r(0) // arg0
																							GenericTrigger.TriggerEntities(arg0)
																							-- skip the next [639] opcodes // advance 639 lines
																						else
																							-- r(1) = r(0).field(2) // arg0.Type
																							if arg0.Type == "BothPlayersAndDogsTriggerZone" then
																								-- r(1) = g[19] // cprint
																								-- r(2) = c[125] // "GenericTriggers - BothPlayersAndDogsTriggerZone active"
																								cprint("GenericTriggers - BothPlayersAndDogsTriggerZone active")
																								-- r(1) = g[86] // Trigger
																								-- r(1) = r(1).field(126) // Trigger.SetToTriggerOnBothPlayerEntitiesAndDogs
																								-- r(2) = r(0).field(5) // arg0.Entity
																								Trigger.SetToTriggerOnBothPlayerEntitiesAndDogs(arg0.Entity)
																								-- r(1) = r(0):c[89] // arg0:HasTriggerFired
																								-- r(3) = r(0).field(5) // arg0.Entity
																								registerVal1 = arg0:HasTriggerFired(arg0.Entity)
																								-- skip the next [4] opcodes // advance 4 lines
																								-- r(1) = g[12] // coroutine
																								-- r(1) = r(1).field(13) // coroutine.yield
																								coroutine.yield()
																								-- skip the next [-9] opcodes // advance -9 lines
																								-- r(1) = g[19] // cprint
																								-- r(2) = c[127] // "GenericTriggers - BothPlayersAndDogsTriggerZone - both heroes and both dogs entered zone"
																								cprint("GenericTriggers - BothPlayersAndDogsTriggerZone - both heroes and both dogs entered zone")
																								-- r(1) = g[70] // EntityManager
																								-- r(1) = r(1).field(71) // EntityManager.GetEntityFromRecordID
																								-- r(2) = r(0).field(72) // arg0.EntityReference
																								registerVal1 = EntityManager.GetEntityFromRecordID(arg0.EntityReference)
																								-- skip the next [18] opcodes // advance 18 lines
																								-- r(2) = r(1):c[74] // registerVal1:IsAlive
																								registerVal2 = registerVal1:IsAlive()
																								if registerVal1 ~= nil and registerVal2 then
																									-- r(2) = g[86] // Trigger
																									-- r(2) = r(2).field(103) // Trigger.IsSpecificEntityInsideTriggerVolume
																									-- r(3) = r(0).field(5) // arg0.Entity
																									-- r(4) = r(1) // registerVal1
																									registerVal2 = Trigger.IsSpecificEntityInsideTriggerVolume(arg0.Entity, registerVal1)
																									-- skip the next [4] opcodes // advance 4 lines
																									-- r(2) = g[12] // coroutine
																									-- r(2) = r(2).field(13) // coroutine.yield
																									coroutine.yield()
																									-- skip the next [-11] opcodes // advance -11 lines
																									-- r(2) = g[19] // cprint
																									-- r(3) = c[128] // "GenericTriggers - BothPlayersAndDogsTriggerZone - character from EntityReference also entered zone"
																									cprint("GenericTriggers - BothPlayersAndDogsTriggerZone - character from EntityReference also entered zone")
																								end
																								-- r(2) = g[14] // GenericTrigger
																								-- r(2) = r(2).field(15) // GenericTrigger.TriggerEntities
																								-- r(3) = r(0) // arg0
																								GenericTrigger.TriggerEntities(arg0)
																								-- skip the next [588] opcodes // advance 588 lines
																							else
																								-- r(1) = r(0).field(2) // arg0.Type
																								if arg0.Type == "BothDogsTriggerZone" then
																									-- r(1) = g[19] // cprint
																									-- r(2) = c[130] // "GenericTriggers - BothDogsTriggerZone active"
																									cprint("GenericTriggers - BothDogsTriggerZone active")
																									-- r(1) = g[86] // Trigger
																									-- r(1) = r(1).field(131) // Trigger.SetToTriggerOnBothDogs
																									-- r(2) = r(0).field(5) // arg0.Entity
																									Trigger.SetToTriggerOnBothDogs(arg0.Entity)
																									-- r(1) = r(0):c[89] // arg0:HasTriggerFired
																									-- r(3) = r(0).field(5) // arg0.Entity
																									registerVal1 = arg0:HasTriggerFired(arg0.Entity)
																									-- skip the next [4] opcodes // advance 4 lines
																									-- r(1) = g[12] // coroutine
																									-- r(1) = r(1).field(13) // coroutine.yield
																									coroutine.yield()
																									-- skip the next [-9] opcodes // advance -9 lines
																									-- r(1) = g[19] // cprint
																									-- r(2) = c[132] // "GenericTriggers - BothDogsTriggerZone - both dogs entered zone"
																									cprint("GenericTriggers - BothDogsTriggerZone - both dogs entered zone")
																									-- r(1) = g[70] // EntityManager
																									-- r(1) = r(1).field(71) // EntityManager.GetEntityFromRecordID
																									-- r(2) = r(0).field(72) // arg0.EntityReference
																									registerVal1 = EntityManager.GetEntityFromRecordID(arg0.EntityReference)
																									-- skip the next [18] opcodes // advance 18 lines
																									-- r(2) = r(1):c[74] // registerVal1:IsAlive
																									registerVal2 = registerVal1:IsAlive()
																									if registerVal1 ~= nil and registerVal2 then
																										-- r(2) = g[86] // Trigger
																										-- r(2) = r(2).field(103) // Trigger.IsSpecificEntityInsideTriggerVolume
																										-- r(3) = r(0).field(5) // arg0.Entity
																										-- r(4) = r(1) // registerVal1
																										registerVal2 = Trigger.IsSpecificEntityInsideTriggerVolume(arg0.Entity, registerVal1)
																										-- skip the next [4] opcodes // advance 4 lines
																										-- r(2) = g[12] // coroutine
																										-- r(2) = r(2).field(13) // coroutine.yield
																										coroutine.yield()
																										-- skip the next [-11] opcodes // advance -11 lines
																										-- r(2) = g[19] // cprint
																										-- r(3) = c[128] // "GenericTriggers - BothPlayersAndDogsTriggerZone - character from EntityReference also entered zone"
																										cprint("GenericTriggers - BothPlayersAndDogsTriggerZone - character from EntityReference also entered zone")
																									end
																									-- r(2) = g[14] // GenericTrigger
																									-- r(2) = r(2).field(15) // GenericTrigger.TriggerEntities
																									-- r(3) = r(0) // arg0
																									GenericTrigger.TriggerEntities(arg0)
																									-- skip the next [537] opcodes // advance 537 lines
																								else
																									-- r(1) = r(0).field(2) // arg0.Type
																									if arg0.Type == "CharacterTriggerZone" then
																										-- r(1) = g[19] // cprint
																										-- r(2) = c[134] // "GenericTriggers - CharacterTriggerZone in use."
																										cprint("GenericTriggers - CharacterTriggerZone in use.")
																										-- r(1) = r(0).field(135) // arg0.GotEntity
																										-- skip the next [29] opcodes // advance 29 lines
																										-- r(1) = g[12] // coroutine
																										-- r(1) = r(1).field(13) // coroutine.yield
																										coroutine.yield()
																										-- r(1) = r(0):c[136] // arg0:WaitForTimeInSeconds
																										-- r(3) = c[105] // 1.000000
																										arg0:WaitForTimeInSeconds(1.000000)
																										-- r(1) = g[70] // EntityManager
																										-- r(1) = r(1).field(71) // EntityManager.GetEntityFromRecordID
																										-- r(2) = r(0).field(72) // arg0.EntityReference
																										registerVal1 = EntityManager.GetEntityFromRecordID(arg0.EntityReference)
																										arg0.TriggerEntity = registerVal1
																										-- r(1) = r(0).field(137) // arg0.TriggerEntity
																										-- skip the next [7] opcodes // advance 7 lines
																										-- r(1) = r(0).field(137) // arg0.TriggerEntity
																										-- r(1) = r(1):c[74] // arg0.TriggerEntity:IsAlive
																										registerVal1 = arg0.TriggerEntity:IsAlive()
																										-- skip the next [2] opcodes // advance 2 lines
																										arg0.GotEntity = true
																										-- skip the next [-24] opcodes // advance -24 lines
																										-- r(1) = r(0).field(138) // arg0.Said
																										-- skip the next [-27] opcodes // advance -27 lines
																										-- r(1) = g[19] // cprint
																										-- r(2) = c[139] // "GenericTriggers - CharacterTriggerZone - Cannot currently find trigger entity. Waiting..."
																										cprint("GenericTriggers - CharacterTriggerZone - Cannot currently find trigger entity. Waiting...")
																										arg0.Said = true
																										-- skip the next [-32] opcodes // advance -32 lines
																										-- r(1) = r(0).field(137) // arg0.TriggerEntity
																										-- skip the next [28] opcodes // advance 28 lines
																										-- r(1) = r(0).field(137) // arg0.TriggerEntity
																										-- r(1) = r(1):c[74] // arg0.TriggerEntity:IsAlive
																										registerVal1 = arg0.TriggerEntity:IsAlive()
																										if arg0.TriggerEntity ~= nil and registerVal1 then
																											-- r(1) = g[19] // cprint
																											-- r(2) = c[140] // "GenericTriggers - CharacterTriggerZone. We have a live entity to trigger off of"
																											cprint("GenericTriggers - CharacterTriggerZone. We have a live entity to trigger off of")
																											-- r(1) = g[86] // Trigger
																											-- r(1) = r(1).field(87) // Trigger.SetToTriggerOnSpecificEntity
																											-- r(2) = r(0).field(5) // arg0.Entity
																											-- r(3) = r(0).field(137) // arg0.TriggerEntity
																											Trigger.SetToTriggerOnSpecificEntity(arg0.Entity, arg0.TriggerEntity)
																											-- r(1) = g[86] // Trigger
																											-- r(1) = r(1).field(101) // Trigger.IsTriggerEntityInsideTriggerVolume
																											-- r(2) = r(0).field(5) // arg0.Entity
																											registerVal1 = Trigger.IsTriggerEntityInsideTriggerVolume(arg0.Entity)
																											-- skip the next [4] opcodes // advance 4 lines
																											-- r(1) = g[12] // coroutine
																											-- r(1) = r(1).field(13) // coroutine.yield
																											coroutine.yield()
																											-- skip the next [-10] opcodes // advance -10 lines
																											-- r(1) = g[14] // GenericTrigger
																											-- r(1) = r(1).field(15) // GenericTrigger.TriggerEntities
																											-- r(2) = r(0) // arg0
																											GenericTrigger.TriggerEntities(arg0)
																											-- skip the next [468] opcodes // advance 468 lines
																										else
																											-- r(1) = g[19] // cprint
																											-- r(2) = c[141] // "GenericTriggers ERROR - we have a character trigger zone but no valid character reference"
																											cprint("GenericTriggers ERROR - we have a character trigger zone but no valid character reference")
																											-- skip the next [464] opcodes // advance 464 lines
																										else
																											-- r(1) = r(0).field(2) // arg0.Type
																											if arg0.Type == "LightableBrazierSet" then
																												-- r(1) = g[19] // cprint
																												-- r(2) = c[143] // "GenericTriggers - LightableBrazierSet in use."
																												cprint("GenericTriggers - LightableBrazierSet in use.")
																												arg0.NumberOfLitLights = 0.000000
																												-- r(1) = r(0).field(146) // arg0.LightableBraziers
																												arg0.NumberOfLights = #arg0.LightableBraziers
																												-- r(1) = g[19] // cprint
																												-- r(2) = c[147] // "GenericTriggers - LightableBrazierSet - number of lights: "
																												-- r(3) = r(0).field(145) // arg0.NumberOfLights
																												-- r(2) = r(2)..r(3) // ("GenericTriggers - LightableBrazierSet - number of lights: " .. arg0.NumberOfLights)
																												cprint(("GenericTriggers - LightableBrazierSet - number of lights: " .. arg0.NumberOfLights))
																												-- r(1) = r(0).field(144) // arg0.NumberOfLitLights
																												-- r(2) = r(0).field(145) // arg0.NumberOfLights
																												-- skip the next [42] opcodes // advance 42 lines
																												-- r(1) = g[12] // coroutine
																												-- r(1) = r(1).field(13) // coroutine.yield
																												coroutine.yield()
																												-- r(1) = g[148] // ipairs
																												-- r(2) = r(0).field(146) // arg0.LightableBraziers
																												registerVal1, registerVal2, registerVal3 = ipairs(arg0.LightableBraziers)
																												for index4,value5 in registerVal1, registerVal2, registerVal3 do
																													-- skip the next [32] opcodes // advance 32 lines
																													-- r(6) = r(5).field(149) // value5.Counted
																													-- skip the next [29] opcodes // advance 29 lines
																													-- r(6) = g[70] // EntityManager
																													-- r(6) = r(6).field(71) // EntityManager.GetEntityFromRecordID
																													-- r(7) = r(5).field(150) // value5.LightableBrazierRef
																													registerVal6 = EntityManager.GetEntityFromRecordID(value5.LightableBrazierRef)
																													-- skip the next [23] opcodes // advance 23 lines
																													-- r(7) = r(6):c[74] // registerVal6:IsAlive
																													local registerVal7 = registerVal6:IsAlive()
																													-- skip the next [19] opcodes // advance 19 lines
																													-- r(7) = g[151] // Light
																													-- r(7) = r(7).field(4) // Light.IsAvailable
																													-- r(8) = r(6) // registerVal6
																													registerVal7 = Light.IsAvailable(registerVal6)
																													-- skip the next [13] opcodes // advance 13 lines
																													-- r(7) = g[151] // Light
																													-- r(7) = r(7).field(152) // Light.IsActive
																													-- r(8) = r(6) // registerVal6
																													registerVal7 = Light.IsActive(registerVal6)
																													if not value5.Counted and registerVal6 ~= nil and registerVal7 and registerVal7 and registerVal7 then
																														-- r(7) = g[19] // cprint
																														-- r(8) = c[153] // "GTM - LightableBrazierSet - a light has been detected as lit"
																														cprint("GTM - LightableBrazierSet - a light has been detected as lit")
																														-- r(7) = r(0).field(144) // arg0.NumberOfLitLights
																														arg0.NumberOfLitLights = (arg0.NumberOfLitLights + 1.000000)
																														value5.Counted = true
																													end
																													-- skip the next [-34] opcodes // advance -34 lines
																												end
																												-- skip the next [-46] opcodes // advance -46 lines
																												-- r(1) = g[19] // cprint
																												-- r(2) = c[154] // "GenericTriggers - LightableBrazierSet - all lit. Triggering..."
																												cprint("GenericTriggers - LightableBrazierSet - all lit. Triggering...")
																												-- r(1) = g[14] // GenericTrigger
																												-- r(1) = r(1).field(15) // GenericTrigger.TriggerEntities
																												-- r(2) = r(0) // arg0
																												GenericTrigger.TriggerEntities(arg0)
																												-- skip the next [395] opcodes // advance 395 lines
																											else
																												-- r(1) = r(0).field(2) // arg0.Type
																												if arg0.Type == "DogProximitySwitch" then
																													-- r(1) = g[55] // tonumber
																													-- r(2) = r(0).field(56) // arg0.Parameter
																													registerVal1 = tonumber(arg0.Parameter)
																													-- r(2) = r(0).field(7) // arg0.StartTime
																													-- skip the next [3] opcodes // advance 3 lines
																													-- r(2) = r(0).field(8) // arg0.EndTime
																													if arg0.StartTime ~= 0.000000 or arg0.EndTime ~= 0.000000 then
																														-- r(2) = g[9] // Timing
																														-- r(2) = r(2).field(10) // Timing.GetTimeOfDay
																														registerVal2 = Timing.GetTimeOfDay()
																														-- r(3) = g[9] // Timing
																														-- r(3) = r(3).field(11) // Timing.GetTimeFrom24HourClock
																														-- r(4) = r(0).field(7) // arg0.StartTime
																														registerVal3 = Timing.GetTimeFrom24HourClock(arg0.StartTime)
																														-- r(4) = g[9] // Timing
																														-- r(4) = r(4).field(11) // Timing.GetTimeFrom24HourClock
																														-- r(5) = r(0).field(8) // arg0.EndTime
																														registerVal4 = Timing.GetTimeFrom24HourClock(arg0.EndTime)
																														if registerVal4 < registerVal3 then
																															-- skip the next [2] opcodes // advance 2 lines
																															if registerVal4 >= registerVal2 or registerVal2 >= registerVal3 then
																																-- r(5) = g[57] // IsDistanceBetweenThingsUnder
																																-- r(6) = r(0).field(5) // arg0.Entity
																																-- r(7) = g[156] // GetLocalHeroDog
																																registerVal7 = GetLocalHeroDog()
																																-- r(8) = r(1) // registerVal1
																																registerVal5 = IsDistanceBetweenThingsUnder(arg0.Entity, registerVal7, registerVal1)
																																-- skip the next [29] opcodes // advance 29 lines
																															else
																																-- r(5) = g[12] // coroutine
																																-- r(5) = r(5).field(13) // coroutine.yield
																																coroutine.yield()
																																-- r(5) = g[9] // Timing
																																-- r(5) = r(5).field(10) // Timing.GetTimeOfDay
																																registerVal5 = Timing.GetTimeOfDay()
																																-- r(2) = r(5) // registerVal5
																																-- skip the next [-20] opcodes // advance -20 lines
																																-- skip the next [20] opcodes // advance 20 lines
																															else
																																-- skip the next [10] opcodes // advance 10 lines
																																if registerVal3 < registerVal5 and registerVal5 < registerVal4 then
																																	-- r(5) = g[57] // IsDistanceBetweenThingsUnder
																																	-- r(6) = r(0).field(5) // arg0.Entity
																																	-- r(7) = g[156] // GetLocalHeroDog
																																	registerVal7 = GetLocalHeroDog()
																																	-- r(8) = r(1) // registerVal1
																																	registerVal5 = IsDistanceBetweenThingsUnder(arg0.Entity, registerVal7, registerVal1)
																																	-- skip the next [8] opcodes // advance 8 lines
																																else
																																	-- r(5) = g[12] // coroutine
																																	-- r(5) = r(5).field(13) // coroutine.yield
																																	coroutine.yield()
																																	-- r(5) = g[9] // Timing
																																	-- r(5) = r(5).field(10) // Timing.GetTimeOfDay
																																	registerVal5 = Timing.GetTimeOfDay()
																																	-- r(2) = r(5) // registerVal5
																																	-- skip the next [-20] opcodes // advance -20 lines
																																end
																															end
																														end
																														-- r(5) = g[14] // GenericTrigger
																														-- r(5) = r(5).field(15) // GenericTrigger.TriggerEntities
																														-- r(6) = r(0) // arg0
																														GenericTrigger.TriggerEntities(arg0)
																														-- skip the next [324] opcodes // advance 324 lines
																													else
																														-- r(2) = g[57] // IsDistanceBetweenThingsUnder
																														-- r(3) = r(0).field(5) // arg0.Entity
																														-- r(4) = g[156] // GetLocalHeroDog
																														registerVal4 = GetLocalHeroDog()
																														-- r(5) = r(1) // registerVal1
																														registerVal2 = IsDistanceBetweenThingsUnder(arg0.Entity, registerVal4, registerVal1)
																														-- skip the next [4] opcodes // advance 4 lines
																														-- r(2) = g[12] // coroutine
																														-- r(2) = r(2).field(13) // coroutine.yield
																														coroutine.yield()
																														-- skip the next [-12] opcodes // advance -12 lines
																														-- r(2) = g[14] // GenericTrigger
																														-- r(2) = r(2).field(15) // GenericTrigger.TriggerEntities
																														-- r(3) = r(0) // arg0
																														GenericTrigger.TriggerEntities(arg0)
																														-- skip the next [307] opcodes // advance 307 lines
																													else
																														-- r(1) = r(0).field(2) // arg0.Type
																														if arg0.Type == "ExpressionSwitch" then
																															-- r(1) = r(0).field(7) // arg0.StartTime
																															-- skip the next [3] opcodes // advance 3 lines
																															-- r(1) = r(0).field(8) // arg0.EndTime
																															if arg0.StartTime ~= 0.000000 or arg0.EndTime ~= 0.000000 then
																																-- r(1) = g[9] // Timing
																																-- r(1) = r(1).field(10) // Timing.GetTimeOfDay
																																registerVal1 = Timing.GetTimeOfDay()
																																-- r(2) = g[9] // Timing
																																-- r(2) = r(2).field(11) // Timing.GetTimeFrom24HourClock
																																-- r(3) = r(0).field(7) // arg0.StartTime
																																registerVal2 = Timing.GetTimeFrom24HourClock(arg0.StartTime)
																																-- r(3) = g[9] // Timing
																																-- r(3) = r(3).field(11) // Timing.GetTimeFrom24HourClock
																																-- r(4) = r(0).field(8) // arg0.EndTime
																																registerVal3 = Timing.GetTimeFrom24HourClock(arg0.EndTime)
																																if registerVal3 < registerVal2 then
																																	-- skip the next [2] opcodes // advance 2 lines
																																	if registerVal3 >= registerVal1 or registerVal1 >= registerVal2 then
																																		-- r(4) = r(0):c[158] // arg0:HasExpressionBeenPerformed
																																		-- r(6) = r(0).field(56) // arg0.Parameter
																																		registerVal4 = arg0:HasExpressionBeenPerformed(arg0.Parameter)
																																		if registerVal4 then
																																			-- r(4) = g[57] // IsDistanceBetweenThingsUnder
																																			-- r(5) = r(0).field(5) // arg0.Entity
																																			-- r(6) = g[58] // QuestManager
																																			-- r(6) = r(6).field(59) // QuestManager.HeroEntity
																																			-- r(7) = c[159] // 2.000000
																																			registerVal4 = IsDistanceBetweenThingsUnder(arg0.Entity, QuestManager.HeroEntity, 2.000000)
																																			-- skip the next [34] opcodes // advance 34 lines
																																		else
																																		else
																																			-- r(4) = g[12] // coroutine
																																			-- r(4) = r(4).field(13) // coroutine.yield
																																			coroutine.yield()
																																			-- r(4) = g[9] // Timing
																																			-- r(4) = r(4).field(10) // Timing.GetTimeOfDay
																																			registerVal4 = Timing.GetTimeOfDay()
																																			-- r(1) = r(4) // registerVal4
																																			-- skip the next [-25] opcodes // advance -25 lines
																																			-- skip the next [25] opcodes // advance 25 lines
																																		else
																																			-- skip the next [15] opcodes // advance 15 lines
																																			-- skip the next [13] opcodes // advance 13 lines
																																			-- r(4) = r(0):c[158] // arg0:HasExpressionBeenPerformed
																																			-- r(6) = r(0).field(56) // arg0.Parameter
																																			registerVal4 = arg0:HasExpressionBeenPerformed(arg0.Parameter)
																																			if registerVal2 < registerVal4 and registerVal4 < registerVal3 and registerVal4 then
																																				-- r(4) = g[57] // IsDistanceBetweenThingsUnder
																																				-- r(5) = r(0).field(5) // arg0.Entity
																																				-- r(6) = g[58] // QuestManager
																																				-- r(6) = r(6).field(59) // QuestManager.HeroEntity
																																				-- r(7) = c[159] // 2.000000
																																				registerVal4 = IsDistanceBetweenThingsUnder(arg0.Entity, QuestManager.HeroEntity, 2.000000)
																																				-- skip the next [8] opcodes // advance 8 lines
																																			else
																																				-- r(4) = g[12] // coroutine
																																				-- r(4) = r(4).field(13) // coroutine.yield
																																				coroutine.yield()
																																				-- r(4) = g[9] // Timing
																																				-- r(4) = r(4).field(10) // Timing.GetTimeOfDay
																																				registerVal4 = Timing.GetTimeOfDay()
																																				-- r(1) = r(4) // registerVal4
																																				-- skip the next [-25] opcodes // advance -25 lines
																																			end
																																		end
																																	end
																																end
																																-- r(4) = g[14] // GenericTrigger
																																-- r(4) = r(4).field(15) // GenericTrigger.TriggerEntities
																																-- r(5) = r(0) // arg0
																																GenericTrigger.TriggerEntities(arg0)
																																-- skip the next [229] opcodes // advance 229 lines
																															else
																																-- r(1) = r(0):c[158] // arg0:HasExpressionBeenPerformed
																																-- r(3) = r(0).field(56) // arg0.Parameter
																																registerVal1 = arg0:HasExpressionBeenPerformed(arg0.Parameter)
																																if registerVal1 then
																																	-- r(1) = g[57] // IsDistanceBetweenThingsUnder
																																	-- r(2) = r(0).field(5) // arg0.Entity
																																	-- r(3) = g[58] // QuestManager
																																	-- r(3) = r(3).field(59) // QuestManager.HeroEntity
																																	-- r(4) = c[159] // 2.000000
																																	registerVal1 = IsDistanceBetweenThingsUnder(arg0.Entity, QuestManager.HeroEntity, 2.000000)
																																	-- skip the next [4] opcodes // advance 4 lines
																																else
																																	-- r(1) = g[12] // coroutine
																																	-- r(1) = r(1).field(13) // coroutine.yield
																																	coroutine.yield()
																																	-- skip the next [-17] opcodes // advance -17 lines
																																end
																																-- r(1) = g[14] // GenericTrigger
																																-- r(1) = r(1).field(15) // GenericTrigger.TriggerEntities
																																-- r(2) = r(0) // arg0
																																GenericTrigger.TriggerEntities(arg0)
																																-- skip the next [207] opcodes // advance 207 lines
																															else
																																-- r(1) = r(0).field(2) // arg0.Type
																																if arg0.Type == "CreatureGenerator" then
																																	-- r(1) = r(0).field(7) // arg0.StartTime
																																	-- skip the next [3] opcodes // advance 3 lines
																																	-- r(1) = r(0).field(8) // arg0.EndTime
																																	if arg0.StartTime ~= 0.000000 or arg0.EndTime ~= 0.000000 then
																																		-- r(1) = g[9] // Timing
																																		-- r(1) = r(1).field(10) // Timing.GetTimeOfDay
																																		registerVal1 = Timing.GetTimeOfDay()
																																		-- r(2) = g[9] // Timing
																																		-- r(2) = r(2).field(11) // Timing.GetTimeFrom24HourClock
																																		-- r(3) = r(0).field(7) // arg0.StartTime
																																		registerVal2 = Timing.GetTimeFrom24HourClock(arg0.StartTime)
																																		-- r(3) = g[9] // Timing
																																		-- r(3) = r(3).field(11) // Timing.GetTimeFrom24HourClock
																																		-- r(4) = r(0).field(8) // arg0.EndTime
																																		registerVal3 = Timing.GetTimeFrom24HourClock(arg0.EndTime)
																																		if registerVal3 < registerVal2 then
																																			-- skip the next [2] opcodes // advance 2 lines
																																			if registerVal3 >= registerVal1 or registerVal1 >= registerVal2 then
																																				-- r(4) = g[160] // CreatureGenerator
																																				-- r(4) = r(4).field(161) // CreatureGenerator.GetTotalNumSpawned
																																				-- r(5) = r(0).field(5) // arg0.Entity
																																				registerVal4 = CreatureGenerator.GetTotalNumSpawned(arg0.Entity)
																																				if registerVal4 ~= 0.000000 then
																																					-- r(4) = g[160] // CreatureGenerator
																																					-- r(4) = r(4).field(162) // CreatureGenerator.GetNumSpawnedStillAlive
																																					-- r(5) = r(0).field(5) // arg0.Entity
																																					registerVal4 = CreatureGenerator.GetNumSpawnedStillAlive(arg0.Entity)
																																					-- skip the next [33] opcodes // advance 33 lines
																																				else
																																				else
																																					-- r(4) = g[12] // coroutine
																																					-- r(4) = r(4).field(13) // coroutine.yield
																																					coroutine.yield()
																																					-- r(4) = g[9] // Timing
																																					-- r(4) = r(4).field(10) // Timing.GetTimeOfDay
																																					registerVal4 = Timing.GetTimeOfDay()
																																					-- r(1) = r(4) // registerVal4
																																					-- skip the next [-24] opcodes // advance -24 lines
																																					-- skip the next [24] opcodes // advance 24 lines
																																				else
																																					-- skip the next [14] opcodes // advance 14 lines
																																					-- skip the next [12] opcodes // advance 12 lines
																																					-- r(4) = g[160] // CreatureGenerator
																																					-- r(4) = r(4).field(161) // CreatureGenerator.GetTotalNumSpawned
																																					-- r(5) = r(0).field(5) // arg0.Entity
																																					registerVal4 = CreatureGenerator.GetTotalNumSpawned(arg0.Entity)
																																					if registerVal2 < registerVal4 and registerVal4 < registerVal3 and registerVal4 ~= 0.000000 then
																																						-- r(4) = g[160] // CreatureGenerator
																																						-- r(4) = r(4).field(162) // CreatureGenerator.GetNumSpawnedStillAlive
																																						-- r(5) = r(0).field(5) // arg0.Entity
																																						registerVal4 = CreatureGenerator.GetNumSpawnedStillAlive(arg0.Entity)
																																						-- skip the next [8] opcodes // advance 8 lines
																																					else
																																						-- r(4) = g[12] // coroutine
																																						-- r(4) = r(4).field(13) // coroutine.yield
																																						coroutine.yield()
																																						-- r(4) = g[9] // Timing
																																						-- r(4) = r(4).field(10) // Timing.GetTimeOfDay
																																						registerVal4 = Timing.GetTimeOfDay()
																																						-- r(1) = r(4) // registerVal4
																																						-- skip the next [-24] opcodes // advance -24 lines
																																					end
																																				end
																																			end
																																		end
																																		-- r(4) = g[14] // GenericTrigger
																																		-- r(4) = r(4).field(15) // GenericTrigger.TriggerEntities
																																		-- r(5) = r(0) // arg0
																																		GenericTrigger.TriggerEntities(arg0)
																																		-- skip the next [131] opcodes // advance 131 lines
																																	else
																																		-- r(1) = g[160] // CreatureGenerator
																																		-- r(1) = r(1).field(161) // CreatureGenerator.GetTotalNumSpawned
																																		-- r(2) = r(0).field(5) // arg0.Entity
																																		registerVal1 = CreatureGenerator.GetTotalNumSpawned(arg0.Entity)
																																		-- skip the next [4] opcodes // advance 4 lines
																																		-- r(1) = g[12] // coroutine
																																		-- r(1) = r(1).field(13) // coroutine.yield
																																		coroutine.yield()
																																		-- skip the next [-10] opcodes // advance -10 lines
																																		-- r(1) = g[160] // CreatureGenerator
																																		-- r(1) = r(1).field(162) // CreatureGenerator.GetNumSpawnedStillAlive
																																		-- r(2) = r(0).field(5) // arg0.Entity
																																		registerVal1 = CreatureGenerator.GetNumSpawnedStillAlive(arg0.Entity)
																																		-- skip the next [4] opcodes // advance 4 lines
																																		-- r(1) = g[12] // coroutine
																																		-- r(1) = r(1).field(13) // coroutine.yield
																																		coroutine.yield()
																																		-- skip the next [-10] opcodes // advance -10 lines
																																		-- r(1) = g[14] // GenericTrigger
																																		-- r(1) = r(1).field(15) // GenericTrigger.TriggerEntities
																																		-- r(2) = r(0) // arg0
																																		GenericTrigger.TriggerEntities(arg0)
																																		-- skip the next [106] opcodes // advance 106 lines
																																	else
																																		-- r(1) = r(0).field(2) // arg0.Type
																																		-- skip the next [103] opcodes // advance 103 lines
																																		-- r(1) = r(0).field(7) // arg0.StartTime
																																		-- skip the next [3] opcodes // advance 3 lines
																																		-- r(1) = r(0).field(8) // arg0.EndTime
																																		if arg0.StartTime ~= 0.000000 or arg0.EndTime ~= 0.000000 then
																																			-- r(1) = g[9] // Timing
																																			-- r(1) = r(1).field(10) // Timing.GetTimeOfDay
																																			registerVal1 = Timing.GetTimeOfDay()
																																			-- r(2) = g[9] // Timing
																																			-- r(2) = r(2).field(11) // Timing.GetTimeFrom24HourClock
																																			-- r(3) = r(0).field(7) // arg0.StartTime
																																			registerVal2 = Timing.GetTimeFrom24HourClock(arg0.StartTime)
																																			-- r(3) = g[9] // Timing
																																			-- r(3) = r(3).field(11) // Timing.GetTimeFrom24HourClock
																																			-- r(4) = r(0).field(8) // arg0.EndTime
																																			registerVal3 = Timing.GetTimeFrom24HourClock(arg0.EndTime)
																																			-- r(4) = g[48] // MessageEvents
																																			-- r(4) = r(4).field(49) // MessageEvents.IsMessageSentTo
																																			-- r(5) = c[164] // "ScriptTriggerMessage"
																																			-- r(6) = r(0).field(5) // arg0.Entity
																																			-- r(7) = r(0).field(165) // arg0.LastScriptMessageID
																																			registerVal4, registerVal5 = MessageEvents.IsMessageSentTo("ScriptTriggerMessage", arg0.Entity, arg0.LastScriptMessageID)
																																			if registerVal3 < registerVal2 then
																																				-- skip the next [2] opcodes // advance 2 lines
																																				if registerVal3 >= registerVal1 or registerVal1 >= registerVal2 then
																																					-- skip the next [39] opcodes // advance 39 lines
																																				else
																																					-- r(6) = g[12] // coroutine
																																					-- r(6) = r(6).field(13) // coroutine.yield
																																					coroutine.yield()
																																					-- r(6) = g[9] // Timing
																																					-- r(6) = r(6).field(10) // Timing.GetTimeOfDay
																																					registerVal6 = Timing.GetTimeOfDay()
																																					-- r(1) = r(6) // registerVal6
																																					-- r(6) = g[48] // MessageEvents
																																					-- r(6) = r(6).field(49) // MessageEvents.IsMessageSentTo
																																					-- r(7) = c[164] // "ScriptTriggerMessage"
																																					-- r(8) = r(0).field(5) // arg0.Entity
																																					-- r(9) = r(0).field(165) // arg0.LastScriptMessageID
																																					registerVal6, registerVal7 = MessageEvents.IsMessageSentTo("ScriptTriggerMessage", arg0.Entity, arg0.LastScriptMessageID)
																																					-- r(5) = r(7) // registerVal7
																																					-- r(4) = r(6) // registerVal6
																																					-- skip the next [-22] opcodes // advance -22 lines
																																					-- skip the next [22] opcodes // advance 22 lines
																																				else
																																					-- skip the next [4] opcodes // advance 4 lines
																																					if registerVal2 < registerVal6 and registerVal6 < registerVal3 then
																																						-- skip the next [16] opcodes // advance 16 lines
																																					else
																																						-- r(6) = g[12] // coroutine
																																						-- r(6) = r(6).field(13) // coroutine.yield
																																						coroutine.yield()
																																						-- r(6) = g[9] // Timing
																																						-- r(6) = r(6).field(10) // Timing.GetTimeOfDay
																																						registerVal6 = Timing.GetTimeOfDay()
																																						-- r(1) = r(6) // registerVal6
																																						-- r(6) = g[48] // MessageEvents
																																						-- r(6) = r(6).field(49) // MessageEvents.IsMessageSentTo
																																						-- r(7) = c[164] // "ScriptTriggerMessage"
																																						-- r(8) = r(0).field(5) // arg0.Entity
																																						-- r(9) = r(0).field(165) // arg0.LastScriptMessageID
																																						registerVal6, registerVal7 = MessageEvents.IsMessageSentTo("ScriptTriggerMessage", arg0.Entity, arg0.LastScriptMessageID)
																																						-- r(5) = r(7) // registerVal7
																																						-- r(4) = r(6) // registerVal6
																																						-- skip the next [-22] opcodes // advance -22 lines
																																					end
																																				end
																																			end
																																			-- r(6) = r(5):c[166] // registerVal7:GetID
																																			registerVal6 = registerVal7:GetID()
																																			arg0.LastScriptMessageID = registerVal6
																																			-- r(6) = g[167] // print
																																			-- r(7) = c[168] // "Generic Trigger Message Received"
																																			print("Generic Trigger Message Received")
																																			-- r(6) = g[14] // GenericTrigger
																																			-- r(6) = r(6).field(15) // GenericTrigger.TriggerEntities
																																			-- r(7) = r(0) // arg0
																																			GenericTrigger.TriggerEntities(arg0)
																																			-- skip the next [22] opcodes // advance 22 lines
																																		else
																																			-- r(1) = g[48] // MessageEvents
																																			-- r(1) = r(1).field(49) // MessageEvents.IsMessageSentTo
																																			-- r(2) = c[164] // "ScriptTriggerMessage"
																																			-- r(3) = r(0).field(5) // arg0.Entity
																																			-- r(4) = r(0).field(165) // arg0.LastScriptMessageID
																																			registerVal1, registerVal2 = MessageEvents.IsMessageSentTo("ScriptTriggerMessage", arg0.Entity, arg0.LastScriptMessageID)
																																			if registerVal1 then
																																				-- r(3) = r(2):c[166] // registerVal2:GetID
																																				registerVal3 = registerVal2:GetID()
																																				arg0.LastScriptMessageID = registerVal3
																																				-- r(3) = g[167] // print
																																				-- r(4) = c[168] // "Generic Trigger Message Received"
																																				print("Generic Trigger Message Received")
																																				-- r(3) = g[14] // GenericTrigger
																																				-- r(3) = r(3).field(15) // GenericTrigger.TriggerEntities
																																				-- r(4) = r(0) // arg0
																																				GenericTrigger.TriggerEntities(arg0)
																																			end
																																			-- r(3) = g[12] // coroutine
																																			-- r(3) = r(3).field(13) // coroutine.yield
																																			coroutine.yield()
																																			-- skip the next [-22] opcodes // advance -22 lines
																																		end
																																	end
																																end
																															end
																														end
																													end
																												end
																											end
																										end
																									end
																								end
																							end
																						end
																					end
																				end
																			end
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	-- return
end

-- r(0) = g[9] // GenericTrigger
	-- OP Count: 0x6A
	-- Constant Count: 0x1E
	-- Registers Count: 0x10
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function GenericTrigger.CustomUpdate(arg0)
	-- r(1) = r(0).field(0) // arg0.EntityData
	-- r(1) = r(1).field(1) // arg0.EntityData.Entity
	-- r(2) = g[2] // ECGenericTrigger
	-- r(2) = r(2).field(3) // ECGenericTrigger.IsAvailable
	-- r(3) = r(1) // arg0.EntityData.Entity
	local registerVal2 = ECGenericTrigger.IsAvailable(arg0.EntityData.Entity)
	-- skip the next [97] opcodes // advance 97 lines
	-- r(2) = g[2] // ECGenericTrigger
	-- r(2) = r(2).field(4) // ECGenericTrigger.GetIsActive
	-- r(3) = r(1) // arg0.EntityData.Entity
	registerVal2 = ECGenericTrigger.GetIsActive(arg0.EntityData.Entity)
	if registerVal2 and registerVal2 then
		-- r(2) = g[2] // ECGenericTrigger
		-- r(2) = r(2).field(6) // ECGenericTrigger.GetTriggerType
		-- r(3) = r(1) // arg0.EntityData.Entity
		registerVal2 = ECGenericTrigger.GetTriggerType(arg0.EntityData.Entity)
		arg0.Type = registerVal2
		-- r(2) = g[2] // ECGenericTrigger
		-- r(2) = r(2).field(8) // ECGenericTrigger.GetTriggerParameter
		-- r(3) = r(1) // arg0.EntityData.Entity
		registerVal2 = ECGenericTrigger.GetTriggerParameter(arg0.EntityData.Entity)
		arg0.Parameter = registerVal2
		-- r(2) = g[2] // ECGenericTrigger
		-- r(2) = r(2).field(10) // ECGenericTrigger.GetTriggeredEntities
		-- r(3) = r(1) // arg0.EntityData.Entity
		registerVal2 = ECGenericTrigger.GetTriggeredEntities(arg0.EntityData.Entity)
		arg0.Targets = registerVal2
		-- r(2) = r(0).field(9) // arg0.Targets
		-- skip the next [9] opcodes // advance 9 lines
		-- r(2) = g[12] // coroutine
		-- r(2) = r(2).field(13) // coroutine.yield
		coroutine.yield()
		-- r(2) = g[2] // ECGenericTrigger
		-- r(2) = r(2).field(10) // ECGenericTrigger.GetTriggeredEntities
		-- r(3) = r(1) // arg0.EntityData.Entity
		registerVal2 = ECGenericTrigger.GetTriggeredEntities(arg0.EntityData.Entity)
		arg0.Targets = registerVal2
		-- skip the next [-13] opcodes // advance -13 lines
		-- r(2) = r(1):c[14] // arg0.EntityData.Entity:GetRecord
		registerVal2 = arg0.EntityData.Entity:GetRecord()
		-- r(3) = r(2):c[14] // registerVal2:GetRecord
		-- r(5) = c[15] // "GenericTriggerComponent"
		local registerVal3 = registerVal2:GetRecord("GenericTriggerComponent")
		-- r(4) = r(3):c[17] // registerVal3:GetFloat
		-- r(6) = c[16] // "StartTime"
		local registerVal4 = registerVal3:GetFloat("StartTime")
		arg0.StartTime = registerVal4
		-- r(4) = r(3):c[17] // registerVal3:GetFloat
		-- r(6) = c[18] // "EndTime"
		registerVal4 = registerVal3:GetFloat("EndTime")
		arg0.EndTime = registerVal4
		-- r(4) = r(3):c[14] // registerVal3:GetRecord
		-- r(6) = c[19] // "EntityReference"
		registerVal4 = registerVal3:GetRecord("EntityReference")
		-- r(5) = r(4):c[20] // registerVal4:IsNull
		local registerVal5 = registerVal4:IsNull()
		if not registerVal5 then
			-- r(5) = r(4):c[21] // registerVal4:GetID
			registerVal5 = registerVal4:GetID()
			arg0.EntityReference = registerVal5
		end
		arg0.LightableBraziers = {}
		-- r(5) = r(3):c[14] // registerVal3:GetRecord
		-- r(7) = c[22] // "LightableBraziers"
		registerVal5 = registerVal3:GetRecord("LightableBraziers")
		-- r(6) = r(5):c[20] // registerVal5:IsNull
		local registerVal6 = registerVal5:IsNull()
		if not registerVal6 then
			-- r(6) = r(5):c[23] // registerVal5:GetNumSubRecords
			registerVal6 = registerVal5:GetNumSubRecords()
			-- r(7) = r(0).field(22) // arg0.LightableBraziers
			-- r(8) = c[24] // 1.000000
			-- r(9) = r(6) // registerVal6
			-- r(10) = c[24] // 1.000000
			for index8=1.000000, registerVal6, 1.000000 do
				-- r(12) = r(5):c[25] // registerVal5:GetSubRecordAtIndex
				-- r(14) = r(11) // index8
				local registerVal12 = registerVal5:GetSubRecordAtIndex(index8)
				-- r(13) = r(12):c[20] // registerVal12:IsNull
				local registerVal13 = registerVal12:IsNull()
				if not registerVal13 then
					-- r(13) = r(0).field(22) // arg0.LightableBraziers
					arg0.LightableBraziers[(#arg0.LightableBraziers + 1.000000)] = {}
					-- r(13) = r(0).field(22) // arg0.LightableBraziers
					-- r(13) = r(13)[r(7)] // arg0.LightableBraziers[(#arg0.LightableBraziers + 1.000000)]
					-- r(14) = r(12):c[21] // registerVal12:GetID
					local registerVal14 = registerVal12:GetID()
					arg0.LightableBraziers[(#arg0.LightableBraziers + 1.000000)].LightableBrazierRef = registerVal14
					-- r(13) = r(0).field(22) // arg0.LightableBraziers
					-- r(13) = r(13)[r(7)] // arg0.LightableBraziers[(#arg0.LightableBraziers + 1.000000)]
					arg0.LightableBraziers[(#arg0.LightableBraziers + 1.000000)].Counted = false
				end
			end
		end
		-- r(6) = r(0):c[29] // arg0:CheckTrigger
		arg0:CheckTrigger()
	end
	-- return
end

-- r(0) = g[9] // GenericTrigger
	-- OP Count: 0xE
	-- Constant Count: 0x6
	-- Registers Count: 0x8
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function GenericTrigger.TriggerEntities(arg0)
	-- r(1) = g[0] // print
	-- r(2) = c[1] // "Triggering Entities"
	print("Triggering Entities")
	-- r(1) = g[2] // ipairs
	-- r(2) = r(0).field(3) // arg0.Targets
	local registerVal1, registerVal2, registerVal3 = ipairs(arg0.Targets)
	for index4,value5 in registerVal1, registerVal2, registerVal3 do
		-- skip the next [4] opcodes // advance 4 lines
		-- r(6) = g[4] // GenericTriggers
		-- r(6) = r(6).field(5) // GenericTriggers.TriggerEntity
		-- r(7) = r(5) // value5
		GenericTriggers.TriggerEntity(value5)
		-- skip the next [-6] opcodes // advance -6 lines
	end
	-- return
end

-- r(0) = g[12] // BaseObjects
BaseObjects.TriggeredEntity = {}
-- r(0) = g[13] // TriggeredEntity
-- r(1) = g[13] // TriggeredEntity
TriggeredEntity.__index = TriggeredEntity
-- r(0) = g[13] // TriggeredEntity
	-- OP Count: 0xA3
	-- Constant Count: 0x1E
	-- Registers Count: 0x5
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function TriggeredEntity.DoDefaultTriggerBehaviour(arg0)
	-- r(1) = g[0] // Door
	-- r(1) = r(1).field(1) // Door.IsAvailable
	-- r(2) = r(0).field(2) // arg0.Entity
	local registerVal1 = Door.IsAvailable(arg0.Entity)
	if registerVal1 then
		-- r(1) = g[0] // Door
		-- r(1) = r(1).field(3) // Door.SetLocked
		-- r(2) = r(0).field(2) // arg0.Entity
		-- r(3) = g[0] // Door
		-- r(3) = r(3).field(4) // Door.IsOpen
		-- r(4) = r(0).field(2) // arg0.Entity
		Door.SetLocked(arg0.Entity, Door.IsOpen(arg0.Entity))
		-- r(1) = g[0] // Door
		-- r(1) = r(1).field(5) // Door.SetOpen
		-- r(2) = r(0).field(2) // arg0.Entity
		-- r(3) = g[0] // Door
		-- r(3) = r(3).field(4) // Door.IsOpen
		-- r(4) = r(0).field(2) // arg0.Entity
		local registerVal3 = Door.IsOpen(arg0.Entity)
		-- r(4) = true
		Door.SetOpen(arg0.Entity, (not registerVal3), true)
		-- r(1) = r(0).field(2) // arg0.Entity
		-- r(1) = r(1):c[6] // arg0.Entity:SetAsLevelSaving
		arg0.Entity:SetAsLevelSaving()
		-- skip the next [134] opcodes // advance 134 lines
	else
		-- r(1) = g[7] // Chest
		-- r(1) = r(1).field(1) // Chest.IsAvailable
		-- r(2) = r(0).field(2) // arg0.Entity
		registerVal1 = Chest.IsAvailable(arg0.Entity)
		if registerVal1 then
			-- r(1) = g[7] // Chest
			-- r(1) = r(1).field(8) // Chest.IsLocked
			-- r(2) = r(0).field(2) // arg0.Entity
			registerVal1 = Chest.IsLocked(arg0.Entity)
			if registerVal1 then
				-- r(1) = g[7] // Chest
				-- r(1) = r(1).field(9) // Chest.Unlock
				-- r(2) = r(0).field(2) // arg0.Entity
				Chest.Unlock(arg0.Entity)
				-- skip the next [117] opcodes // advance 117 lines
			else
				-- r(1) = g[10] // Light
				-- r(1) = r(1).field(1) // Light.IsAvailable
				-- r(2) = r(0).field(2) // arg0.Entity
				registerVal1 = Light.IsAvailable(arg0.Entity)
				if registerVal1 then
					-- r(1) = g[10] // Light
					-- r(1) = r(1).field(11) // Light.SetAsActive
					-- r(2) = r(0).field(2) // arg0.Entity
					-- r(3) = g[10] // Light
					-- r(3) = r(3).field(12) // Light.IsActive
					-- r(4) = r(0).field(2) // arg0.Entity
					registerVal3 = Light.IsActive(arg0.Entity)
					Light.SetAsActive(arg0.Entity, (not registerVal3))
					-- skip the next [101] opcodes // advance 101 lines
				else
					-- r(1) = g[13] // CreatureGenerator
					-- r(1) = r(1).field(1) // CreatureGenerator.IsAvailable
					-- r(2) = r(0).field(2) // arg0.Entity
					registerVal1 = CreatureGenerator.IsAvailable(arg0.Entity)
					if registerVal1 then
						-- r(1) = g[13] // CreatureGenerator
						-- r(1) = r(1).field(14) // CreatureGenerator.ResetAndTrigger
						-- r(2) = r(0).field(2) // arg0.Entity
						CreatureGenerator.ResetAndTrigger(arg0.Entity)
						-- skip the next [90] opcodes // advance 90 lines
					else
						-- r(1) = g[15] // HeroStatue
						-- r(1) = r(1).field(1) // HeroStatue.IsAvailable
						-- r(2) = r(0).field(2) // arg0.Entity
						registerVal1 = HeroStatue.IsAvailable(arg0.Entity)
						if registerVal1 then
							-- r(1) = g[15] // HeroStatue
							-- r(1) = r(1).field(16) // HeroStatue.SetFirstExpressionPose
							-- r(2) = r(0).field(2) // arg0.Entity
							HeroStatue.SetFirstExpressionPose(arg0.Entity)
							-- skip the next [79] opcodes // advance 79 lines
						else
							-- r(1) = g[17] // SpikeTrap
							-- r(1) = r(1).field(1) // SpikeTrap.IsAvailable
							-- r(2) = r(0).field(2) // arg0.Entity
							registerVal1 = SpikeTrap.IsAvailable(arg0.Entity)
							if registerVal1 then
								-- r(1) = g[17] // SpikeTrap
								-- r(1) = r(1).field(18) // SpikeTrap.ChangesStateOnTriggering
								-- r(2) = r(0).field(2) // arg0.Entity
								registerVal1 = SpikeTrap.ChangesStateOnTriggering(arg0.Entity)
								if registerVal1 then
									-- r(1) = g[17] // SpikeTrap
									-- r(1) = r(1).field(19) // SpikeTrap.ChangeState
									-- r(2) = r(0).field(2) // arg0.Entity
									SpikeTrap.ChangeState(arg0.Entity)
									-- skip the next [9] opcodes // advance 9 lines
								else
									-- r(1) = g[17] // SpikeTrap
									-- r(1) = r(1).field(20) // SpikeTrap.SetAsAutoSpiking
									-- r(2) = r(0).field(2) // arg0.Entity
									-- r(3) = g[17] // SpikeTrap
									-- r(3) = r(3).field(21) // SpikeTrap.IsAutoSpiking
									-- r(4) = r(0).field(2) // arg0.Entity
									registerVal3 = SpikeTrap.IsAutoSpiking(arg0.Entity)
									SpikeTrap.SetAsAutoSpiking(arg0.Entity, (not registerVal3))
								end
								-- r(1) = r(0).field(2) // arg0.Entity
								-- r(1) = r(1):c[6] // arg0.Entity:SetAsLevelSaving
								arg0.Entity:SetAsLevelSaving()
								-- skip the next [49] opcodes // advance 49 lines
							else
								-- r(1) = g[22] // LightningTrap
								-- r(1) = r(1).field(1) // LightningTrap.IsAvailable
								-- r(2) = r(0).field(2) // arg0.Entity
								registerVal1 = LightningTrap.IsAvailable(arg0.Entity)
								if registerVal1 then
									-- r(1) = g[22] // LightningTrap
									-- r(1) = r(1).field(23) // LightningTrap.SetAsAutoZapping
									-- r(2) = r(0).field(2) // arg0.Entity
									-- r(3) = g[22] // LightningTrap
									-- r(3) = r(3).field(24) // LightningTrap.IsAutoZapping
									-- r(4) = r(0).field(2) // arg0.Entity
									registerVal3 = LightningTrap.IsAutoZapping(arg0.Entity)
									LightningTrap.SetAsAutoZapping(arg0.Entity, (not registerVal3))
									-- r(1) = r(0).field(2) // arg0.Entity
									-- r(1) = r(1):c[6] // arg0.Entity:SetAsLevelSaving
									arg0.Entity:SetAsLevelSaving()
									-- skip the next [30] opcodes // advance 30 lines
								else
									-- r(1) = g[25] // FlameTrap
									-- r(1) = r(1).field(1) // FlameTrap.IsAvailable
									-- r(2) = r(0).field(2) // arg0.Entity
									registerVal1 = FlameTrap.IsAvailable(arg0.Entity)
									if registerVal1 then
										-- r(1) = g[25] // FlameTrap
										-- r(1) = r(1).field(26) // FlameTrap.SetAsAutoBlasting
										-- r(2) = r(0).field(2) // arg0.Entity
										-- r(3) = g[25] // FlameTrap
										-- r(3) = r(3).field(27) // FlameTrap.IsAutoBlasting
										-- r(4) = r(0).field(2) // arg0.Entity
										registerVal3 = FlameTrap.IsAutoBlasting(arg0.Entity)
										FlameTrap.SetAsAutoBlasting(arg0.Entity, (not registerVal3))
										-- r(1) = r(0).field(2) // arg0.Entity
										-- r(1) = r(1):c[6] // arg0.Entity:SetAsLevelSaving
										arg0.Entity:SetAsLevelSaving()
										-- skip the next [11] opcodes // advance 11 lines
									else
										-- r(1) = g[28] // Switch
										-- r(1) = r(1).field(1) // Switch.IsAvailable
										-- r(2) = r(0).field(2) // arg0.Entity
										registerVal1 = Switch.IsAvailable(arg0.Entity)
										if registerVal1 then
											-- r(1) = g[28] // Switch
											-- r(1) = r(1).field(29) // Switch.Use
											-- r(2) = r(0).field(2) // arg0.Entity
											-- r(3) = nil
											Switch.Use(arg0.Entity, nil)
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	-- return
end

-- r(0) = g[13] // TriggeredEntity
	-- OP Count: 0x3EC
	-- Constant Count: 0xBA
	-- Registers Count: 0x10
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function TriggeredEntity.Update(arg0)
	-- r(1) = r(0).field(0) // arg0.SecondsBeforeTriggering
	-- skip the next [14] opcodes // advance 14 lines
	-- r(1) = g[3] // QuestManager
	-- r(1) = r(1).field(4) // QuestManager.NewTimer
	-- r(2) = r(0).field(0) // arg0.SecondsBeforeTriggering
	local registerVal1 = QuestManager.NewTimer(arg0.SecondsBeforeTriggering)
	arg0.IdleTimer = registerVal1
	-- r(1) = r(0).field(2) // arg0.IdleTimer
	-- r(1) = r(1):c[5] // arg0.IdleTimer:GetTime
	registerVal1 = arg0.IdleTimer:GetTime()
	-- skip the next [4] opcodes // advance 4 lines
	-- r(1) = g[6] // coroutine
	-- r(1) = r(1).field(7) // coroutine.yield
	coroutine.yield()
	-- skip the next [-9] opcodes // advance -9 lines
	-- r(1) = r(0).field(8) // arg0.Action
	if arg0.Action == "" then
		-- r(1) = r(0):c[10] // arg0:DoDefaultTriggerBehaviour
		arg0:DoDefaultTriggerBehaviour()
		-- skip the next [980] opcodes // advance 980 lines
	else
		-- r(1) = r(0).field(8) // arg0.Action
		if arg0.Action == "Open" then
			-- r(1) = g[12] // Door
			-- r(1) = r(1).field(13) // Door.IsAvailable
			-- r(2) = r(0).field(14) // arg0.Entity
			registerVal1 = Door.IsAvailable(arg0.Entity)
			if registerVal1 then
				-- r(1) = g[12] // Door
				-- r(1) = r(1).field(15) // Door.SetOpen
				-- r(2) = r(0).field(14) // arg0.Entity
				-- r(3) = true
				-- r(4) = true
				Door.SetOpen(arg0.Entity, true, true)
				-- r(1) = r(0).field(14) // arg0.Entity
				-- r(1) = r(1):c[16] // arg0.Entity:SetAsLevelSaving
				arg0.Entity:SetAsLevelSaving()
				-- skip the next [961] opcodes // advance 961 lines
			else
				-- r(1) = g[17] // Chest
				-- r(1) = r(1).field(13) // Chest.IsAvailable
				-- r(2) = r(0).field(14) // arg0.Entity
				registerVal1 = Chest.IsAvailable(arg0.Entity)
				if registerVal1 then
					-- r(1) = g[17] // Chest
					-- r(1) = r(1).field(11) // Chest.Open
					-- r(2) = r(0).field(14) // arg0.Entity
					Chest.Open(arg0.Entity)
					-- skip the next [950] opcodes // advance 950 lines
				else
					-- r(1) = g[18] // FlitSwitchDock
					-- r(1) = r(1).field(13) // FlitSwitchDock.IsAvailable
					-- r(2) = r(0).field(14) // arg0.Entity
					registerVal1 = FlitSwitchDock.IsAvailable(arg0.Entity)
					if registerVal1 then
						-- r(1) = g[18] // FlitSwitchDock
						-- r(1) = r(1).field(19) // FlitSwitchDock.SetAsOpen
						-- r(2) = r(0).field(14) // arg0.Entity
						-- r(3) = true
						FlitSwitchDock.SetAsOpen(arg0.Entity, true)
						-- skip the next [938] opcodes // advance 938 lines
					else
						-- r(1) = r(0).field(8) // arg0.Action
						if arg0.Action == "Close" then
							-- r(1) = g[12] // Door
							-- r(1) = r(1).field(13) // Door.IsAvailable
							-- r(2) = r(0).field(14) // arg0.Entity
							registerVal1 = Door.IsAvailable(arg0.Entity)
							if registerVal1 then
								-- r(1) = g[12] // Door
								-- r(1) = r(1).field(15) // Door.SetOpen
								-- r(2) = r(0).field(14) // arg0.Entity
								-- r(3) = false
								-- r(4) = true
								Door.SetOpen(arg0.Entity, false, true)
								-- skip the next [922] opcodes // advance 922 lines
							else
								-- r(1) = g[18] // FlitSwitchDock
								-- r(1) = r(1).field(13) // FlitSwitchDock.IsAvailable
								-- r(2) = r(0).field(14) // arg0.Entity
								registerVal1 = FlitSwitchDock.IsAvailable(arg0.Entity)
								if registerVal1 then
									-- r(1) = g[18] // FlitSwitchDock
									-- r(1) = r(1).field(19) // FlitSwitchDock.SetAsOpen
									-- r(2) = r(0).field(14) // arg0.Entity
									-- r(3) = false
									FlitSwitchDock.SetAsOpen(arg0.Entity, false)
									-- skip the next [910] opcodes // advance 910 lines
								else
									-- r(1) = r(0).field(8) // arg0.Action
									if arg0.Action == "PlaySound" then
										-- r(1) = g[22] // Sound
										-- r(1) = r(1).field(13) // Sound.IsAvailable
										-- r(2) = r(0).field(14) // arg0.Entity
										registerVal1 = Sound.IsAvailable(arg0.Entity)
										if registerVal1 then
											-- r(1) = g[22] // Sound
											-- r(1) = r(1).field(23) // Sound.PlayEvent
											-- r(2) = r(0).field(14) // arg0.Entity
											-- r(3) = r(0).field(24) // arg0.ActionParameter
											-- r(4) = c[25] // "SPEECH"
											Sound.PlayEvent(arg0.Entity, arg0.ActionParameter, "SPEECH")
											-- skip the next [894] opcodes // advance 894 lines
										else
											-- r(1) = r(0).field(8) // arg0.Action
											if arg0.Action == "PlaySfx" then
												-- r(1) = g[22] // Sound
												-- r(1) = r(1).field(13) // Sound.IsAvailable
												-- r(2) = r(0).field(14) // arg0.Entity
												registerVal1 = Sound.IsAvailable(arg0.Entity)
												if registerVal1 then
													-- r(1) = g[22] // Sound
													-- r(1) = r(1).field(23) // Sound.PlayEvent
													-- r(2) = r(0).field(14) // arg0.Entity
													-- r(3) = r(0).field(24) // arg0.ActionParameter
													-- r(4) = c[9] // ""
													Sound.PlayEvent(arg0.Entity, arg0.ActionParameter, "")
													-- skip the next [878] opcodes // advance 878 lines
												else
													-- r(1) = r(0).field(8) // arg0.Action
													if arg0.Action == "ShowParticle" then
														-- r(1) = r(0).field(24) // arg0.ActionParameter
														if arg0.ActionParameter then
															-- r(1) = r(0).field(14) // arg0.Entity
															-- r(1) = r(1):c[28] // arg0.Entity:GetPosition
															registerVal1 = arg0.Entity:GetPosition()
															-- r(2) = g[29] // cprint
															-- r(3) = c[30] // "GTM - ShowParticle - Creating particle entity: "
															-- r(4) = r(0).field(24) // arg0.ActionParameter
															-- r(5) = c[31] // " at the position of: "
															-- r(6) = g[32] // tostring
															-- r(7) = r(0).field(14) // arg0.Entity
															local registerVal6 = tostring(arg0.Entity)
															-- r(3) = r(3)..r(4)..r(5)..r(6) // ("GTM - ShowParticle - Creating particle entity: " .. arg0.ActionParameter .. " at the position of: " .. registerVal6)
															cprint(("GTM - ShowParticle - Creating particle entity: " .. arg0.ActionParameter .. " at the position of: " .. registerVal6))
															-- r(2) = g[33] // Debug
															-- r(2) = r(2).field(34) // Debug.CreateEntityAtPosition
															-- r(3) = r(0).field(24) // arg0.ActionParameter
															-- r(4) = c[35] // "effect"
															-- r(5) = r(1) // registerVal1
															Debug.CreateEntityAtPosition(arg0.ActionParameter, "effect", registerVal1)
															-- skip the next [853] opcodes // advance 853 lines
														else
															-- r(1) = g[29] // cprint
															-- r(2) = c[36] // "GTM - ShowParticle - self.ActionParameter is empty. Needs a particle!"
															cprint("GTM - ShowParticle - self.ActionParameter is empty. Needs a particle!")
															-- skip the next [849] opcodes // advance 849 lines
														else
															-- r(1) = r(0).field(8) // arg0.Action
															if arg0.Action == "Destroy" then
																-- r(1) = r(0).field(14) // arg0.Entity
																-- r(1) = r(1):c[37] // arg0.Entity:Destroy
																arg0.Entity:Destroy()
																-- skip the next [842] opcodes // advance 842 lines
															else
																-- r(1) = r(0).field(8) // arg0.Action
																if arg0.Action == "ActivateLayer" then
																	-- r(1) = g[39] // Layers
																	-- r(1) = r(1).field(40) // Layers.IsLayerActive
																	-- r(2) = r(0).field(24) // arg0.ActionParameter
																	registerVal1 = Layers.IsLayerActive(arg0.ActionParameter)
																	if not registerVal1 then
																		-- r(1) = g[39] // Layers
																		-- r(1) = r(1).field(38) // Layers.ActivateLayer
																		-- r(2) = r(0).field(24) // arg0.ActionParameter
																		Layers.ActivateLayer(arg0.ActionParameter)
																		-- r(1) = g[32] // tostring
																		-- r(2) = r(0).field(24) // arg0.ActionParameter
																		registerVal1 = tostring(arg0.ActionParameter)
																		-- r(2) = g[29] // cprint
																		-- r(3) = c[41] // "GTM - Activating a layer:"
																		-- r(4) = r(1) // registerVal1
																		-- r(3) = r(3)..r(4) // ("GTM - Activating a layer:" .. registerVal1)
																		cprint(("GTM - Activating a layer:" .. registerVal1))
																		-- skip the next [820] opcodes // advance 820 lines
																	else
																		-- r(1) = g[32] // tostring
																		-- r(2) = r(0).field(24) // arg0.ActionParameter
																		registerVal1 = tostring(arg0.ActionParameter)
																		-- r(2) = g[29] // cprint
																		-- r(3) = c[42] // "GTM - The following layer was already active but activating again in case:"
																		-- r(4) = r(1) // registerVal1
																		-- r(3) = r(3)..r(4) // ("GTM - The following layer was already active but activating again in case:" .. registerVal1)
																		cprint(("GTM - The following layer was already active but activating again in case:" .. registerVal1))
																		-- r(2) = g[39] // Layers
																		-- r(2) = r(2).field(38) // Layers.ActivateLayer
																		-- r(3) = r(0).field(24) // arg0.ActionParameter
																		Layers.ActivateLayer(arg0.ActionParameter)
																		-- skip the next [807] opcodes // advance 807 lines
																	else
																		-- r(1) = r(0).field(8) // arg0.Action
																		if arg0.Action == "DeactivateLayer" then
																			-- r(1) = g[39] // Layers
																			-- r(1) = r(1).field(40) // Layers.IsLayerActive
																			-- r(2) = r(0).field(24) // arg0.ActionParameter
																			registerVal1 = Layers.IsLayerActive(arg0.ActionParameter)
																			if registerVal1 then
																				-- r(1) = g[39] // Layers
																				-- r(1) = r(1).field(43) // Layers.DeactivateLayer
																				-- r(2) = r(0).field(24) // arg0.ActionParameter
																				Layers.DeactivateLayer(arg0.ActionParameter)
																				-- r(1) = g[32] // tostring
																				-- r(2) = r(0).field(24) // arg0.ActionParameter
																				registerVal1 = tostring(arg0.ActionParameter)
																				-- r(2) = g[29] // cprint
																				-- r(3) = c[44] // "GTM - Deactivating a layer:"
																				-- r(4) = r(1) // registerVal1
																				-- r(3) = r(3)..r(4) // ("GTM - Deactivating a layer:" .. registerVal1)
																				cprint(("GTM - Deactivating a layer:" .. registerVal1))
																				-- skip the next [785] opcodes // advance 785 lines
																			else
																				-- r(1) = g[32] // tostring
																				-- r(2) = r(0).field(24) // arg0.ActionParameter
																				registerVal1 = tostring(arg0.ActionParameter)
																				-- r(2) = g[29] // cprint
																				-- r(3) = c[45] // "GTM - The following layer was already inactive but deactivating again just in case:"
																				-- r(4) = r(1) // registerVal1
																				-- r(3) = r(3)..r(4) // ("GTM - The following layer was already inactive but deactivating again just in case:" .. registerVal1)
																				cprint(("GTM - The following layer was already inactive but deactivating again just in case:" .. registerVal1))
																				-- r(2) = g[39] // Layers
																				-- r(2) = r(2).field(43) // Layers.DeactivateLayer
																				-- r(3) = r(0).field(24) // arg0.ActionParameter
																				Layers.DeactivateLayer(arg0.ActionParameter)
																				-- skip the next [772] opcodes // advance 772 lines
																			else
																				-- r(1) = r(0).field(8) // arg0.Action
																				if arg0.Action == "ForcePush" then
																					-- r(1) = g[47] // SpellManager
																					-- r(1) = r(1).field(48) // SpellManager.SetEntitySpellsCanAffectNeutrals
																					-- r(2) = r(0).field(14) // arg0.Entity
																					-- r(3) = true
																					SpellManager.SetEntitySpellsCanAffectNeutrals(arg0.Entity, true)
																					-- r(1) = g[47] // SpellManager
																					-- r(1) = r(1).field(49) // SpellManager.CreateScriptedSpellShot
																					-- r(2) = r(0).field(14) // arg0.Entity
																					-- r(3) = g[50] // ESpellType
																					-- r(3) = r(3).field(51) // ESpellType.SPELL_FORCE_PUSH
																					-- r(4) = c[52] // 1.000000
																					-- r(5) = r(0).field(14) // arg0.Entity
																					-- r(5) = r(5):c[28] // arg0.Entity:GetPosition
																					local registerVal5 = arg0.Entity:GetPosition()
																					-- r(6) = false
																					-- r(7) = r(0).field(14) // arg0.Entity
																					-- r(8) = g[53] // CVector3
																					-- r(9) = c[1] // 0.000000
																					-- r(10) = c[1] // 0.000000
																					-- r(11) = c[1] // 0.000000
																					SpellManager.CreateScriptedSpellShot(arg0.Entity, ESpellType.SPELL_FORCE_PUSH, 1.000000, registerVal5, false, arg0.Entity, CVector3(0.000000, 0.000000, 0.000000))
																					-- skip the next [746] opcodes // advance 746 lines
																				else
																					-- r(1) = r(0).field(8) // arg0.Action
																					if arg0.Action == "GenericTrigger" then
																						-- r(1) = g[55] // MessageEvents
																						-- r(1) = r(1).field(56) // MessageEvents.PostMessage
																						local registerVal2 = {}
																						registerVal2.type = "ScriptTriggerMessage"
																						-- r(3) = r(0).field(14) // arg0.Entity
																						registerVal2.to = arg0.Entity
																						MessageEvents.PostMessage(registerVal2)
																						-- r(1) = g[60] // print
																						-- r(2) = c[61] // "Generic Trigger Message Sent"
																						print("Generic Trigger Message Sent")
																						-- skip the next [732] opcodes // advance 732 lines
																					else
																						-- r(1) = r(0).field(8) // arg0.Action
																						if arg0.Action == "PlayAnimation" then
																							-- r(1) = g[63] // ScriptFunction
																							-- r(1) = r(1).field(64) // ScriptFunction.PlayAnimationOnEntity
																							-- r(2) = r(0).field(14) // arg0.Entity
																							-- r(3) = r(0).field(24) // arg0.ActionParameter
																							ScriptFunction.PlayAnimationOnEntity(arg0.Entity, arg0.ActionParameter)
																							-- skip the next [723] opcodes // advance 723 lines
																						else
																							-- r(1) = r(0).field(8) // arg0.Action
																							if arg0.Action == "PlayAnimationHoldLastFrame" then
																								-- r(1) = g[63] // ScriptFunction
																								-- r(1) = r(1).field(64) // ScriptFunction.PlayAnimationOnEntity
																								-- r(2) = r(0).field(14) // arg0.Entity
																								-- r(3) = r(0).field(24) // arg0.ActionParameter
																								-- r(4) = false
																								-- r(5) = true
																								ScriptFunction.PlayAnimationOnEntity(arg0.Entity, arg0.ActionParameter, false, true)
																								-- r(1) = r(0).field(14) // arg0.Entity
																								-- r(1) = r(1):c[16] // arg0.Entity:SetAsLevelSaving
																								-- r(3) = true
																								arg0.Entity:SetAsLevelSaving(true)
																								-- r(1) = r(0).field(14) // arg0.Entity
																								-- r(1) = r(1):c[66] // arg0.Entity:SetAsGameSaving
																								-- r(3) = true
																								arg0.Entity:SetAsGameSaving(true)
																								-- skip the next [704] opcodes // advance 704 lines
																							else
																								-- r(1) = r(0).field(8) // arg0.Action
																								if arg0.Action == "DeactivateWall" then
																									-- r(1) = g[68] // ArrowBlock
																									-- r(1) = r(1).field(13) // ArrowBlock.IsAvailable
																									-- r(2) = r(0).field(14) // arg0.Entity
																									registerVal1 = ArrowBlock.IsAvailable(arg0.Entity)
																									if registerVal1 then
																										-- r(1) = g[68] // ArrowBlock
																										-- r(1) = r(1).field(69) // ArrowBlock.ActivateWall
																										-- r(2) = r(0).field(14) // arg0.Entity
																										-- r(3) = r(0).field(24) // arg0.ActionParameter
																										-- r(4) = false
																										ArrowBlock.ActivateWall(arg0.Entity, arg0.ActionParameter, false)
																										-- skip the next [688] opcodes // advance 688 lines
																									else
																										-- r(1) = r(0).field(8) // arg0.Action
																										if arg0.Action == "ActivateArrowBlock" then
																											-- r(1) = g[68] // ArrowBlock
																											-- r(1) = r(1).field(13) // ArrowBlock.IsAvailable
																											-- r(2) = r(0).field(14) // arg0.Entity
																											registerVal1 = ArrowBlock.IsAvailable(arg0.Entity)
																											if registerVal1 then
																												-- r(1) = g[63] // ScriptFunction
																												-- r(1) = r(1).field(64) // ScriptFunction.PlayAnimationOnEntity
																												-- r(2) = r(0).field(14) // arg0.Entity
																												-- r(3) = c[71] // "Up"
																												ScriptFunction.PlayAnimationOnEntity(arg0.Entity, "Up")
																												-- r(1) = g[68] // ArrowBlock
																												-- r(1) = r(1).field(72) // ArrowBlock.Activate
																												-- r(2) = r(0).field(14) // arg0.Entity
																												-- r(3) = true
																												ArrowBlock.Activate(arg0.Entity, true)
																												-- r(1) = g[68] // ArrowBlock
																												-- r(1) = r(1).field(69) // ArrowBlock.ActivateWall
																												-- r(2) = r(0).field(14) // arg0.Entity
																												-- r(3) = r(0).field(24) // arg0.ActionParameter
																												-- r(4) = false
																												ArrowBlock.ActivateWall(arg0.Entity, arg0.ActionParameter, false)
																												-- skip the next [662] opcodes // advance 662 lines
																											else
																												-- r(1) = r(0).field(8) // arg0.Action
																												if arg0.Action == "DeactivateArrowBlock" then
																													-- r(1) = g[68] // ArrowBlock
																													-- r(1) = r(1).field(13) // ArrowBlock.IsAvailable
																													-- r(2) = r(0).field(14) // arg0.Entity
																													registerVal1 = ArrowBlock.IsAvailable(arg0.Entity)
																													if registerVal1 then
																														-- r(1) = g[63] // ScriptFunction
																														-- r(1) = r(1).field(64) // ScriptFunction.PlayAnimationOnEntity
																														-- r(2) = r(0).field(14) // arg0.Entity
																														-- r(3) = c[74] // "Idle"
																														ScriptFunction.PlayAnimationOnEntity(arg0.Entity, "Idle")
																														-- r(1) = g[68] // ArrowBlock
																														-- r(1) = r(1).field(72) // ArrowBlock.Activate
																														-- r(2) = r(0).field(14) // arg0.Entity
																														-- r(3) = false
																														ArrowBlock.Activate(arg0.Entity, false)
																														-- skip the next [642] opcodes // advance 642 lines
																													else
																														-- r(1) = r(0).field(8) // arg0.Action
																														if arg0.Action == "ActivateRoute" then
																															-- r(1) = g[68] // ArrowBlock
																															-- r(1) = r(1).field(13) // ArrowBlock.IsAvailable
																															-- r(2) = r(0).field(14) // arg0.Entity
																															registerVal1 = ArrowBlock.IsAvailable(arg0.Entity)
																															if registerVal1 then
																																-- r(1) = g[68] // ArrowBlock
																																-- r(1) = r(1).field(75) // ArrowBlock.ActivateRoute
																																-- r(2) = r(0).field(14) // arg0.Entity
																																-- r(3) = r(0).field(24) // arg0.ActionParameter
																																-- r(4) = true
																																ArrowBlock.ActivateRoute(arg0.Entity, arg0.ActionParameter, true)
																																-- skip the next [626] opcodes // advance 626 lines
																															else
																																-- r(1) = r(0).field(8) // arg0.Action
																																if arg0.Action == "DeactivateRoute" then
																																	-- r(1) = g[68] // ArrowBlock
																																	-- r(1) = r(1).field(13) // ArrowBlock.IsAvailable
																																	-- r(2) = r(0).field(14) // arg0.Entity
																																	registerVal1 = ArrowBlock.IsAvailable(arg0.Entity)
																																	if registerVal1 then
																																		-- r(1) = g[68] // ArrowBlock
																																		-- r(1) = r(1).field(75) // ArrowBlock.ActivateRoute
																																		-- r(2) = r(0).field(14) // arg0.Entity
																																		-- r(3) = r(0).field(24) // arg0.ActionParameter
																																		-- r(4) = false
																																		ArrowBlock.ActivateRoute(arg0.Entity, arg0.ActionParameter, false)
																																		-- skip the next [610] opcodes // advance 610 lines
																																	else
																																		-- r(1) = r(0).field(8) // arg0.Action
																																		if arg0.Action == "IncrementCounter" then
																																			-- r(1) = g[78] // Gameflow
																																			-- r(2) = r(0).field(24) // arg0.ActionParameter
																																			-- r(3) = g[78] // Gameflow
																																			-- r(4) = r(0).field(24) // arg0.ActionParameter
																																			-- r(3) = r(3)[r(4)] // Gameflow[arg0.ActionParameter]
																																			Gameflow[arg0.ActionParameter] = (Gameflow[arg0.ActionParameter] + 1.000000)
																																			-- r(1) = g[29] // cprint
																																			-- r(2) = c[79] // "GTM - Action - Incremented a counter. Total is now: "
																																			-- r(3) = g[78] // Gameflow
																																			-- r(4) = r(0).field(24) // arg0.ActionParameter
																																			-- r(3) = r(3)[r(4)] // Gameflow[arg0.ActionParameter]
																																			-- r(2) = r(2)..r(3) // ("GTM - Action - Incremented a counter. Total is now: " .. Gameflow[arg0.ActionParameter])
																																			cprint(("GTM - Action - Incremented a counter. Total is now: " .. Gameflow[arg0.ActionParameter]))
																																			-- skip the next [592] opcodes // advance 592 lines
																																		else
																																			-- r(1) = r(0).field(8) // arg0.Action
																																			if arg0.Action == "DecrementCounter" then
																																				-- r(1) = g[78] // Gameflow
																																				-- r(2) = r(0).field(24) // arg0.ActionParameter
																																				-- r(3) = g[78] // Gameflow
																																				-- r(4) = r(0).field(24) // arg0.ActionParameter
																																				-- r(3) = r(3)[r(4)] // Gameflow[arg0.ActionParameter]
																																				Gameflow[arg0.ActionParameter] = (Gameflow[arg0.ActionParameter] - 1.000000)
																																				-- r(1) = g[29] // cprint
																																				-- r(2) = c[81] // "GTM - Action - Decremented a counter. Total is now: "
																																				-- r(3) = g[78] // Gameflow
																																				-- r(4) = r(0).field(24) // arg0.ActionParameter
																																				-- r(3) = r(3)[r(4)] // Gameflow[arg0.ActionParameter]
																																				-- r(2) = r(2)..r(3) // ("GTM - Action - Decremented a counter. Total is now: " .. Gameflow[arg0.ActionParameter])
																																				cprint(("GTM - Action - Decremented a counter. Total is now: " .. Gameflow[arg0.ActionParameter]))
																																				-- skip the next [574] opcodes // advance 574 lines
																																			else
																																				-- r(1) = r(0).field(8) // arg0.Action
																																				if arg0.Action == "LookAtCamera" then
																																					-- r(1) = g[29] // cprint
																																					-- r(2) = c[83] // "GTMs - LookAtCamera action found"
																																					cprint("GTMs - LookAtCamera action found")
																																					-- r(1) = r(0).field(14) // arg0.Entity
																																					-- r(1) = r(1):c[84] // arg0.Entity:GetRecord
																																					registerVal1 = arg0.Entity:GetRecord()
																																					-- r(2) = r(1):c[84] // registerVal1:GetRecord
																																					-- r(4) = c[85] // "GTMCameraComponent"
																																					registerVal2 = registerVal1:GetRecord("GTMCameraComponent")
																																					-- r(3) = r(2):c[86] // registerVal2:GetS32
																																					-- r(5) = c[87] // "FOV"
																																					local registerVal3 = registerVal2:GetS32("FOV")
																																					-- r(4) = r(2):c[86] // registerVal2:GetS32
																																					-- r(6) = c[88] // "BlendInSeconds"
																																					local registerVal4 = registerVal2:GetS32("BlendInSeconds")
																																					-- r(5) = r(2):c[86] // registerVal2:GetS32
																																					-- r(7) = c[89] // "BlendOutSeconds"
																																					registerVal5 = registerVal2:GetS32("BlendOutSeconds")
																																					-- r(6) = r(2):c[90] // registerVal2:GetBoolean
																																					-- r(8) = c[91] // "SupercedesCombat"
																																					registerVal6 = registerVal2:GetBoolean("SupercedesCombat")
																																					-- r(7) = r(2):c[84] // registerVal2:GetRecord
																																					-- r(9) = c[92] // "CameraPosition"
																																					local registerVal7 = registerVal2:GetRecord("CameraPosition")
																																					-- r(8) = r(7):c[93] // registerVal7:IsNull
																																					local registerVal8 = registerVal7:IsNull()
																																					if not registerVal8 then
																																						-- r(8) = r(7):c[95] // registerVal7:GetFloat
																																						-- r(10) = c[96] // "CamXPos"
																																						registerVal8 = registerVal7:GetFloat("CamXPos")
																																						arg0.pos_x = registerVal8
																																						-- r(8) = r(7):c[95] // registerVal7:GetFloat
																																						-- r(10) = c[98] // "CamYPos"
																																						registerVal8 = registerVal7:GetFloat("CamYPos")
																																						arg0.pos_y = registerVal8
																																						-- r(8) = r(7):c[95] // registerVal7:GetFloat
																																						-- r(10) = c[100] // "CamZPos"
																																						registerVal8 = registerVal7:GetFloat("CamZPos")
																																						arg0.pos_z = registerVal8
																																					end
																																					-- r(8) = r(2):c[84] // registerVal2:GetRecord
																																					-- r(10) = c[101] // "PointingAtTarget"
																																					registerVal8 = registerVal2:GetRecord("PointingAtTarget")
																																					-- r(9) = r(8):c[93] // registerVal8:IsNull
																																					local registerVal9 = registerVal8:IsNull()
																																					if not registerVal9 then
																																						-- r(9) = r(8):c[95] // registerVal8:GetFloat
																																						-- r(11) = c[103] // "TargetXPos"
																																						registerVal9 = registerVal8:GetFloat("TargetXPos")
																																						arg0.focus_x = registerVal9
																																						-- r(9) = r(8):c[95] // registerVal8:GetFloat
																																						-- r(11) = c[105] // "TargetYPos"
																																						registerVal9 = registerVal8:GetFloat("TargetYPos")
																																						arg0.focus_y = registerVal9
																																						-- r(9) = r(8):c[95] // registerVal8:GetFloat
																																						-- r(11) = c[107] // "TargetZPos"
																																						registerVal9 = registerVal8:GetFloat("TargetZPos")
																																						arg0.focus_z = registerVal9
																																					end
																																					-- r(9) = g[108] // GameflowThreadBase
																																					-- r(9) = r(9):c[109] // GameflowThreadBase:SetLookAtCamera
																																					local registerVal11 = {}
																																					-- r(12) = g[53] // CVector3
																																					-- r(13) = r(0).field(94) // arg0.pos_x
																																					-- r(14) = r(0).field(97) // arg0.pos_y
																																					-- r(15) = r(0).field(99) // arg0.pos_z
																																					local registerVal12 = CVector3(arg0.pos_x, arg0.pos_y, arg0.pos_z)
																																					registerVal11.Position = registerVal12
																																					-- r(12) = g[53] // CVector3
																																					-- r(13) = r(0).field(102) // arg0.focus_x
																																					-- r(14) = r(0).field(104) // arg0.focus_y
																																					-- r(15) = r(0).field(106) // arg0.focus_z
																																					registerVal12 = CVector3(arg0.focus_x, arg0.focus_y, arg0.focus_z)
																																					registerVal11.Focus = registerVal12
																																					registerVal11.BlendInSeconds = registerVal4
																																					registerVal11.BlendOutSeconds = registerVal5
																																					registerVal11.FOV = registerVal3
																																					registerVal11.SupercedesCombat = registerVal6
																																					GameflowThreadBase:SetLookAtCamera(registerVal11)
																																					-- r(9) = g[29] // cprint
																																					-- r(10) = c[112] // "GTMs - LookAtCamera - camera on!"
																																					cprint("GTMs - LookAtCamera - camera on!")
																																					-- r(9) = g[113] // tonumber
																																					-- r(10) = r(0).field(24) // arg0.ActionParameter
																																					registerVal9 = tonumber(arg0.ActionParameter)
																																					-- skip the next [484] opcodes // advance 484 lines
																																					if registerVal9 and 0.000000 < registerVal9 then
																																						-- r(10) = g[29] // cprint
																																						-- r(11) = c[114] // "GTMs - LookAtCamera - ActionParameter is greater than zero. Using this as the time the LookAtCamera lasts for!"
																																						cprint("GTMs - LookAtCamera - ActionParameter is greater than zero. Using this as the time the LookAtCamera lasts for!")
																																						-- r(10) = g[108] // GameflowThreadBase
																																						-- r(10) = r(10):c[115] // GameflowThreadBase:WaitForTimeInSeconds
																																						-- r(12) = r(9) // registerVal9
																																						GameflowThreadBase:WaitForTimeInSeconds(registerVal9)
																																						-- r(10) = g[108] // GameflowThreadBase
																																						-- r(10) = r(10):c[116] // GameflowThreadBase:ClearLookAtCamera
																																						GameflowThreadBase:ClearLookAtCamera()
																																						-- r(10) = g[29] // cprint
																																						-- r(11) = c[117] // "GTMs - LookAtCamera - camera off via actionparameter timer!"
																																						cprint("GTMs - LookAtCamera - camera off via actionparameter timer!")
																																						-- skip the next [468] opcodes // advance 468 lines
																																					else
																																						-- r(1) = r(0).field(8) // arg0.Action
																																						if arg0.Action == "LookAtCameraOff" then
																																							-- r(1) = g[29] // cprint
																																							-- r(2) = c[119] // "GTMs - LookAtCameraOff action found"
																																							cprint("GTMs - LookAtCameraOff action found")
																																							-- r(1) = g[108] // GameflowThreadBase
																																							-- r(1) = r(1):c[116] // GameflowThreadBase:ClearLookAtCamera
																																							GameflowThreadBase:ClearLookAtCamera()
																																							-- r(1) = g[29] // cprint
																																							-- r(2) = c[120] // "GTMs - LookAtCamera - camera off!"
																																							cprint("GTMs - LookAtCamera - camera off!")
																																							-- skip the next [455] opcodes // advance 455 lines
																																						else
																																							-- r(1) = r(0).field(8) // arg0.Action
																																							if arg0.Action == "FakeACrime" then
																																								-- r(1) = g[113] // tonumber
																																								-- r(2) = r(0).field(24) // arg0.ActionParameter
																																								registerVal1 = tonumber(arg0.ActionParameter)
																																								-- skip the next [24] opcodes // advance 24 lines
																																								if registerVal1 and registerVal1 == 0.000000 then
																																									-- r(2) = g[55] // MessageEvents
																																									-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																									registerVal3 = {}
																																									-- r(4) = g[122] // EMessageEventType
																																									-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																									registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																									-- r(4) = g[125] // GetLocalHero
																																									registerVal4 = GetLocalHero()
																																									registerVal3.from = registerVal4
																																									-- r(4) = g[125] // GetLocalHero
																																									registerVal4 = GetLocalHero()
																																									registerVal3.to = registerVal4
																																									-- r(4) = g[127] // ECrimeType
																																									-- r(4) = r(4).field(128) // ECrimeType.ECT_ATTEMPTED_MURDER
																																									registerVal3.extra_data = ECrimeType.ECT_ATTEMPTED_MURDER
																																									-- r(4) = g[125] // GetLocalHero
																																									registerVal4 = GetLocalHero()
																																									-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																									registerVal4 = registerVal4:GetPosition()
																																									registerVal3.pos = registerVal4
																																									MessageEvents.PostMessage(registerVal3)
																																									-- skip the next [315] opcodes // advance 315 lines
																																								else
																																									-- skip the next [24] opcodes // advance 24 lines
																																									if registerVal1 and registerVal1 == 1.000000 then
																																										-- r(2) = g[55] // MessageEvents
																																										-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																										registerVal3 = {}
																																										-- r(4) = g[122] // EMessageEventType
																																										-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																										registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																										-- r(4) = g[125] // GetLocalHero
																																										registerVal4 = GetLocalHero()
																																										registerVal3.from = registerVal4
																																										-- r(4) = g[125] // GetLocalHero
																																										registerVal4 = GetLocalHero()
																																										registerVal3.to = registerVal4
																																										-- r(4) = g[127] // ECrimeType
																																										-- r(4) = r(4).field(130) // ECrimeType.ECT_MURDER
																																										registerVal3.extra_data = ECrimeType.ECT_MURDER
																																										-- r(4) = g[125] // GetLocalHero
																																										registerVal4 = GetLocalHero()
																																										-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																										registerVal4 = registerVal4:GetPosition()
																																										registerVal3.pos = registerVal4
																																										MessageEvents.PostMessage(registerVal3)
																																										-- skip the next [289] opcodes // advance 289 lines
																																									else
																																										-- skip the next [24] opcodes // advance 24 lines
																																										if registerVal1 and registerVal1 == 2.000000 then
																																											-- r(2) = g[55] // MessageEvents
																																											-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																											registerVal3 = {}
																																											-- r(4) = g[122] // EMessageEventType
																																											-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																											registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																											-- r(4) = g[125] // GetLocalHero
																																											registerVal4 = GetLocalHero()
																																											registerVal3.from = registerVal4
																																											-- r(4) = g[125] // GetLocalHero
																																											registerVal4 = GetLocalHero()
																																											registerVal3.to = registerVal4
																																											-- r(4) = g[127] // ECrimeType
																																											-- r(4) = r(4).field(132) // ECrimeType.ECT_DRUNK_DISORDERLY
																																											registerVal3.extra_data = ECrimeType.ECT_DRUNK_DISORDERLY
																																											-- r(4) = g[125] // GetLocalHero
																																											registerVal4 = GetLocalHero()
																																											-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																											registerVal4 = registerVal4:GetPosition()
																																											registerVal3.pos = registerVal4
																																											MessageEvents.PostMessage(registerVal3)
																																											-- skip the next [263] opcodes // advance 263 lines
																																										else
																																											-- skip the next [24] opcodes // advance 24 lines
																																											if registerVal1 and registerVal1 == 3.000000 then
																																												-- r(2) = g[55] // MessageEvents
																																												-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																												registerVal3 = {}
																																												-- r(4) = g[122] // EMessageEventType
																																												-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																												registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																												-- r(4) = g[125] // GetLocalHero
																																												registerVal4 = GetLocalHero()
																																												registerVal3.from = registerVal4
																																												-- r(4) = g[125] // GetLocalHero
																																												registerVal4 = GetLocalHero()
																																												registerVal3.to = registerVal4
																																												-- r(4) = g[127] // ECrimeType
																																												-- r(4) = r(4).field(134) // ECrimeType.ECT_EXTORTION
																																												registerVal3.extra_data = ECrimeType.ECT_EXTORTION
																																												-- r(4) = g[125] // GetLocalHero
																																												registerVal4 = GetLocalHero()
																																												-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																												registerVal4 = registerVal4:GetPosition()
																																												registerVal3.pos = registerVal4
																																												MessageEvents.PostMessage(registerVal3)
																																												-- skip the next [237] opcodes // advance 237 lines
																																											else
																																												-- skip the next [24] opcodes // advance 24 lines
																																												if registerVal1 and registerVal1 == 4.000000 then
																																													-- r(2) = g[55] // MessageEvents
																																													-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																													registerVal3 = {}
																																													-- r(4) = g[122] // EMessageEventType
																																													-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																													registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																													-- r(4) = g[125] // GetLocalHero
																																													registerVal4 = GetLocalHero()
																																													registerVal3.from = registerVal4
																																													-- r(4) = g[125] // GetLocalHero
																																													registerVal4 = GetLocalHero()
																																													registerVal3.to = registerVal4
																																													-- r(4) = g[127] // ECrimeType
																																													-- r(4) = r(4).field(136) // ECrimeType.ECT_HARASSMENT
																																													registerVal3.extra_data = ECrimeType.ECT_HARASSMENT
																																													-- r(4) = g[125] // GetLocalHero
																																													registerVal4 = GetLocalHero()
																																													-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																													registerVal4 = registerVal4:GetPosition()
																																													registerVal3.pos = registerVal4
																																													MessageEvents.PostMessage(registerVal3)
																																													-- skip the next [211] opcodes // advance 211 lines
																																												else
																																													-- skip the next [24] opcodes // advance 24 lines
																																													if registerVal1 and registerVal1 == 5.000000 then
																																														-- r(2) = g[55] // MessageEvents
																																														-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																														registerVal3 = {}
																																														-- r(4) = g[122] // EMessageEventType
																																														-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																														registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																														-- r(4) = g[125] // GetLocalHero
																																														registerVal4 = GetLocalHero()
																																														registerVal3.from = registerVal4
																																														-- r(4) = g[125] // GetLocalHero
																																														registerVal4 = GetLocalHero()
																																														registerVal3.to = registerVal4
																																														-- r(4) = g[127] // ECrimeType
																																														-- r(4) = r(4).field(138) // ECrimeType.ECT_PAROLE_VIOLATION
																																														registerVal3.extra_data = ECrimeType.ECT_PAROLE_VIOLATION
																																														-- r(4) = g[125] // GetLocalHero
																																														registerVal4 = GetLocalHero()
																																														-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																														registerVal4 = registerVal4:GetPosition()
																																														registerVal3.pos = registerVal4
																																														MessageEvents.PostMessage(registerVal3)
																																														-- skip the next [185] opcodes // advance 185 lines
																																													else
																																														-- skip the next [24] opcodes // advance 24 lines
																																														if registerVal1 and registerVal1 == 6.000000 then
																																															-- r(2) = g[55] // MessageEvents
																																															-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																															registerVal3 = {}
																																															-- r(4) = g[122] // EMessageEventType
																																															-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																															registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																															-- r(4) = g[125] // GetLocalHero
																																															registerVal4 = GetLocalHero()
																																															registerVal3.from = registerVal4
																																															-- r(4) = g[125] // GetLocalHero
																																															registerVal4 = GetLocalHero()
																																															registerVal3.to = registerVal4
																																															-- r(4) = g[127] // ECrimeType
																																															-- r(4) = r(4).field(140) // ECrimeType.ECT_RESISTING_ARREST
																																															registerVal3.extra_data = ECrimeType.ECT_RESISTING_ARREST
																																															-- r(4) = g[125] // GetLocalHero
																																															registerVal4 = GetLocalHero()
																																															-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																															registerVal4 = registerVal4:GetPosition()
																																															registerVal3.pos = registerVal4
																																															MessageEvents.PostMessage(registerVal3)
																																															-- skip the next [159] opcodes // advance 159 lines
																																														else
																																															-- skip the next [24] opcodes // advance 24 lines
																																															if registerVal1 and registerVal1 == 7.000000 then
																																																-- r(2) = g[55] // MessageEvents
																																																-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																																registerVal3 = {}
																																																-- r(4) = g[122] // EMessageEventType
																																																-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																																registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																																-- r(4) = g[125] // GetLocalHero
																																																registerVal4 = GetLocalHero()
																																																registerVal3.from = registerVal4
																																																-- r(4) = g[125] // GetLocalHero
																																																registerVal4 = GetLocalHero()
																																																registerVal3.to = registerVal4
																																																-- r(4) = g[127] // ECrimeType
																																																-- r(4) = r(4).field(142) // ECrimeType.ECT_THEFT
																																																registerVal3.extra_data = ECrimeType.ECT_THEFT
																																																-- r(4) = g[125] // GetLocalHero
																																																registerVal4 = GetLocalHero()
																																																-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																																registerVal4 = registerVal4:GetPosition()
																																																registerVal3.pos = registerVal4
																																																MessageEvents.PostMessage(registerVal3)
																																																-- skip the next [133] opcodes // advance 133 lines
																																															else
																																																-- skip the next [24] opcodes // advance 24 lines
																																																if registerVal1 and registerVal1 == 8.000000 then
																																																	-- r(2) = g[55] // MessageEvents
																																																	-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																																	registerVal3 = {}
																																																	-- r(4) = g[122] // EMessageEventType
																																																	-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																																	registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																																	-- r(4) = g[125] // GetLocalHero
																																																	registerVal4 = GetLocalHero()
																																																	registerVal3.from = registerVal4
																																																	-- r(4) = g[125] // GetLocalHero
																																																	registerVal4 = GetLocalHero()
																																																	registerVal3.to = registerVal4
																																																	-- r(4) = g[127] // ECrimeType
																																																	-- r(4) = r(4).field(144) // ECrimeType.ECT_TRESPASS
																																																	registerVal3.extra_data = ECrimeType.ECT_TRESPASS
																																																	-- r(4) = g[125] // GetLocalHero
																																																	registerVal4 = GetLocalHero()
																																																	-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																																	registerVal4 = registerVal4:GetPosition()
																																																	registerVal3.pos = registerVal4
																																																	MessageEvents.PostMessage(registerVal3)
																																																	-- skip the next [107] opcodes // advance 107 lines
																																																else
																																																	-- skip the next [24] opcodes // advance 24 lines
																																																	if registerVal1 and registerVal1 == 9.000000 then
																																																		-- r(2) = g[55] // MessageEvents
																																																		-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																																		registerVal3 = {}
																																																		-- r(4) = g[122] // EMessageEventType
																																																		-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																																		registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																																		-- r(4) = g[125] // GetLocalHero
																																																		registerVal4 = GetLocalHero()
																																																		registerVal3.from = registerVal4
																																																		-- r(4) = g[125] // GetLocalHero
																																																		registerVal4 = GetLocalHero()
																																																		registerVal3.to = registerVal4
																																																		-- r(4) = g[127] // ECrimeType
																																																		-- r(4) = r(4).field(146) // ECrimeType.ECT_VAGRANCY
																																																		registerVal3.extra_data = ECrimeType.ECT_VAGRANCY
																																																		-- r(4) = g[125] // GetLocalHero
																																																		registerVal4 = GetLocalHero()
																																																		-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																																		registerVal4 = registerVal4:GetPosition()
																																																		registerVal3.pos = registerVal4
																																																		MessageEvents.PostMessage(registerVal3)
																																																		-- skip the next [81] opcodes // advance 81 lines
																																																	else
																																																		-- skip the next [24] opcodes // advance 24 lines
																																																		if registerVal1 and registerVal1 == 10.000000 then
																																																			-- r(2) = g[55] // MessageEvents
																																																			-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																																			registerVal3 = {}
																																																			-- r(4) = g[122] // EMessageEventType
																																																			-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																																			registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																																			-- r(4) = g[125] // GetLocalHero
																																																			registerVal4 = GetLocalHero()
																																																			registerVal3.from = registerVal4
																																																			-- r(4) = g[125] // GetLocalHero
																																																			registerVal4 = GetLocalHero()
																																																			registerVal3.to = registerVal4
																																																			-- r(4) = g[127] // ECrimeType
																																																			-- r(4) = r(4).field(148) // ECrimeType.ECT_VANDALISM
																																																			registerVal3.extra_data = ECrimeType.ECT_VANDALISM
																																																			-- r(4) = g[125] // GetLocalHero
																																																			registerVal4 = GetLocalHero()
																																																			-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																																			registerVal4 = registerVal4:GetPosition()
																																																			registerVal3.pos = registerVal4
																																																			MessageEvents.PostMessage(registerVal3)
																																																			-- skip the next [55] opcodes // advance 55 lines
																																																		else
																																																			-- skip the next [24] opcodes // advance 24 lines
																																																			if registerVal1 and registerVal1 == 11.000000 then
																																																				-- r(2) = g[55] // MessageEvents
																																																				-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																																				registerVal3 = {}
																																																				-- r(4) = g[122] // EMessageEventType
																																																				-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																																				registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																																				-- r(4) = g[125] // GetLocalHero
																																																				registerVal4 = GetLocalHero()
																																																				registerVal3.from = registerVal4
																																																				-- r(4) = g[125] // GetLocalHero
																																																				registerVal4 = GetLocalHero()
																																																				registerVal3.to = registerVal4
																																																				-- r(4) = g[127] // ECrimeType
																																																				-- r(4) = r(4).field(150) // ECrimeType.ECT_GRAVE_ROBBING
																																																				registerVal3.extra_data = ECrimeType.ECT_GRAVE_ROBBING
																																																				-- r(4) = g[125] // GetLocalHero
																																																				registerVal4 = GetLocalHero()
																																																				-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																																				registerVal4 = registerVal4:GetPosition()
																																																				registerVal3.pos = registerVal4
																																																				MessageEvents.PostMessage(registerVal3)
																																																				-- skip the next [29] opcodes // advance 29 lines
																																																			else
																																																				-- skip the next [24] opcodes // advance 24 lines
																																																				if registerVal1 and registerVal1 == 12.000000 then
																																																					-- r(2) = g[55] // MessageEvents
																																																					-- r(2) = r(2).field(56) // MessageEvents.PostMessage
																																																					registerVal3 = {}
																																																					-- r(4) = g[122] // EMessageEventType
																																																					-- r(4) = r(4).field(123) // EMessageEventType.MESSAGE_EVENT_CRIME
																																																					registerVal3.type = EMessageEventType.MESSAGE_EVENT_CRIME
																																																					-- r(4) = g[125] // GetLocalHero
																																																					registerVal4 = GetLocalHero()
																																																					registerVal3.from = registerVal4
																																																					-- r(4) = g[125] // GetLocalHero
																																																					registerVal4 = GetLocalHero()
																																																					registerVal3.to = registerVal4
																																																					-- r(4) = g[127] // ECrimeType
																																																					-- r(4) = r(4).field(152) // ECrimeType.ECT_MAX
																																																					registerVal3.extra_data = ECrimeType.ECT_MAX
																																																					-- r(4) = g[125] // GetLocalHero
																																																					registerVal4 = GetLocalHero()
																																																					-- r(4) = r(4):c[28] // registerVal4:GetPosition
																																																					registerVal4 = registerVal4:GetPosition()
																																																					registerVal3.pos = registerVal4
																																																					MessageEvents.PostMessage(registerVal3)
																																																					-- skip the next [3] opcodes // advance 3 lines
																																																				else
																																																					-- r(2) = g[29] // cprint
																																																					-- r(3) = c[153] // "GTMs - FakeACrime - message NOT sent - no known number added as the parameter"
																																																					cprint("GTMs - FakeACrime - message NOT sent - no known number added as the parameter")
																																																				end
																																																			end
																																																		end
																																																	end
																																																end
																																															end
																																														end
																																													end
																																												end
																																											end
																																										end
																																									end
																																								end
																																								-- r(2) = g[32] // tostring
																																								-- r(3) = r(0).field(24) // arg0.ActionParameter
																																								registerVal2 = tostring(arg0.ActionParameter)
																																								-- r(3) = g[29] // cprint
																																								-- r(4) = c[154] // "GTMs - FakeACrime - message sent - pretended a crime has occured of type:"
																																								-- r(5) = r(2) // registerVal2
																																								-- r(4) = r(4)..r(5) // ("GTMs - FakeACrime - message sent - pretended a crime has occured of type:" .. registerVal2)
																																								cprint(("GTMs - FakeACrime - message sent - pretended a crime has occured of type:" .. registerVal2))
																																								-- skip the next [99] opcodes // advance 99 lines
																																							else
																																								-- r(1) = r(0).field(8) // arg0.Action
																																								if arg0.Action == "Talk" then
																																									-- r(1) = g[29] // cprint
																																									-- r(2) = c[156] // "GTM - Action - Talk detected - setting up..."
																																									cprint("GTM - Action - Talk detected - setting up...")
																																									-- r(1) = r(0).field(14) // arg0.Entity
																																									-- r(1) = r(1):c[84] // arg0.Entity:GetRecord
																																									registerVal1 = arg0.Entity:GetRecord()
																																									-- r(2) = r(1):c[84] // registerVal1:GetRecord
																																									-- r(4) = c[157] // "ReadableComponent"
																																									registerVal2 = registerVal1:GetRecord("ReadableComponent")
																																									-- r(3) = r(1):c[84] // registerVal1:GetRecord
																																									-- r(5) = c[158] // "TalkComponent"
																																									registerVal3 = registerVal1:GetRecord("TalkComponent")
																																									-- r(4) = r(3):c[93] // registerVal3:IsNull
																																									registerVal4 = registerVal3:IsNull()
																																									if not registerVal4 then
																																										-- r(4) = r(3):c[160] // registerVal3:GetString
																																										-- r(6) = c[159] // "Narrator"
																																										registerVal4 = registerVal3:GetString("Narrator")
																																										arg0.Narrator = registerVal4
																																									end
																																									-- r(4) = g[32] // tostring
																																									-- r(5) = r(0).field(24) // arg0.ActionParameter
																																									registerVal4 = tostring(arg0.ActionParameter)
																																									arg0.TextTag = registerVal4
																																									-- r(4) = g[29] // cprint
																																									-- r(5) = c[162] // "GTM - Talk - Took text tag from GTM ActionParameter: "
																																									-- r(6) = r(0).field(161) // arg0.TextTag
																																									-- r(5) = r(5)..r(6) // ("GTM - Talk - Took text tag from GTM ActionParameter: " .. arg0.TextTag)
																																									cprint(("GTM - Talk - Took text tag from GTM ActionParameter: " .. arg0.TextTag))
																																									-- r(4) = g[22] // Sound
																																									-- r(4) = r(4).field(13) // Sound.IsAvailable
																																									-- r(5) = r(0).field(14) // arg0.Entity
																																									registerVal4 = Sound.IsAvailable(arg0.Entity)
																																									if registerVal4 then
																																										-- r(4) = g[155] // Talk
																																										-- r(4) = r(4).field(155) // Talk.Talk
																																										-- r(5) = r(0).field(14) // arg0.Entity
																																										-- r(6) = r(0).field(161) // arg0.TextTag
																																										Talk.Talk(arg0.Entity, arg0.TextTag)
																																										-- r(4) = g[29] // cprint
																																										-- r(5) = c[163] // "GTM - Sound played: "
																																										-- r(6) = r(0).field(161) // arg0.TextTag
																																										-- r(7) = c[164] // " Narrator: "
																																										-- r(8) = r(0).field(159) // arg0.Narrator
																																										-- r(5) = r(5)..r(6)..r(7)..r(8) // ("GTM - Sound played: " .. arg0.TextTag .. " Narrator: " .. arg0.Narrator)
																																										cprint(("GTM - Sound played: " .. arg0.TextTag .. " Narrator: " .. arg0.Narrator))
																																										-- skip the next [48] opcodes // advance 48 lines
																																									else
																																										-- r(1) = r(0).field(8) // arg0.Action
																																										if arg0.Action == "CranePickUpTurn90" then
																																											registerVal1 = {}
																																											-- r(2) = g[167] // EScriptableAction
																																											-- r(2) = r(2).field(168) // EScriptableAction.LOOP
																																											registerVal1.Type = EScriptableAction.LOOP
																																											registerVal2 = {}
																																											-- r(3) = g[167] // EScriptableAction
																																											-- r(3) = r(3).field(170) // EScriptableAction.CREATE_AND_ATTACH_AND_THEN_DESTROY_ENTITY_AT_DUMMY
																																											registerVal2.Type = EScriptableAction.CREATE_AND_ATTACH_AND_THEN_DESTROY_ENTITY_AT_DUMMY
																																											-- r(3) = r(0).field(24) // arg0.ActionParameter
																																											registerVal2.EntityName = arg0.ActionParameter
																																											registerVal2.Anim = "PickUp_Turn90_PutDown"
																																											registerVal1.LoopAction = registerVal2
																																											registerVal1.NumLoops = 0.000000
																																											-- r(2) = g[8] // Action
																																											-- r(2) = r(2).field(176) // Action.SetCurrentAction
																																											-- r(3) = r(0).field(14) // arg0.Entity
																																											-- r(4) = r(1) // registerVal1
																																											registerVal2 = Action.SetCurrentAction(arg0.Entity, registerVal1)
																																											arg0.LoopedActionID = registerVal2
																																											-- skip the next [25] opcodes // advance 25 lines
																																										else
																																											-- r(1) = r(0).field(8) // arg0.Action
																																											if arg0.Action == "Reset" then
																																												-- r(1) = g[178] // GetIDFromEntity
																																												-- r(2) = r(0).field(14) // arg0.Entity
																																												registerVal1 = GetIDFromEntity(arg0.Entity)
																																												-- r(2) = g[3] // QuestManager
																																												-- r(2) = r(2).field(179) // QuestManager.EntitiesWithQuestThread
																																												-- r(2) = r(2)[r(1)] // QuestManager.EntitiesWithQuestThread[registerVal1]
																																												if QuestManager.EntitiesWithQuestThread[registerVal1] == nil then
																																													-- r(3) = g[3] // QuestManager
																																													-- r(3) = r(3).field(181) // QuestManager.EntitiesWithGUIQuestThread
																																													-- r(2) = r(3)[r(1)] // QuestManager.EntitiesWithGUIQuestThread[registerVal1]
																																												end
																																												if QuestManager.EntitiesWithGUIQuestThread[registerVal1] == nil then
																																													-- r(3) = g[3] // QuestManager
																																													-- r(3) = r(3).field(182) // QuestManager.EntitiesWithWorldMapQuestThread
																																													-- r(2) = r(3)[r(1)] // QuestManager.EntitiesWithWorldMapQuestThread[registerVal1]
																																												end
																																												-- skip the next [4] opcodes // advance 4 lines
																																												-- r(3) = r(2).field(183) // QuestManager.EntitiesWithWorldMapQuestThread[registerVal1]._Name
																																												if QuestManager.EntitiesWithWorldMapQuestThread[registerVal1] ~= nil and QuestManager.EntitiesWithWorldMapQuestThread[registerVal1]._Name == "GenericTriggerMarker" then
																																													QuestManager.EntitiesWithWorldMapQuestThread[registerVal1].CurrentState = 0.000000
																																												end
																																											end
																																										end
																																									end
																																								end
																																							end
																																						end
																																					end
																																				end
																																			end
																																		end
																																	end
																																end
																															end
																														end
																													end
																												end
																											end
																										end
																									end
																								end
																							end
																						end
																					end
																				end
																			end
																		end
																	end
																end
															end
														end
													end
												end
											end
										end
									end
								end
							end
						end
					end
				end
			end
		end
	end
	-- return
end

-- r(0) = g[2] // GenericTriggers
	-- OP Count: 0x11
	-- Constant Count: 0x5
	-- Registers Count: 0x8
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function GenericTriggers.TriggerEntity(arg0)
	-- r(2) = g[0] // pairs
	-- r(3) = r(0) // arg0
	local registerVal2, registerVal3, registerVal4 = pairs(arg0)
	for index5,value6 in registerVal2, registerVal3, registerVal4 do
		-- skip the next [1] opcodes // advance 1 lines
		{}[index5] = value6
		-- skip the next [-3] opcodes // advance -3 lines
	end
	-- r(2) = g[1] // setmetatable
	-- r(3) = r(1) // {}
	-- r(4) = g[2] // TriggeredEntity
	setmetatable({}, TriggeredEntity)
	-- r(2) = g[3] // GeneralScriptManager
	-- r(2) = r(2).field(4) // GeneralScriptManager.AddScript
	-- r(3) = r(1) // {}
	GeneralScriptManager.AddScript({})
	-- return
end

-- r(0) = g[0] // QuestManager
-- r(0) = r(0).field(6) // QuestManager.NewEntityThread
-- r(1) = c[17] // "LightableTorch"
QuestManager.NewEntityThread("LightableTorch")
-- r(0) = g[17] // LightableTorch
	-- OP Count: 0x12
	-- Constant Count: 0x8
	-- Registers Count: 0x4
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function LightableTorch.CustomUpdate(arg0)
	-- r(1) = r(0).field(0) // arg0.ParentQuest
	-- r(1) = r(1):c[1] // arg0.ParentQuest:OnFireballHit
	-- r(3) = r(0).field(2) // arg0.Entity
	arg0.ParentQuest:OnFireballHit(arg0.Entity)
	-- r(1) = g[3] // Light
	-- r(1) = r(1).field(4) // Light.SetAsActive
	-- r(2) = r(0).field(2) // arg0.Entity
	-- r(3) = true
	Light.SetAsActive(arg0.Entity, true)
	-- r(1) = g[5] // Targeted
	-- r(1) = r(1).field(6) // Targeted.SetAsTargetable
	-- r(2) = r(0).field(2) // arg0.Entity
	-- r(3) = false
	Targeted.SetAsTargetable(arg0.Entity, false)
	-- r(1) = r(0).field(2) // arg0.Entity
	-- r(1) = r(1):c[7] // arg0.Entity:SetAsLevelSaving
	arg0.Entity:SetAsLevelSaving()
	-- return
end

-- r(0) = g[0] // QuestManager
-- r(0) = r(0).field(6) // QuestManager.NewEntityThread
-- r(1) = c[18] // "LightableBrazier"
QuestManager.NewEntityThread("LightableBrazier")
-- r(0) = g[18] // LightableBrazier
	-- OP Count: 0x18
	-- Constant Count: 0xB
	-- Registers Count: 0x4
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function LightableBrazier.CustomUpdate(arg0)
	-- r(1) = g[0] // cprint
	-- r(2) = c[1] // "Generic Triggers - Lightable brazier - thread running on a brazier"
	cprint("Generic Triggers - Lightable brazier - thread running on a brazier")
	-- r(1) = r(0).field(2) // arg0.ParentQuest
	-- r(1) = r(1):c[3] // arg0.ParentQuest:OnFireballHit
	-- r(3) = r(0).field(4) // arg0.Entity
	arg0.ParentQuest:OnFireballHit(arg0.Entity)
	-- r(1) = g[5] // Light
	-- r(1) = r(1).field(6) // Light.SetAsActive
	-- r(2) = r(0).field(4) // arg0.Entity
	-- r(3) = true
	Light.SetAsActive(arg0.Entity, true)
	-- r(1) = g[7] // Targeted
	-- r(1) = r(1).field(8) // Targeted.SetAsTargetable
	-- r(2) = r(0).field(4) // arg0.Entity
	-- r(3) = false
	Targeted.SetAsTargetable(arg0.Entity, false)
	-- r(1) = r(0).field(4) // arg0.Entity
	-- r(1) = r(1):c[9] // arg0.Entity:SetAsLevelSaving
	arg0.Entity:SetAsLevelSaving()
	-- r(1) = g[0] // cprint
	-- r(2) = c[10] // "Generic Triggers - Lightable brazier - A brazier has been lit"
	cprint("Generic Triggers - Lightable brazier - A brazier has been lit")
	-- return
end

-- r(0) = g[0] // QuestManager
-- r(0) = r(0).field(6) // QuestManager.NewEntityThread
-- r(1) = c[19] // "MagicDoorFireSpell"
QuestManager.NewEntityThread("MagicDoorFireSpell")
-- r(0) = g[19] // MagicDoorFireSpell
	-- OP Count: 0x112
	-- Constant Count: 0x39
	-- Registers Count: 0xE
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function MagicDoorFireSpell.CustomUpdate(arg0)
	-- r(1) = g[0] // cprint
	-- r(2) = c[1] // "Generic Triggers - MagicDoorFireSpell thread running on an entity named: MagicDoor_Fire"
	cprint("Generic Triggers - MagicDoorFireSpell thread running on an entity named: MagicDoor_Fire")
	-- r(2) = nil
	-- r(3) = r(0).field(2) // arg0.DoorOpened
	-- skip the next [233] opcodes // advance 233 lines
	-- r(3) = g[3] // coroutine
	-- r(3) = r(3).field(4) // coroutine.yield
	coroutine.yield()
	-- r(1) = r(3) // {}
	-- r(3) = g[5] // GUI
	-- r(3) = r(3).field(6) // GUI.IsEntityOnScreen
	-- r(4) = r(0).field(7) // arg0.Entity
	local registerVal3 = GUI.IsEntityOnScreen(arg0.Entity)
	-- skip the next [128] opcodes // advance 128 lines
	-- r(3) = g[8] // SpellManager
	-- r(3) = r(3).field(9) // SpellManager.IsCharging
	-- r(4) = g[10] // GetLocalHero
	registerVal3 = SpellManager.IsCharging(GetLocalHero())
	-- skip the next [121] opcodes // advance 121 lines
	-- r(3) = g[8] // SpellManager
	-- r(3) = r(3).field(9) // SpellManager.IsCharging
	-- r(4) = g[10] // GetLocalHero
	registerVal3 = SpellManager.IsCharging(GetLocalHero())
	-- skip the next [114] opcodes // advance 114 lines
	-- r(3) = g[3] // coroutine
	-- r(3) = r(3).field(4) // coroutine.yield
	coroutine.yield()
	-- r(3) = g[8] // SpellManager
	-- r(3) = r(3).field(11) // SpellManager.GetCurrentChargingSlotIdx
	-- r(4) = g[10] // GetLocalHero
	registerVal3 = SpellManager.GetCurrentChargingSlotIdx(GetLocalHero())
	-- skip the next [-17] opcodes // advance -17 lines
	-- r(3) = r(1)[c[12]] // {}[1.000000]
	-- skip the next [-20] opcodes // advance -20 lines
	-- r(3) = g[13] // GraphicAppearance
	-- r(3) = r(3).field(14) // GraphicAppearance.GetDummyObjectPosition
	-- r(4) = r(0).field(7) // arg0.Entity
	-- r(5) = c[15] // "Character.FX.Particle.Effect_1.genericEffect"
	-- r(6) = c[16] // 0.000000
	registerVal3 = GraphicAppearance.GetDummyObjectPosition(arg0.Entity, "Character.FX.Particle.Effect_1.genericEffect", 0.000000)
	-- r(4) = g[17] // Debug
	-- r(4) = r(4).field(18) // Debug.CreateEntityAtPosition
	-- r(5) = c[19] // "fxscr_magic_door_blue_orb_glow"
	-- r(6) = c[20] // ""
	-- r(7) = r(3) // registerVal3
	local registerVal4 = Debug.CreateEntityAtPosition("fxscr_magic_door_blue_orb_glow", "", registerVal3)
	{}[1.000000] = registerVal4
	-- r(4) = g[21] // ObjectAttachment
	-- r(4) = r(4).field(22) // ObjectAttachment.AddEntity
	-- r(5) = r(0).field(7) // arg0.Entity
	-- r(6) = r(1)[c[12]] // {}[1.000000]
	-- r(7) = c[15] // "Character.FX.Particle.Effect_1.genericEffect"
	-- r(8) = c[16] // 0.000000
	ObjectAttachment.AddEntity(arg0.Entity, {}[1.000000], "Character.FX.Particle.Effect_1.genericEffect", 0.000000)
	-- r(4) = g[13] // GraphicAppearance
	-- r(4) = r(4).field(14) // GraphicAppearance.GetDummyObjectPosition
	-- r(5) = r(0).field(7) // arg0.Entity
	-- r(6) = c[23] // "Character.FX.Particle.Effect_2.genericEffect"
	-- r(7) = c[16] // 0.000000
	registerVal4 = GraphicAppearance.GetDummyObjectPosition(arg0.Entity, "Character.FX.Particle.Effect_2.genericEffect", 0.000000)
	-- r(5) = g[17] // Debug
	-- r(5) = r(5).field(18) // Debug.CreateEntityAtPosition
	-- r(6) = c[19] // "fxscr_magic_door_blue_orb_glow"
	-- r(7) = c[20] // ""
	-- r(8) = r(4) // registerVal4
	local registerVal5 = Debug.CreateEntityAtPosition("fxscr_magic_door_blue_orb_glow", "", registerVal4)
	{}[2.000000] = registerVal5
	-- r(5) = g[21] // ObjectAttachment
	-- r(5) = r(5).field(22) // ObjectAttachment.AddEntity
	-- r(6) = r(0).field(7) // arg0.Entity
	-- r(7) = r(1)[c[24]] // {}[2.000000]
	-- r(8) = c[23] // "Character.FX.Particle.Effect_2.genericEffect"
	-- r(9) = c[16] // 0.000000
	ObjectAttachment.AddEntity(arg0.Entity, {}[2.000000], "Character.FX.Particle.Effect_2.genericEffect", 0.000000)
	-- r(5) = g[13] // GraphicAppearance
	-- r(5) = r(5).field(14) // GraphicAppearance.GetDummyObjectPosition
	-- r(6) = r(0).field(7) // arg0.Entity
	-- r(7) = c[25] // "Character.FX.Particle.Effect_3.genericEffect"
	-- r(8) = c[16] // 0.000000
	registerVal5 = GraphicAppearance.GetDummyObjectPosition(arg0.Entity, "Character.FX.Particle.Effect_3.genericEffect", 0.000000)
	-- r(6) = g[17] // Debug
	-- r(6) = r(6).field(18) // Debug.CreateEntityAtPosition
	-- r(7) = c[19] // "fxscr_magic_door_blue_orb_glow"
	-- r(8) = c[20] // ""
	-- r(9) = r(5) // registerVal5
	local registerVal6 = Debug.CreateEntityAtPosition("fxscr_magic_door_blue_orb_glow", "", registerVal5)
	{}[3.000000] = registerVal6
	-- r(6) = g[21] // ObjectAttachment
	-- r(6) = r(6).field(22) // ObjectAttachment.AddEntity
	-- r(7) = r(0).field(7) // arg0.Entity
	-- r(8) = r(1)[c[26]] // {}[3.000000]
	-- r(9) = c[25] // "Character.FX.Particle.Effect_3.genericEffect"
	-- r(10) = c[16] // 0.000000
	ObjectAttachment.AddEntity(arg0.Entity, {}[3.000000], "Character.FX.Particle.Effect_3.genericEffect", 0.000000)
	-- r(6) = g[13] // GraphicAppearance
	-- r(6) = r(6).field(14) // GraphicAppearance.GetDummyObjectPosition
	-- r(7) = r(0).field(7) // arg0.Entity
	-- r(8) = c[27] // "Character.FX.Particle.Effect_4.genericEffect"
	-- r(9) = c[16] // 0.000000
	registerVal6 = GraphicAppearance.GetDummyObjectPosition(arg0.Entity, "Character.FX.Particle.Effect_4.genericEffect", 0.000000)
	-- r(7) = g[17] // Debug
	-- r(7) = r(7).field(18) // Debug.CreateEntityAtPosition
	-- r(8) = c[19] // "fxscr_magic_door_blue_orb_glow"
	-- r(9) = c[20] // ""
	-- r(10) = r(6) // registerVal6
	local registerVal7 = Debug.CreateEntityAtPosition("fxscr_magic_door_blue_orb_glow", "", registerVal6)
	{}[4.000000] = registerVal7
	-- r(7) = g[21] // ObjectAttachment
	-- r(7) = r(7).field(22) // ObjectAttachment.AddEntity
	-- r(8) = r(0).field(7) // arg0.Entity
	-- r(9) = r(1)[c[28]] // {}[4.000000]
	-- r(10) = c[27] // "Character.FX.Particle.Effect_4.genericEffect"
	-- r(11) = c[16] // 0.000000
	ObjectAttachment.AddEntity(arg0.Entity, {}[4.000000], "Character.FX.Particle.Effect_4.genericEffect", 0.000000)
	-- r(7) = g[13] // GraphicAppearance
	-- r(7) = r(7).field(14) // GraphicAppearance.GetDummyObjectPosition
	-- r(8) = r(0).field(7) // arg0.Entity
	-- r(9) = c[29] // "Character.FX.Particle.Effect_5.genericEffect"
	-- r(10) = c[16] // 0.000000
	registerVal7 = GraphicAppearance.GetDummyObjectPosition(arg0.Entity, "Character.FX.Particle.Effect_5.genericEffect", 0.000000)
	-- r(8) = g[17] // Debug
	-- r(8) = r(8).field(18) // Debug.CreateEntityAtPosition
	-- r(9) = c[19] // "fxscr_magic_door_blue_orb_glow"
	-- r(10) = c[20] // ""
	-- r(11) = r(7) // registerVal7
	local registerVal8 = Debug.CreateEntityAtPosition("fxscr_magic_door_blue_orb_glow", "", registerVal7)
	{}[5.000000] = registerVal8
	-- r(8) = g[21] // ObjectAttachment
	-- r(8) = r(8).field(22) // ObjectAttachment.AddEntity
	-- r(9) = r(0).field(7) // arg0.Entity
	-- r(10) = r(1)[c[30]] // {}[5.000000]
	-- r(11) = c[29] // "Character.FX.Particle.Effect_5.genericEffect"
	-- r(12) = c[16] // 0.000000
	ObjectAttachment.AddEntity(arg0.Entity, {}[5.000000], "Character.FX.Particle.Effect_5.genericEffect", 0.000000)
	-- skip the next [-121] opcodes // advance -121 lines
	-- r(3) = g[31] // MessageEvents
	-- r(3) = r(3).field(32) // MessageEvents.IsMessageSentTo
	-- r(4) = g[33] // EMessageEventType
	-- r(4) = r(4).field(34) // EMessageEventType.MESSAGE_EVENT_HIT_BY_SPELL_LEVEL
	-- r(5) = r(0).field(7) // arg0.Entity
	-- r(6) = r(0).field(35) // arg0.LastMessageID
	registerVal3, registerVal4 = MessageEvents.IsMessageSentTo(EMessageEventType.MESSAGE_EVENT_HIT_BY_SPELL_LEVEL, arg0.Entity, arg0.LastMessageID)
	if registerVal3 then
		-- r(5) = r(4):c[36] // registerVal4:GetID
		registerVal5 = registerVal4:GetID()
		arg0.LastMessageID = registerVal5
	end
	-- r(5) = g[37] // Targeting
	-- r(5) = r(5).field(38) // Targeting.GetTarget
	-- r(6) = g[10] // GetLocalHero
	registerVal5 = Targeting.GetTarget(GetLocalHero())
	-- r(6) = r(0).field(7) // arg0.Entity
	-- skip the next [62] opcodes // advance 62 lines
	-- r(5) = r(1)[c[12]] // {}[1.000000]
	-- skip the next [59] opcodes // advance 59 lines
	-- r(5) = g[39] // QuestManager
	-- r(5) = r(5).field(40) // QuestManager.NewTimer
	-- r(6) = c[24] // 2.000000
	registerVal5 = QuestManager.NewTimer(2.000000)
	-- skip the next [53] opcodes // advance 53 lines
	-- r(6) = r(5):c[41] // registerVal5:GetTime
	registerVal6 = registerVal5:GetTime()
	-- skip the next [49] opcodes // advance 49 lines
	-- r(6) = g[3] // coroutine
	-- r(6) = r(6).field(4) // coroutine.yield
	coroutine.yield()
	-- r(6) = g[31] // MessageEvents
	-- r(6) = r(6).field(32) // MessageEvents.IsMessageSentTo
	-- r(7) = g[33] // EMessageEventType
	-- r(7) = r(7).field(34) // EMessageEventType.MESSAGE_EVENT_HIT_BY_SPELL_LEVEL
	-- r(8) = r(0).field(7) // arg0.Entity
	-- r(9) = r(0).field(35) // arg0.LastMessageID
	registerVal6, registerVal7 = MessageEvents.IsMessageSentTo(EMessageEventType.MESSAGE_EVENT_HIT_BY_SPELL_LEVEL, arg0.Entity, arg0.LastMessageID)
	-- skip the next [-18] opcodes // advance -18 lines
	-- r(8) = r(7):c[42] // registerVal7:GetEntitySentBy
	registerVal8 = registerVal7:GetEntitySentBy()
	-- r(9) = g[10] // GetLocalHero
	local registerVal9 = GetLocalHero()
	-- skip the next [-24] opcodes // advance -24 lines
	-- r(8) = r(7):c[36] // registerVal7:GetID
	registerVal8 = registerVal7:GetID()
	arg0.LastMessageID = registerVal8
	-- r(8) = g[13] // GraphicAppearance
	-- r(8) = r(8).field(14) // GraphicAppearance.GetDummyObjectPosition
	-- r(9) = r(0).field(7) // arg0.Entity
	-- r(10) = c[43] // "Prop.Focal.RangedWeaponTarget"
	-- r(11) = c[16] // 0.000000
	registerVal8 = GraphicAppearance.GetDummyObjectPosition(arg0.Entity, "Prop.Focal.RangedWeaponTarget", 0.000000)
	-- r(9) = g[17] // Debug
	-- r(9) = r(9).field(18) // Debug.CreateEntityAtPosition
	-- r(10) = c[44] // "fxscr_magic_door_gold_orb_glow"
	-- r(11) = c[20] // ""
	-- r(12) = r(8) // registerVal8
	registerVal9 = Debug.CreateEntityAtPosition("fxscr_magic_door_gold_orb_glow", "", registerVal8)
	-- r(2) = r(9) // registerVal9
	-- r(9) = g[21] // ObjectAttachment
	-- r(9) = r(9).field(22) // ObjectAttachment.AddEntity
	-- r(10) = r(0).field(7) // arg0.Entity
	-- r(11) = r(2) // registerVal9
	-- r(12) = c[43] // "Prop.Focal.RangedWeaponTarget"
	-- r(13) = c[16] // 0.000000
	ObjectAttachment.AddEntity(arg0.Entity, registerVal9, "Prop.Focal.RangedWeaponTarget", 0.000000)
	-- r(9) = g[45] // ParticleEmitter
	-- r(9) = r(9).field(46) // ParticleEmitter.KillParticleWithFadeOut
	-- r(10) = r(2) // registerVal9
	-- r(11) = c[24] // 2.000000
	ParticleEmitter.KillParticleWithFadeOut(registerVal9, 2.000000)
	arg0.DoorOpened = true
	-- skip the next [1] opcodes // advance 1 lines
	-- skip the next [-55] opcodes // advance -55 lines
	-- r(5) = c[12] // 1.000000
	-- r(7) = c[12] // 1.000000
	for index5=1.000000, #registerVal6, 1.000000 do
		-- r(9) = g[45] // ParticleEmitter
		-- r(9) = r(9).field(46) // ParticleEmitter.KillParticleWithFadeOut
		-- r(10) = r(1)[r(8)] // {}[index5]
		-- r(11) = c[24] // 2.000000
		ParticleEmitter.KillParticleWithFadeOut({}[index5], 2.000000)
	end
	-- r(1) = nil
	-- skip the next [-236] opcodes // advance -236 lines
	-- r(3) = g[48] // Door
	-- r(3) = r(3).field(49) // Door.IsAvailable
	-- r(4) = r(0).field(7) // arg0.Entity
	registerVal3 = Door.IsAvailable(arg0.Entity)
	if registerVal3 then
		-- r(3) = g[48] // Door
		-- r(3) = r(3).field(50) // Door.SetLocked
		-- r(4) = r(0).field(7) // arg0.Entity
		-- r(5) = false
		Door.SetLocked(arg0.Entity, false)
		-- r(3) = g[48] // Door
		-- r(3) = r(3).field(51) // Door.SetOpen
		-- r(4) = r(0).field(7) // arg0.Entity
		-- r(5) = true
		-- r(6) = true
		Door.SetOpen(arg0.Entity, true, true)
		-- skip the next [3] opcodes // advance 3 lines
	else
		-- r(3) = g[0] // cprint
		-- r(4) = c[52] // "Generic Triggers - MagicDoorFireSpell - ERROR ERROR - Door is NOT available...??"
		cprint("Generic Triggers - MagicDoorFireSpell - ERROR ERROR - Door is NOT available...??")
	end
	-- r(3) = g[53] // Targeted
	-- r(3) = r(3).field(54) // Targeted.SetAsTargetable
	-- r(4) = r(0).field(7) // arg0.Entity
	-- r(5) = false
	Targeted.SetAsTargetable(arg0.Entity, false)
	-- r(3) = r(0).field(7) // arg0.Entity
	-- r(3) = r(3):c[55] // arg0.Entity:SetAsLevelSaving
	arg0.Entity:SetAsLevelSaving()
	-- r(3) = g[0] // cprint
	-- r(4) = c[56] // "Generic Triggers - MagicDoorFireSpell - door should be opened"
	cprint("Generic Triggers - MagicDoorFireSpell - door should be opened")
	-- return
end

-- return
