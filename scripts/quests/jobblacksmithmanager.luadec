-- Decompiled with CoDLUIDecompiler by JariK

-- OP Count: 0x6E
-- Constant Count: 0x27
-- Registers Count: 0x3
-- UpValue Count: 0x0
-- SubFuncs Count: 0x1F
-- r(0) = g[0] // QuestManager
-- r(0) = r(0).field(1) // QuestManager.NewJobManagerThread
-- r(1) = c[2] // "JobBlacksmithManager"
QuestManager.NewJobManagerThread("JobBlacksmithManager")
-- r(0) = g[2] // JobBlacksmithManager
	-- OP Count: 0x4E
	-- Constant Count: 0x17
	-- Registers Count: 0x3
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function JobBlacksmithManager.Init(arg0)
	arg0.Type = "STATIC"
	arg0.Duration = 20.000000
	arg0.JobInstanceName = "JobBlacksmithInstance"
	arg0.JobData = {}
	-- r(1) = g[7] // IsDemoModeActive
	-- r(2) = g[8] // EDemoMode
	-- r(2) = r(2).field(9) // EDemoMode.DEMO_2010_E3_BRIGHTWALL
	local registerVal1 = IsDemoModeActive(EDemoMode.DEMO_2010_E3_BRIGHTWALL)
	if not registerVal1 then
		-- r(1) = r(0).field(6) // arg0.JobData
		arg0.JobData[1.000000] = {}
		-- r(1) = r(0).field(6) // arg0.JobData
		-- r(1) = r(1)[c[10]] // arg0.JobData[1.000000]
		arg0.JobData[1.000000].Layer = "BS01_ActiveLayer"
		-- r(1) = r(0).field(6) // arg0.JobData
		-- r(1) = r(1)[c[10]] // arg0.JobData[1.000000]
		-- r(2) = g[14] // Chapters
		-- r(2) = r(2).field(15) // Chapters.BrightwallHeroTest
		arg0.JobData[1.000000].AvailableFromChapter = Chapters.BrightwallHeroTest
		-- r(1) = r(0).field(6) // arg0.JobData
		arg0.JobData[2.000000] = {}
		-- r(1) = r(0).field(6) // arg0.JobData
		-- r(1) = r(1)[c[16]] // arg0.JobData[2.000000]
		arg0.JobData[2.000000].Layer = "BS02_ActiveLayer"
		-- r(1) = r(0).field(6) // arg0.JobData
		-- r(1) = r(1)[c[16]] // arg0.JobData[2.000000]
		-- r(2) = g[14] // Chapters
		-- r(2) = r(2).field(15) // Chapters.BrightwallHeroTest
		arg0.JobData[2.000000].AvailableFromChapter = Chapters.BrightwallHeroTest
		-- r(1) = r(0).field(6) // arg0.JobData
		arg0.JobData[3.000000] = {}
		-- r(1) = r(0).field(6) // arg0.JobData
		-- r(1) = r(1)[c[18]] // arg0.JobData[3.000000]
		arg0.JobData[3.000000].Layer = "BS03_ActiveLayer"
		-- r(1) = r(0).field(6) // arg0.JobData
		-- r(1) = r(1)[c[18]] // arg0.JobData[3.000000]
		-- r(2) = g[14] // Chapters
		-- r(2) = r(2).field(15) // Chapters.BrightwallHeroTest
		arg0.JobData[3.000000].AvailableFromChapter = Chapters.BrightwallHeroTest
		-- r(1) = r(0).field(6) // arg0.JobData
		arg0.JobData[4.000000] = {}
		-- r(1) = r(0).field(6) // arg0.JobData
		-- r(1) = r(1)[c[20]] // arg0.JobData[4.000000]
		arg0.JobData[4.000000].Layer = "BS01_ActiveLayer"
		-- r(1) = r(0).field(6) // arg0.JobData
		-- r(1) = r(1)[c[20]] // arg0.JobData[4.000000]
		-- r(2) = g[14] // Chapters
		-- r(2) = r(2).field(15) // Chapters.BrightwallHeroTest
		arg0.JobData[4.000000].AvailableFromChapter = Chapters.BrightwallHeroTest
		-- r(1) = r(0).field(6) // arg0.JobData
		arg0.JobData[5.000000] = {}
		-- r(1) = r(0).field(6) // arg0.JobData
		-- r(1) = r(1)[c[21]] // arg0.JobData[5.000000]
		arg0.JobData[5.000000].Layer = "BS02_ActiveLayer"
		-- r(1) = r(0).field(6) // arg0.JobData
		-- r(1) = r(1)[c[21]] // arg0.JobData[5.000000]
		-- r(2) = g[14] // Chapters
		-- r(2) = r(2).field(15) // Chapters.BrightwallHeroTest
		arg0.JobData[5.000000].AvailableFromChapter = Chapters.BrightwallHeroTest
		-- r(1) = r(0).field(6) // arg0.JobData
		arg0.JobData[6.000000] = {}
		-- r(1) = r(0).field(6) // arg0.JobData
		-- r(1) = r(1)[c[22]] // arg0.JobData[6.000000]
		arg0.JobData[6.000000].Layer = "BS03_ActiveLayer"
		-- r(1) = r(0).field(6) // arg0.JobData
		-- r(1) = r(1)[c[22]] // arg0.JobData[6.000000]
		-- r(2) = g[14] // Chapters
		-- r(2) = r(2).field(15) // Chapters.BrightwallHeroTest
		arg0.JobData[6.000000].AvailableFromChapter = Chapters.BrightwallHeroTest
	end
	-- return
end

-- r(0) = g[2] // JobBlacksmithManager
	-- OP Count: 0xB
	-- Constant Count: 0x3
	-- Registers Count: 0x5
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function JobBlacksmithManager.Update(arg0)
	-- r(1) = r(0):c[0] // arg0:WaitUntilNextCheck
	arg0:WaitUntilNextCheck()
	-- r(1) = r(0):c[1] // arg0:GetRunnableJobKey
	local registerVal1 = arg0:GetRunnableJobKey()
	-- skip the next [-6] opcodes // advance -6 lines
	-- r(2) = r(0):c[2] // arg0:StartJobInstance
	-- r(4) = r(1) // registerVal1
	arg0:StartJobInstance(registerVal1)
	-- skip the next [-10] opcodes // advance -10 lines
	-- return
end

-- r(0) = g[5] // JobCoordinator
-- r(0) = r(0).field(6) // JobCoordinator.JobManagerThreads
-- r(1) = g[2] // JobBlacksmithManager
-- r(1) = r(1):c[7] // JobBlacksmithManager:new
local registerVal1 = JobBlacksmithManager:new()
JobCoordinator.JobManagerThreads.JobBlacksmithManager = registerVal1
-- r(0) = g[0] // QuestManager
-- r(0) = r(0).field(8) // QuestManager.AddQuestThread
-- r(1) = g[5] // JobCoordinator
-- r(1) = r(1).field(6) // JobCoordinator.JobManagerThreads
-- r(1) = r(1).field(2) // JobCoordinator.JobManagerThreads.JobBlacksmithManager
QuestManager.AddQuestThread(JobCoordinator.JobManagerThreads.JobBlacksmithManager)
-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x55
	-- Constant Count: 0x3C
	-- Registers Count: 0x7
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.SetupBlacksmith(arg0)
	-- r(1) = c[0] // "QJ002_Anvil"
	-- r(2) = c[1] // "QJ002_DogHammeringMarker"
	-- r(3) = g[3] // ScriptFunction
	-- r(3) = r(3).field(4) // ScriptFunction.GetEntityWithName
	-- r(4) = r(1) // "QJ002_Anvil"
	-- r(5) = r(0).field(5) // arg0.JobData
	-- r(5) = r(5).field(6) // arg0.JobData.Location
	-- r(4) = r(4)..r(5) // ("QJ002_Anvil" .. arg0.JobData.Location)
	-- r(5) = c[7] // "object"
	local registerVal3 = ScriptFunction.GetEntityWithName(("QJ002_Anvil" .. arg0.JobData.Location), "object")
	arg0.Anvil = registerVal3
	-- r(3) = g[3] // ScriptFunction
	-- r(3) = r(3).field(4) // ScriptFunction.GetEntityWithName
	-- r(4) = c[9] // "QJ002_BlacksmithVoiceMarker"
	-- r(5) = r(0).field(5) // arg0.JobData
	-- r(5) = r(5).field(6) // arg0.JobData.Location
	-- r(4) = r(4)..r(5) // ("QJ002_BlacksmithVoiceMarker" .. arg0.JobData.Location)
	-- r(5) = c[10] // "marker"
	registerVal3 = ScriptFunction.GetEntityWithName(("QJ002_BlacksmithVoiceMarker" .. arg0.JobData.Location), "marker")
	arg0.BlacksmithVoiceMarker = registerVal3
	-- r(3) = r(0):c[11] // arg0:SetupCommon
	local registerVal5 = {}
	registerVal5.JobCode = "QJ002"
	registerVal5.AnimInto = "BlacksmithInto"
	registerVal5.AnimIdle = "BlacksmithLoop"
	registerVal5.AnimOutOf = "BlacksmithOutOf"
	registerVal5.AnimHitFail = "BlacksmithOutOfFailure"
	registerVal5.AnimHitSuccess = "BlacksmithOutOfSuccess"
	registerVal5.AnimHitNoLook = "BlacksmithOutOfNoLook"
	arg0:SetupCommon(registerVal5)
	-- r(3) = g[26] // Sound
	-- r(3) = r(3).field(27) // Sound.SetSoundVariableValue
	-- r(4) = c[28] // "SV_BLACKSMITH_ANVIL_GAIN"
	-- r(5) = c[29] // 0.000000
	Sound.SetSoundVariableValue("SV_BLACKSMITH_ANVIL_GAIN", 0.000000)
	-- r(3) = g[31] // SoundTools
	-- r(3) = r(3).field(32) // SoundTools.PlayMusic
	-- r(4) = c[33] // "MUSIC_QJ001_BLACKSMITH_JOB"
	registerVal3 = SoundTools.PlayMusic("MUSIC_QJ001_BLACKSMITH_JOB")
	arg0.BlacksmithMusic = registerVal3
	arg0.EventsUntilTalk = 1.000000
	-- r(3) = g[37] // QuestManager
	-- r(3) = r(3).field(38) // QuestManager.NewTimer
	-- r(4) = c[29] // 0.000000
	registerVal3 = QuestManager.NewTimer(0.000000)
	arg0.HitWindowTimer = registerVal3
	-- r(3) = g[39] // Gameflow
	Gameflow.HitWindow = 0.500000
	arg0.HammerBlows = 0.000000
	-- r(3) = g[39] // Gameflow
	Gameflow.HitAnim = "BlacksmithHitFast"
	arg0.InIdleAnim = false
	-- r(3) = g[3] // ScriptFunction
	-- r(3) = r(3).field(4) // ScriptFunction.GetEntityWithName
	-- r(4) = c[48] // "BlacksmithIngot"
	-- r(5) = r(0).field(5) // arg0.JobData
	-- r(5) = r(5).field(6) // arg0.JobData.Location
	-- r(4) = r(4)..r(5) // ("BlacksmithIngot" .. arg0.JobData.Location)
	-- r(5) = c[7] // "object"
	registerVal3 = ScriptFunction.GetEntityWithName(("BlacksmithIngot" .. arg0.JobData.Location), "object")
	arg0.Ingot = registerVal3
	-- r(3) = g[49] // GraphicAppearance
	-- r(3) = r(3).field(50) // GraphicAppearance.HasDummyObject
	-- r(4) = r(0).field(2) // arg0.Anvil
	-- r(5) = g[51] // DummyObjects
	-- r(5) = r(5).field(52) // DummyObjects.PROP_POINT
	registerVal3 = GraphicAppearance.HasDummyObject(arg0.Anvil, DummyObjects.PROP_POINT)
	if registerVal3 then
		-- r(3) = g[49] // GraphicAppearance
		-- r(3) = r(3).field(54) // GraphicAppearance.GetDummyObjectPosition
		-- r(4) = r(0).field(2) // arg0.Anvil
		-- r(5) = g[51] // DummyObjects
		-- r(5) = r(5).field(52) // DummyObjects.PROP_POINT
		-- r(6) = c[29] // 0.000000
		registerVal3 = GraphicAppearance.GetDummyObjectPosition(arg0.Anvil, DummyObjects.PROP_POINT, 0.000000)
		arg0.AnvilFXPoint = registerVal3
	end
	-- r(3) = r(0):c[55] // arg0:SetUpJobStartAnimationBlacksmith
	arg0:SetUpJobStartAnimationBlacksmith()
	-- r(3) = g[56] // Stats
	-- r(3) = r(3).field(57) // Stats.SetRichPresenceText
	-- r(4) = r(0).field(58) // arg0.EntityUsingItem
	-- r(5) = c[59] // "RichPresenceBlacksmith"
	Stats.SetRichPresenceText(arg0.EntityUsingItem, "RichPresenceBlacksmith")
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x3
	-- Constant Count: 0x1
	-- Registers Count: 0x3
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.SetUpJobStartAnimationBlacksmith(arg0)
	-- r(1) = r(0):c[0] // arg0:IntoAndIdleAnimBlacksmith
	arg0:IntoAndIdleAnimBlacksmith()
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x6
	-- Constant Count: 0x4
	-- Registers Count: 0x3
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.AddHelperGuiBlacksmith(arg0)
	-- r(1) = g[0] // TutorialManager
	-- r(1) = r(1).field(1) // TutorialManager.DisplayTutorial
	-- r(2) = g[2] // ETutorialType
	-- r(2) = r(2).field(3) // ETutorialType.TUTORIAL_JOB_INSTRUCTIONS_BLACKSMITH
	TutorialManager.DisplayTutorial(ETutorialType.TUTORIAL_JOB_INSTRUCTIONS_BLACKSMITH)
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0xE
	-- Constant Count: 0x5
	-- Registers Count: 0x5
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.HideHelperGuiBlacksmith(arg0, arg1)
	-- r(2) = g[0] // TutorialManager
	-- r(2) = r(2).field(1) // TutorialManager.IsTutorialBeingDisplayed
	-- r(3) = g[2] // ETutorialType
	-- r(3) = r(3).field(3) // ETutorialType.TUTORIAL_JOB_INSTRUCTIONS_BLACKSMITH
	local registerVal2 = TutorialManager.IsTutorialBeingDisplayed(ETutorialType.TUTORIAL_JOB_INSTRUCTIONS_BLACKSMITH)
	if registerVal2 then
		-- r(2) = g[0] // TutorialManager
		-- r(2) = r(2).field(4) // TutorialManager.StopTutorial
		-- r(3) = g[2] // ETutorialType
		-- r(3) = r(3).field(3) // ETutorialType.TUTORIAL_JOB_INSTRUCTIONS_BLACKSMITH
		-- r(4) = r(1) // arg1
		TutorialManager.StopTutorial(ETutorialType.TUTORIAL_JOB_INSTRUCTIONS_BLACKSMITH, arg1)
	end
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x81
	-- Constant Count: 0x2E
	-- Registers Count: 0x8
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.SetUpDummiesAndTeleportBlacksmith(arg0)
	-- r(1) = g[0] // GraphicAppearance
	-- r(1) = r(1).field(1) // GraphicAppearance.HasDummyObject
	-- r(2) = r(0).field(2) // arg0.Anvil
	-- r(3) = g[3] // DummyObjects
	-- r(3) = r(3).field(4) // DummyObjects.PROP_POINT
	local registerVal1 = GraphicAppearance.HasDummyObject(arg0.Anvil, DummyObjects.PROP_POINT)
	if registerVal1 then
		-- r(1) = g[0] // GraphicAppearance
		-- r(1) = r(1).field(6) // GraphicAppearance.GetDummyObjectPosition
		-- r(2) = r(0).field(2) // arg0.Anvil
		-- r(3) = g[3] // DummyObjects
		-- r(3) = r(3).field(4) // DummyObjects.PROP_POINT
		-- r(4) = c[7] // 0.000000
		registerVal1 = GraphicAppearance.GetDummyObjectPosition(arg0.Anvil, DummyObjects.PROP_POINT, 0.000000)
		arg0.AnvilFXPoint = registerVal1
	end
	-- r(1) = g[0] // GraphicAppearance
	-- r(1) = r(1).field(1) // GraphicAppearance.HasDummyObject
	-- r(2) = r(0).field(2) // arg0.Anvil
	-- r(3) = g[3] // DummyObjects
	-- r(3) = r(3).field(8) // DummyObjects.ACTION_GENERIC
	registerVal1 = GraphicAppearance.HasDummyObject(arg0.Anvil, DummyObjects.ACTION_GENERIC)
	if registerVal1 then
		-- r(1) = g[0] // GraphicAppearance
		-- r(1) = r(1).field(6) // GraphicAppearance.GetDummyObjectPosition
		-- r(2) = r(0).field(2) // arg0.Anvil
		-- r(3) = g[3] // DummyObjects
		-- r(3) = r(3).field(8) // DummyObjects.ACTION_GENERIC
		-- r(4) = c[7] // 0.000000
		registerVal1 = GraphicAppearance.GetDummyObjectPosition(arg0.Anvil, DummyObjects.ACTION_GENERIC, 0.000000)
		-- r(2) = g[0] // GraphicAppearance
		-- r(2) = r(2).field(9) // GraphicAppearance.GetDummyObjectFacingDirection
		-- r(3) = r(0).field(2) // arg0.Anvil
		-- r(4) = g[3] // DummyObjects
		-- r(4) = r(4).field(8) // DummyObjects.ACTION_GENERIC
		-- r(5) = c[7] // 0.000000
		local registerVal2 = GraphicAppearance.GetDummyObjectFacingDirection(arg0.Anvil, DummyObjects.ACTION_GENERIC, 0.000000)
		-- r(3) = g[10] // Physics
		-- r(3) = r(3).field(11) // Physics.TeleportToPosition
		-- r(4) = r(0).field(12) // arg0.EntityUsingItem
		-- r(5) = r(1) // registerVal1
		Physics.TeleportToPosition(arg0.EntityUsingItem, registerVal1)
		-- r(3) = g[13] // ScriptFunction
		-- r(3) = r(3).field(14) // ScriptFunction.SetFacingVector
		-- r(4) = r(0).field(12) // arg0.EntityUsingItem
		-- r(5) = r(2) // registerVal2
		ScriptFunction.SetFacingVector(arg0.EntityUsingItem, registerVal2)
	end
	-- r(1) = g[15] // Debug
	-- r(1) = r(1).field(16) // Debug.CreateEntityAt
	-- r(2) = c[17] // "ObjectSmithHammer"
	-- r(3) = c[18] // "BlacksmithHammer"
	-- r(4) = r(0).field(19) // arg0.JobData
	-- r(4) = r(4).field(20) // arg0.JobData.Location
	-- r(3) = r(3)..r(4) // ("BlacksmithHammer" .. arg0.JobData.Location)
	-- r(4) = r(0).field(12) // arg0.EntityUsingItem
	-- r(4) = r(4):c[21] // arg0.EntityUsingItem:GetPosition
	registerVal1 = Debug.CreateEntityAt("ObjectSmithHammer", ("BlacksmithHammer" .. arg0.JobData.Location), arg0.EntityUsingItem:GetPosition())
	-- r(2) = g[22] // Carrying
	-- r(2) = r(2).field(23) // Carrying.PutEntityInSlot
	-- r(3) = r(0).field(12) // arg0.EntityUsingItem
	-- r(4) = g[3] // DummyObjects
	-- r(4) = r(4).field(24) // DummyObjects.HAND_RIGHT
	-- r(5) = r(1) // registerVal1
	Carrying.PutEntityInSlot(arg0.EntityUsingItem, DummyObjects.HAND_RIGHT, registerVal1)
	-- r(2) = g[15] // Debug
	-- r(2) = r(2).field(16) // Debug.CreateEntityAt
	-- r(3) = c[26] // "MetalWork_Minigame_Stage1"
	-- r(4) = c[27] // "BlacksmithIngot"
	-- r(5) = r(0).field(19) // arg0.JobData
	-- r(5) = r(5).field(20) // arg0.JobData.Location
	-- r(4) = r(4)..r(5) // ("BlacksmithIngot" .. arg0.JobData.Location)
	-- r(5) = r(0).field(12) // arg0.EntityUsingItem
	-- r(5) = r(5):c[21] // arg0.EntityUsingItem:GetPosition
	registerVal2 = Debug.CreateEntityAt("MetalWork_Minigame_Stage1", ("BlacksmithIngot" .. arg0.JobData.Location), arg0.EntityUsingItem:GetPosition())
	arg0.Ingot = registerVal2
	-- r(2) = g[28] // ObjectAttachment
	-- r(2) = r(2).field(29) // ObjectAttachment.AddEntity
	-- r(3) = r(0).field(12) // arg0.EntityUsingItem
	-- r(4) = r(0).field(25) // arg0.Ingot
	-- r(5) = g[3] // DummyObjects
	-- r(5) = r(5).field(30) // DummyObjects.HAND_LEFT
	-- r(6) = c[7] // 0.000000
	ObjectAttachment.AddEntity(arg0.EntityUsingItem, arg0.Ingot, DummyObjects.HAND_LEFT, 0.000000)
	-- r(2) = r(0).field(31) // arg0.Dog
	-- r(2) = r(2):c[32] // arg0.Dog:IsAlive
	registerVal2 = arg0.Dog:IsAlive()
	if registerVal2 then
		-- r(2) = g[13] // ScriptFunction
		-- r(2) = r(2).field(33) // ScriptFunction.GetEntityWithName
		-- r(3) = c[34] // "QJ002_DogHammeringMarker"
		-- r(4) = r(0).field(19) // arg0.JobData
		-- r(4) = r(4).field(20) // arg0.JobData.Location
		-- r(3) = r(3)..r(4) // ("QJ002_DogHammeringMarker" .. arg0.JobData.Location)
		-- r(4) = c[35] // "marker"
		registerVal2 = ScriptFunction.GetEntityWithName(("QJ002_DogHammeringMarker" .. arg0.JobData.Location), "marker")
		-- r(3) = g[10] // Physics
		-- r(3) = r(3).field(11) // Physics.TeleportToPosition
		-- r(4) = r(0).field(31) // arg0.Dog
		-- r(5) = r(2):c[21] // registerVal2:GetPosition
		Physics.TeleportToPosition(arg0.Dog, registerVal2:GetPosition())
		-- r(3) = g[13] // ScriptFunction
		-- r(3) = r(3).field(14) // ScriptFunction.SetFacingVector
		-- r(4) = r(0).field(31) // arg0.Dog
		-- r(5) = g[10] // Physics
		-- r(5) = r(5).field(36) // Physics.GetFacingVector
		-- r(6) = r(2) // registerVal2
		ScriptFunction.SetFacingVector(arg0.Dog, Physics.GetFacingVector(registerVal2))
		-- r(3) = g[13] // ScriptFunction
		-- r(3) = r(3).field(37) // ScriptFunction.DogLieAtPosition
		-- r(4) = r(0).field(31) // arg0.Dog
		-- r(5) = r(2):c[21] // registerVal2:GetPosition
		local registerVal5 = registerVal2:GetPosition()
		local registerVal6 = {}
		registerVal6.wait = false
		-- r(7) = g[41] // ENavigationSpeed
		-- r(7) = r(7).field(42) // ENavigationSpeed.NAV_SPEED_RUN
		registerVal6.speed = ENavigationSpeed.NAV_SPEED_RUN
		ScriptFunction.DogLieAtPosition(arg0.Dog, registerVal5, registerVal6)
	end
	-- r(2) = g[43] // Layers
	-- r(2) = r(2).field(44) // Layers.DeactivateLayer
	-- r(3) = c[45] // "QJ002_JobBlacksmith_Hammer"
	Layers.DeactivateLayer("QJ002_JobBlacksmith_Hammer")
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x14
	-- Constant Count: 0x9
	-- Registers Count: 0x4
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.ReactToMessagesBlacksmith(arg0)
	-- r(1) = r(0).field(0) // arg0.MissDetected
	-- skip the next [6] opcodes // advance 6 lines
	-- r(1) = r(0).field(1) // arg0.BlockMissDetected
	-- skip the next [3] opcodes // advance 3 lines
	-- r(1) = r(0).field(2) // arg0.SuccessfulHitDetected
	if not arg0.MissDetected and not arg0 or 0.000000 < arg0.SuccessfulHitDetected then
		-- r(1) = r(0):c[4] // arg0:ReactToMessagesCommon
		arg0:ReactToMessagesCommon()
		-- skip the next [7] opcodes // advance 7 lines
	else
		-- r(1) = r(0).field(5) // arg0.InIdleAnim
		if not arg0.InIdleAnim then
			-- r(1) = r(0):c[6] // arg0:CallJobDependentFunction
			-- r(3) = c[7] // "SetIdleAnim"
			arg0:CallJobDependentFunction("SetIdleAnim")
			arg0.InIdleAnim = true
		end
	end
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x2D
	-- Constant Count: 0x18
	-- Registers Count: 0x6
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.RespondToHitBlacksmith(arg0)
	-- r(1) = r(0):c[0] // arg0:RespondToHitCommon
	arg0:RespondToHitCommon()
	-- r(1) = g[1] // Debug
	-- r(1) = r(1).field(2) // Debug.CreateEntityAtPosition
	-- r(2) = c[3] // "FX_Smith_Hit_Ingot"
	-- r(3) = c[4] // "effect"
	-- r(4) = r(0).field(5) // arg0.AnvilFXPoint
	Debug.CreateEntityAtPosition("FX_Smith_Hit_Ingot", "effect", arg0.AnvilFXPoint)
	-- r(1) = r(0).field(6) // arg0.HammerBlows
	arg0.HammerBlows = (arg0.HammerBlows + 1.000000)
	-- r(1) = r(0).field(6) // arg0.HammerBlows
	-- skip the next [30] opcodes // advance 30 lines
	-- r(1) = g[9] // ObjectAttachment
	-- r(1) = r(1).field(10) // ObjectAttachment.IsEntityAttached
	-- r(2) = r(0).field(11) // arg0.EntityUsingItem
	-- r(3) = r(0).field(12) // arg0.Ingot
	local registerVal1 = ObjectAttachment.IsEntityAttached(arg0.EntityUsingItem, arg0.Ingot)
	if arg0.HammerBlows == 3.000000 and registerVal1 then
		-- r(1) = r(0).field(12) // arg0.Ingot
		-- r(1) = r(1):c[13] // arg0.Ingot:Destroy
		arg0.Ingot:Destroy()
		-- r(1) = g[1] // Debug
		-- r(1) = r(1).field(14) // Debug.CreateEntityAt
		-- r(2) = c[15] // "MetalWork_Minigame_Stage2"
		-- r(3) = c[16] // "BlacksmithIngot"
		-- r(4) = r(0).field(17) // arg0.JobData
		-- r(4) = r(4).field(18) // arg0.JobData.Location
		-- r(3) = r(3)..r(4) // ("BlacksmithIngot" .. arg0.JobData.Location)
		-- r(4) = r(0).field(11) // arg0.EntityUsingItem
		-- r(4) = r(4):c[19] // arg0.EntityUsingItem:GetPosition
		registerVal1 = Debug.CreateEntityAt("MetalWork_Minigame_Stage2", ("BlacksmithIngot" .. arg0.JobData.Location), arg0.EntityUsingItem:GetPosition())
		arg0.Ingot = registerVal1
		-- r(1) = g[9] // ObjectAttachment
		-- r(1) = r(1).field(20) // ObjectAttachment.AddEntity
		-- r(2) = r(0).field(11) // arg0.EntityUsingItem
		-- r(3) = r(0).field(12) // arg0.Ingot
		-- r(4) = g[21] // DummyObjects
		-- r(4) = r(4).field(22) // DummyObjects.HAND_LEFT
		-- r(5) = c[23] // 0.000000
		ObjectAttachment.AddEntity(arg0.EntityUsingItem, arg0.Ingot, DummyObjects.HAND_LEFT, 0.000000)
	end
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x3
	-- Constant Count: 0x1
	-- Registers Count: 0x3
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.PlayAnimHitBlacksmith(arg0)
	-- r(1) = r(0):c[0] // arg0:HitSuccessAndIdleAnimBlacksmith
	arg0:HitSuccessAndIdleAnimBlacksmith()
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x3
	-- Constant Count: 0x1
	-- Registers Count: 0x3
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.RespondToMissBlacksmith(arg0)
	-- r(1) = r(0):c[0] // arg0:RespondToMissCommon
	arg0:RespondToMissCommon()
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x3
	-- Constant Count: 0x1
	-- Registers Count: 0x3
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.PlayAnimMissBlacksmith(arg0)
	-- r(1) = r(0):c[0] // arg0:HitFailAndIdleAnimBlacksmith
	arg0:HitFailAndIdleAnimBlacksmith()
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x3
	-- Constant Count: 0x1
	-- Registers Count: 0x3
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.RespondToBlockMissBlacksmith(arg0)
	-- r(1) = r(0):c[0] // arg0:RespondToBlockMissCommon
	arg0:RespondToBlockMissCommon()
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0xC
	-- Constant Count: 0x6
	-- Registers Count: 0x6
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.JobEndGoodCommentBlacksmith(arg0)
	-- r(1) = c[0] // "TEXT_QUEST_QJ002_GOOD_BLADE"
	-- r(2) = g[1] // IsLevelLoaded
	-- r(3) = c[2] // "Aurora\BloodWeShare"
	local registerVal2 = IsLevelLoaded("Aurora\BloodWeShare")
	if registerVal2 then
		-- r(1) = c[3] // "TEXT_QUEST_QJ002_AURORA_GOOD_BLADE"
	end
	-- r(2) = r(0):c[4] // arg0:JobEndComment
	-- r(4) = r(1) // "TEXT_QUEST_QJ002_AURORA_GOOD_BLADE"
	-- r(5) = c[5] // "TEXT_QUEST_QJ002_NARRATOR_NAME"
	arg0:JobEndComment("TEXT_QUEST_QJ002_AURORA_GOOD_BLADE", "TEXT_QUEST_QJ002_NARRATOR_NAME")
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0xC
	-- Constant Count: 0x6
	-- Registers Count: 0x6
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.JobEndBadCommentBlacksmith(arg0)
	-- r(1) = c[0] // "TEXT_QUEST_QJ002_BAD_BLADE"
	-- r(2) = g[1] // IsLevelLoaded
	-- r(3) = c[2] // "Aurora\BloodWeShare"
	local registerVal2 = IsLevelLoaded("Aurora\BloodWeShare")
	if registerVal2 then
		-- r(1) = c[3] // "TEXT_QUEST_QJ002_AURORA_BAD_BLADE"
	end
	-- r(2) = r(0):c[4] // arg0:JobEndComment
	-- r(4) = r(1) // "TEXT_QUEST_QJ002_AURORA_BAD_BLADE"
	-- r(5) = c[5] // "TEXT_QUEST_QJ002_NARRATOR_NAME"
	arg0:JobEndComment("TEXT_QUEST_QJ002_AURORA_BAD_BLADE", "TEXT_QUEST_QJ002_NARRATOR_NAME")
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x4
	-- Constant Count: 0x2
	-- Registers Count: 0x4
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.ActivateGossipBlacksmith(arg0)
	-- r(1) = r(0):c[0] // arg0:ActivateGossipCommon
	-- r(3) = c[1] // "Blacksmith"
	arg0:ActivateGossipCommon("Blacksmith")
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x10
	-- Constant Count: 0x6
	-- Registers Count: 0x5
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.ReactToRoundEndBlacksmith(arg0)
	-- r(1) = false
	-- r(2) = r(0).field(0) // arg0.CorrectButtonsPressedThisRound
	-- r(3) = r(0).field(1) // arg0.ButtonsPressedThisRound
	if arg0.CorrectButtonsPressedThisRound == arg0.ButtonsPressedThisRound then
		-- r(1) = true
	end
	-- r(2) = r(0):c[2] // arg0:ReactToRoundEndCommon
	-- r(4) = r(1) // true
	arg0:ReactToRoundEndCommon(true)
	-- r(2) = r(0):c[3] // arg0:OutOfAndIdleAnimBlacksmith
	arg0:OutOfAndIdleAnimBlacksmith()
	-- r(2) = r(0):c[4] // arg0:CompleteBladeBlacksmith
	arg0:CompleteBladeBlacksmith()
	-- r(2) = r(0):c[5] // arg0:PickUpIngotBlacksmith
	arg0:PickUpIngotBlacksmith()
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x3
	-- Constant Count: 0x1
	-- Registers Count: 0x3
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.RespondToSuccessBlacksmith(arg0)
	-- r(1) = r(0):c[0] // arg0:RespondToSuccessCommon
	arg0:RespondToSuccessCommon()
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x3
	-- Constant Count: 0x1
	-- Registers Count: 0x3
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.RespondToFailBlacksmith(arg0)
	-- r(1) = r(0):c[0] // arg0:RespondToFailCommon
	arg0:RespondToFailCommon()
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x3
	-- Constant Count: 0x1
	-- Registers Count: 0x3
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.UpdateMoneyBlacksmith(arg0)
	-- r(1) = r(0):c[0] // arg0:UpdateMoneyCommon
	arg0:UpdateMoneyCommon()
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x17
	-- Constant Count: 0x12
	-- Registers Count: 0x5
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.SetIdleAnimBlacksmith(arg0)
	local registerVal1 = {}
	-- r(2) = g[1] // EScriptableAction
	-- r(2) = r(2).field(2) // EScriptableAction.LOOP
	registerVal1.Type = EScriptableAction.LOOP
	registerVal1.OverrideLooking = true
	-- r(2) = g[6] // EActionPriority
	-- r(2) = r(2).field(7) // EActionPriority.PRIORITY_IDLE
	registerVal1.Priority = EActionPriority.PRIORITY_IDLE
	registerVal1.CanBeOverridenBySamePriority = true
	local registerVal2 = {}
	-- r(3) = g[1] // EScriptableAction
	-- r(3) = r(3).field(10) // EScriptableAction.PLAY_ANIMATION
	registerVal2.Type = EScriptableAction.PLAY_ANIMATION
	-- r(3) = r(0).field(12) // arg0.AnimIdle
	registerVal2.Anim = arg0.AnimIdle
	registerVal1.LoopAction = registerVal2
	registerVal1.NumLoops = 0.000000
	-- r(2) = g[15] // Action
	-- r(2) = r(2).field(16) // Action.SetCurrentAction
	-- r(3) = r(0).field(17) // arg0.EntityUsingItem
	-- r(4) = r(1) // registerVal1
	Action.SetCurrentAction(arg0.EntityUsingItem, registerVal1)
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x2A
	-- Constant Count: 0x15
	-- Registers Count: 0x7
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.IntoAndIdleAnimBlacksmith(arg0)
	local registerVal1 = {}
	-- r(2) = g[1] // EScriptableAction
	-- r(2) = r(2).field(2) // EScriptableAction.PLAY_ANIMATION
	registerVal1.Type = EScriptableAction.PLAY_ANIMATION
	-- r(2) = r(0).field(4) // arg0.AnimInto
	registerVal1.Anim = arg0.AnimInto
	-- r(2) = g[6] // EActionPriority
	-- r(2) = r(2).field(7) // EActionPriority.PRIORITY_IDLE
	registerVal1.Priority = EActionPriority.PRIORITY_IDLE
	registerVal1.OverrideLooking = true
	local registerVal2 = {}
	-- r(3) = g[1] // EScriptableAction
	-- r(3) = r(3).field(10) // EScriptableAction.LOOP
	registerVal2.Type = EScriptableAction.LOOP
	registerVal2.OverrideLooking = true
	-- r(3) = g[6] // EActionPriority
	-- r(3) = r(3).field(7) // EActionPriority.PRIORITY_IDLE
	registerVal2.Priority = EActionPriority.PRIORITY_IDLE
	registerVal2.CanBeOverridenBySamePriority = true
	local registerVal3 = {}
	-- r(4) = g[1] // EScriptableAction
	-- r(4) = r(4).field(2) // EScriptableAction.PLAY_ANIMATION
	registerVal3.Type = EScriptableAction.PLAY_ANIMATION
	-- r(4) = r(0).field(13) // arg0.AnimIdle
	registerVal3.Anim = arg0.AnimIdle
	registerVal2.LoopAction = registerVal3
	registerVal2.NumLoops = 0.000000
	registerVal3 = {}
	-- r(4) = g[1] // EScriptableAction
	-- r(4) = r(4).field(16) // EScriptableAction.BATCH
	registerVal3.Type = EScriptableAction.BATCH
	local registerVal4 = {}
	-- r(5) = r(1) // registerVal1
	-- r(6) = r(2) // registerVal2
	registerVal4 = {registerVal1, registerVal2}
	registerVal3.Actions = registerVal4
	-- r(4) = g[18] // Action
	-- r(4) = r(4).field(19) // Action.ReplaceCurrentAction
	-- r(5) = r(0).field(20) // arg0.EntityUsingItem
	-- r(6) = r(3) // registerVal3
	Action.ReplaceCurrentAction(arg0.EntityUsingItem, registerVal3)
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x35
	-- Constant Count: 0x16
	-- Registers Count: 0x9
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.OutOfAndIdleAnimBlacksmith(arg0)
	local registerVal1 = {}
	-- r(2) = g[1] // EScriptableAction
	-- r(2) = r(2).field(2) // EScriptableAction.PLAY_ANIMATION
	registerVal1.Type = EScriptableAction.PLAY_ANIMATION
	-- r(2) = r(0).field(4) // arg0.AnimOutOf
	registerVal1.Anim = arg0.AnimOutOf
	-- r(2) = g[6] // EActionPriority
	-- r(2) = r(2).field(7) // EActionPriority.PRIORITY_IDLE
	registerVal1.Priority = EActionPriority.PRIORITY_IDLE
	registerVal1.OverrideLooking = true
	local registerVal2 = {}
	-- r(3) = g[1] // EScriptableAction
	-- r(3) = r(3).field(2) // EScriptableAction.PLAY_ANIMATION
	registerVal2.Type = EScriptableAction.PLAY_ANIMATION
	-- r(3) = r(0).field(10) // arg0.AnimInto
	registerVal2.Anim = arg0.AnimInto
	-- r(3) = g[6] // EActionPriority
	-- r(3) = r(3).field(7) // EActionPriority.PRIORITY_IDLE
	registerVal2.Priority = EActionPriority.PRIORITY_IDLE
	registerVal2.OverrideLooking = true
	local registerVal3 = {}
	-- r(4) = g[1] // EScriptableAction
	-- r(4) = r(4).field(11) // EScriptableAction.LOOP
	registerVal3.Type = EScriptableAction.LOOP
	registerVal3.OverrideLooking = true
	-- r(4) = g[6] // EActionPriority
	-- r(4) = r(4).field(7) // EActionPriority.PRIORITY_IDLE
	registerVal3.Priority = EActionPriority.PRIORITY_IDLE
	registerVal3.CanBeOverridenBySamePriority = true
	local registerVal4 = {}
	-- r(5) = g[1] // EScriptableAction
	-- r(5) = r(5).field(2) // EScriptableAction.PLAY_ANIMATION
	registerVal4.Type = EScriptableAction.PLAY_ANIMATION
	-- r(5) = r(0).field(14) // arg0.AnimIdle
	registerVal4.Anim = arg0.AnimIdle
	registerVal3.LoopAction = registerVal4
	registerVal3.NumLoops = 0.000000
	registerVal4 = {}
	-- r(5) = g[1] // EScriptableAction
	-- r(5) = r(5).field(17) // EScriptableAction.BATCH
	registerVal4.Type = EScriptableAction.BATCH
	local registerVal5 = {}
	-- r(6) = r(1) // registerVal1
	-- r(7) = r(2) // registerVal2
	-- r(8) = r(3) // registerVal3
	registerVal5 = {registerVal1, registerVal2, registerVal3}
	registerVal4.Actions = registerVal5
	-- r(5) = g[19] // Action
	-- r(5) = r(5).field(20) // Action.ReplaceCurrentAction
	-- r(6) = r(0).field(21) // arg0.EntityUsingItem
	-- r(7) = r(4) // registerVal4
	Action.ReplaceCurrentAction(arg0.EntityUsingItem, registerVal4)
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x2A
	-- Constant Count: 0x15
	-- Registers Count: 0x7
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.HitFailAndIdleAnimBlacksmith(arg0)
	local registerVal1 = {}
	-- r(2) = g[1] // EScriptableAction
	-- r(2) = r(2).field(2) // EScriptableAction.PLAY_ANIMATION
	registerVal1.Type = EScriptableAction.PLAY_ANIMATION
	-- r(2) = r(0).field(4) // arg0.AnimHitFail
	registerVal1.Anim = arg0.AnimHitFail
	-- r(2) = g[6] // EActionPriority
	-- r(2) = r(2).field(7) // EActionPriority.PRIORITY_IDLE
	registerVal1.Priority = EActionPriority.PRIORITY_IDLE
	registerVal1.OverrideLooking = true
	local registerVal2 = {}
	-- r(3) = g[1] // EScriptableAction
	-- r(3) = r(3).field(10) // EScriptableAction.LOOP
	registerVal2.Type = EScriptableAction.LOOP
	registerVal2.OverrideLooking = true
	-- r(3) = g[6] // EActionPriority
	-- r(3) = r(3).field(7) // EActionPriority.PRIORITY_IDLE
	registerVal2.Priority = EActionPriority.PRIORITY_IDLE
	registerVal2.CanBeOverridenBySamePriority = true
	local registerVal3 = {}
	-- r(4) = g[1] // EScriptableAction
	-- r(4) = r(4).field(2) // EScriptableAction.PLAY_ANIMATION
	registerVal3.Type = EScriptableAction.PLAY_ANIMATION
	-- r(4) = r(0).field(13) // arg0.AnimIdle
	registerVal3.Anim = arg0.AnimIdle
	registerVal2.LoopAction = registerVal3
	registerVal2.NumLoops = 0.000000
	registerVal3 = {}
	-- r(4) = g[1] // EScriptableAction
	-- r(4) = r(4).field(16) // EScriptableAction.BATCH
	registerVal3.Type = EScriptableAction.BATCH
	local registerVal4 = {}
	-- r(5) = r(1) // registerVal1
	-- r(6) = r(2) // registerVal2
	registerVal4 = {registerVal1, registerVal2}
	registerVal3.Actions = registerVal4
	-- r(4) = g[18] // Action
	-- r(4) = r(4).field(19) // Action.ReplaceCurrentAction
	-- r(5) = r(0).field(20) // arg0.EntityUsingItem
	-- r(6) = r(3) // registerVal3
	Action.ReplaceCurrentAction(arg0.EntityUsingItem, registerVal3)
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x2A
	-- Constant Count: 0x15
	-- Registers Count: 0x7
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.HitSuccessAndIdleAnimBlacksmith(arg0)
	local registerVal1 = {}
	-- r(2) = g[1] // EScriptableAction
	-- r(2) = r(2).field(2) // EScriptableAction.PLAY_ANIMATION
	registerVal1.Type = EScriptableAction.PLAY_ANIMATION
	-- r(2) = r(0).field(4) // arg0.AnimHitSuccess
	registerVal1.Anim = arg0.AnimHitSuccess
	-- r(2) = g[6] // EActionPriority
	-- r(2) = r(2).field(7) // EActionPriority.PRIORITY_IDLE
	registerVal1.Priority = EActionPriority.PRIORITY_IDLE
	registerVal1.OverrideLooking = true
	local registerVal2 = {}
	-- r(3) = g[1] // EScriptableAction
	-- r(3) = r(3).field(10) // EScriptableAction.LOOP
	registerVal2.Type = EScriptableAction.LOOP
	registerVal2.OverrideLooking = true
	-- r(3) = g[6] // EActionPriority
	-- r(3) = r(3).field(7) // EActionPriority.PRIORITY_IDLE
	registerVal2.Priority = EActionPriority.PRIORITY_IDLE
	registerVal2.CanBeOverridenBySamePriority = true
	local registerVal3 = {}
	-- r(4) = g[1] // EScriptableAction
	-- r(4) = r(4).field(2) // EScriptableAction.PLAY_ANIMATION
	registerVal3.Type = EScriptableAction.PLAY_ANIMATION
	-- r(4) = r(0).field(13) // arg0.AnimIdle
	registerVal3.Anim = arg0.AnimIdle
	registerVal2.LoopAction = registerVal3
	registerVal2.NumLoops = 0.000000
	registerVal3 = {}
	-- r(4) = g[1] // EScriptableAction
	-- r(4) = r(4).field(16) // EScriptableAction.BATCH
	registerVal3.Type = EScriptableAction.BATCH
	local registerVal4 = {}
	-- r(5) = r(1) // registerVal1
	-- r(6) = r(2) // registerVal2
	registerVal4 = {registerVal1, registerVal2}
	registerVal3.Actions = registerVal4
	-- r(4) = g[18] // Action
	-- r(4) = r(4).field(19) // Action.ReplaceCurrentAction
	-- r(5) = r(0).field(20) // arg0.EntityUsingItem
	-- r(6) = r(3) // registerVal3
	Action.ReplaceCurrentAction(arg0.EntityUsingItem, registerVal3)
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x2A
	-- Constant Count: 0x15
	-- Registers Count: 0x7
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.HitSuccessNoLookAndIdleAnimBlacksmith(arg0)
	local registerVal1 = {}
	-- r(2) = g[1] // EScriptableAction
	-- r(2) = r(2).field(2) // EScriptableAction.PLAY_ANIMATION
	registerVal1.Type = EScriptableAction.PLAY_ANIMATION
	-- r(2) = r(0).field(4) // arg0.AnimHitNoLook
	registerVal1.Anim = arg0.AnimHitNoLook
	-- r(2) = g[6] // EActionPriority
	-- r(2) = r(2).field(7) // EActionPriority.PRIORITY_IDLE
	registerVal1.Priority = EActionPriority.PRIORITY_IDLE
	registerVal1.OverrideLooking = true
	local registerVal2 = {}
	-- r(3) = g[1] // EScriptableAction
	-- r(3) = r(3).field(10) // EScriptableAction.LOOP
	registerVal2.Type = EScriptableAction.LOOP
	registerVal2.OverrideLooking = true
	-- r(3) = g[6] // EActionPriority
	-- r(3) = r(3).field(7) // EActionPriority.PRIORITY_IDLE
	registerVal2.Priority = EActionPriority.PRIORITY_IDLE
	registerVal2.CanBeOverridenBySamePriority = true
	local registerVal3 = {}
	-- r(4) = g[1] // EScriptableAction
	-- r(4) = r(4).field(2) // EScriptableAction.PLAY_ANIMATION
	registerVal3.Type = EScriptableAction.PLAY_ANIMATION
	-- r(4) = r(0).field(13) // arg0.AnimIdle
	registerVal3.Anim = arg0.AnimIdle
	registerVal2.LoopAction = registerVal3
	registerVal2.NumLoops = 0.000000
	registerVal3 = {}
	-- r(4) = g[1] // EScriptableAction
	-- r(4) = r(4).field(16) // EScriptableAction.BATCH
	registerVal3.Type = EScriptableAction.BATCH
	local registerVal4 = {}
	-- r(5) = r(1) // registerVal1
	-- r(6) = r(2) // registerVal2
	registerVal4 = {registerVal1, registerVal2}
	registerVal3.Actions = registerVal4
	-- r(4) = g[18] // Action
	-- r(4) = r(4).field(19) // Action.ReplaceCurrentAction
	-- r(5) = r(0).field(20) // arg0.EntityUsingItem
	-- r(6) = r(3) // registerVal3
	Action.ReplaceCurrentAction(arg0.EntityUsingItem, registerVal3)
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x65
	-- Constant Count: 0x1E
	-- Registers Count: 0x6
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x2
function HeroJobController.CompleteBladeBlacksmith(arg0)
	-- r(1) = g[0] // print
	-- r(2) = c[1] // "BLACKSMITH - PUT DOWN SWORD"
	print("BLACKSMITH - PUT DOWN SWORD")
	arg0.HammerBlows = 0.000000
	-- r(1) = g[4] // ScriptFunction
	-- r(1) = r(1).field(5) // ScriptFunction.WaitForTimeInSecondsUntilCondition
	-- r(2) = c[6] // 0.100000
		-- OP Count: 0x4
		-- Constant Count: 0x1
		-- Registers Count: 0x2
		-- UpValue Count: 0x1
		-- SubFuncs Count: 0x0
	local function __FUNC_4F0A_()
		-- r(0) = r(0).field(0) // .HenchmanWentAWOL
		return .HenchmanWentAWOL
		-- return
	end

	-- r(0) = r(0) // arg0
	ScriptFunction.WaitForTimeInSecondsUntilCondition(0.100000, __FUNC_4F0A_)
	-- r(1) = r(0).field(7) // arg0.HenchmanWentAWOL
	if not arg0.HenchmanWentAWOL then
		-- r(1) = g[8] // ObjectAttachment
		-- r(1) = r(1).field(9) // ObjectAttachment.IsEntityAttached
		-- r(2) = r(0).field(10) // arg0.EntityUsingItem
		-- r(3) = r(0).field(11) // arg0.Ingot
		local registerVal1 = ObjectAttachment.IsEntityAttached(arg0.EntityUsingItem, arg0.Ingot)
		if registerVal1 then
			-- r(1) = r(0).field(11) // arg0.Ingot
			-- r(1) = r(1):c[12] // arg0.Ingot:Destroy
			arg0.Ingot:Destroy()
			-- r(1) = g[13] // Debug
			-- r(1) = r(1).field(14) // Debug.CreateEntityAt
			-- r(2) = c[15] // "MetalWork_Minigame_Stage3"
			-- r(3) = c[16] // "BlacksmithIngot"
			-- r(4) = r(0).field(17) // arg0.JobData
			-- r(4) = r(4).field(18) // arg0.JobData.Location
			-- r(3) = r(3)..r(4) // ("BlacksmithIngot" .. arg0.JobData.Location)
			-- r(4) = r(0).field(10) // arg0.EntityUsingItem
			-- r(4) = r(4):c[19] // arg0.EntityUsingItem:GetPosition
			registerVal1 = Debug.CreateEntityAt("MetalWork_Minigame_Stage3", ("BlacksmithIngot" .. arg0.JobData.Location), arg0.EntityUsingItem:GetPosition())
			arg0.Ingot = registerVal1
			-- r(1) = g[8] // ObjectAttachment
			-- r(1) = r(1).field(20) // ObjectAttachment.AddEntity
			-- r(2) = r(0).field(10) // arg0.EntityUsingItem
			-- r(3) = r(0).field(11) // arg0.Ingot
			-- r(4) = g[21] // DummyObjects
			-- r(4) = r(4).field(22) // DummyObjects.HAND_LEFT
			-- r(5) = c[3] // 0.000000
			ObjectAttachment.AddEntity(arg0.EntityUsingItem, arg0.Ingot, DummyObjects.HAND_LEFT, 0.000000)
		end
		-- r(1) = g[4] // ScriptFunction
		-- r(1) = r(1).field(5) // ScriptFunction.WaitForTimeInSecondsUntilCondition
		-- r(2) = c[23] // 1.900000
		-- OP Count: 0x4
		-- Constant Count: 0x1
		-- Registers Count: 0x2
		-- UpValue Count: 0x1
		-- SubFuncs Count: 0x0
		local function __FUNC_4FD6_()
			-- r(0) = r(0).field(0) // .HenchmanWentAWOL
			return .HenchmanWentAWOL
			-- return
		end

		-- r(0) = r(0) // arg0
		ScriptFunction.WaitForTimeInSecondsUntilCondition(1.900000, __FUNC_4FD6_)
	end
	-- r(1) = r(0).field(7) // arg0.HenchmanWentAWOL
	if not arg0.HenchmanWentAWOL then
		-- r(1) = g[13] // Debug
		-- r(1) = r(1).field(24) // Debug.CreateEntityAtPosition
		-- r(2) = c[25] // "FX_Smith_Steam_Ingot"
		-- r(3) = c[26] // "effect"
		-- r(4) = r(0).field(11) // arg0.Ingot
		-- r(4) = r(4):c[19] // arg0.Ingot:GetPosition
		Debug.CreateEntityAtPosition("FX_Smith_Steam_Ingot", "effect", arg0.Ingot:GetPosition())
		-- r(1) = g[8] // ObjectAttachment
		-- r(1) = r(1).field(9) // ObjectAttachment.IsEntityAttached
		-- r(2) = r(0).field(10) // arg0.EntityUsingItem
		-- r(3) = r(0).field(11) // arg0.Ingot
		registerVal1 = ObjectAttachment.IsEntityAttached(arg0.EntityUsingItem, arg0.Ingot)
		if registerVal1 then
			-- r(1) = g[8] // ObjectAttachment
			-- r(1) = r(1).field(27) // ObjectAttachment.RemoveEntity
			-- r(2) = r(0).field(10) // arg0.EntityUsingItem
			-- r(3) = r(0).field(11) // arg0.Ingot
			ObjectAttachment.RemoveEntity(arg0.EntityUsingItem, arg0.Ingot)
			-- r(1) = r(0).field(11) // arg0.Ingot
			-- r(1) = r(1):c[12] // arg0.Ingot:Destroy
			arg0.Ingot:Destroy()
			-- r(1) = g[13] // Debug
			-- r(1) = r(1).field(14) // Debug.CreateEntityAt
			-- r(2) = c[28] // "MetalWork_Minigame_Stage1"
			-- r(3) = c[16] // "BlacksmithIngot"
			-- r(4) = r(0).field(17) // arg0.JobData
			-- r(4) = r(4).field(18) // arg0.JobData.Location
			-- r(3) = r(3)..r(4) // ("BlacksmithIngot" .. arg0.JobData.Location)
			-- r(4) = r(0).field(10) // arg0.EntityUsingItem
			-- r(4) = r(4):c[19] // arg0.EntityUsingItem:GetPosition
			registerVal1 = Debug.CreateEntityAt("MetalWork_Minigame_Stage1", ("BlacksmithIngot" .. arg0.JobData.Location), arg0.EntityUsingItem:GetPosition())
			arg0.Ingot = registerVal1
			-- r(1) = g[8] // ObjectAttachment
			-- r(1) = r(1).field(20) // ObjectAttachment.AddEntity
			-- r(2) = r(0).field(10) // arg0.EntityUsingItem
			-- r(3) = r(0).field(11) // arg0.Ingot
			-- r(4) = g[21] // DummyObjects
			-- r(4) = r(4).field(22) // DummyObjects.HAND_LEFT
			-- r(5) = c[3] // 0.000000
			ObjectAttachment.AddEntity(arg0.EntityUsingItem, arg0.Ingot, DummyObjects.HAND_LEFT, 0.000000)
			-- skip the next [4] opcodes // advance 4 lines
		else
			-- r(1) = r(0).field(11) // arg0.Ingot
			-- r(1) = r(1):c[12] // arg0.Ingot:Destroy
			arg0.Ingot:Destroy()
			arg0.Ingot = nil
		end
	end
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x21
	-- Constant Count: 0xF
	-- Registers Count: 0x6
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x1
function HeroJobController.PickUpIngotBlacksmith(arg0)
	-- r(1) = r(0).field(0) // arg0.JobActive
	if not arg0.JobActive then
		return 
	end
	-- r(1) = g[1] // print
	-- r(2) = c[2] // "BLACKSMITH - PICK UP INGOT"
	print("BLACKSMITH - PICK UP INGOT")
	-- r(1) = g[3] // ScriptFunction
	-- r(1) = r(1).field(4) // ScriptFunction.WaitForTimeInSecondsUntilCondition
	-- r(2) = c[5] // 1.300000
		-- OP Count: 0x4
		-- Constant Count: 0x1
		-- Registers Count: 0x2
		-- UpValue Count: 0x1
		-- SubFuncs Count: 0x0
	local function __FUNC_5488_()
		-- r(0) = r(0).field(0) // .HenchmanWentAWOL
		return .HenchmanWentAWOL
		-- return
	end

	-- r(0) = r(0) // arg0
	ScriptFunction.WaitForTimeInSecondsUntilCondition(1.300000, __FUNC_5488_)
	-- r(1) = r(0).field(6) // arg0.HenchmanWentAWOL
	if not arg0.HenchmanWentAWOL then
		-- r(1) = g[7] // Debug
		-- r(1) = r(1).field(8) // Debug.CreateEntityAtPosition
		-- r(2) = c[9] // "FX_Smith_Spark_Ingot"
		-- r(3) = c[10] // "effect"
		-- r(4) = r(0).field(11) // arg0.Ingot
		-- r(4) = r(4):c[12] // arg0.Ingot:GetPosition
		Debug.CreateEntityAtPosition("FX_Smith_Spark_Ingot", "effect", arg0.Ingot:GetPosition())
		-- skip the next [7] opcodes // advance 7 lines
	else
		-- r(1) = r(0).field(11) // arg0.Ingot
		if arg0.Ingot then
			-- r(1) = r(0).field(11) // arg0.Ingot
			-- r(1) = r(1):c[13] // arg0.Ingot:Destroy
			arg0.Ingot:Destroy()
			arg0.Ingot = nil
		end
	end
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x17
	-- Constant Count: 0x8
	-- Registers Count: 0x4
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.RemoveIngotBlacksmith(arg0)
	-- r(1) = r(0).field(0) // arg0.HenchmanWentAWOL
	-- skip the next [12] opcodes // advance 12 lines
	-- r(1) = g[1] // ObjectAttachment
	-- r(1) = r(1).field(2) // ObjectAttachment.IsEntityAttached
	-- r(2) = r(0).field(3) // arg0.EntityUsingItem
	-- r(3) = r(0).field(4) // arg0.Ingot
	local registerVal1 = ObjectAttachment.IsEntityAttached(arg0.EntityUsingItem, arg0.Ingot)
	if not arg0.HenchmanWentAWOL and registerVal1 then
		-- r(1) = g[1] // ObjectAttachment
		-- r(1) = r(1).field(5) // ObjectAttachment.RemoveEntity
		-- r(2) = r(0).field(3) // arg0.EntityUsingItem
		-- r(3) = r(0).field(4) // arg0.Ingot
		ObjectAttachment.RemoveEntity(arg0.EntityUsingItem, arg0.Ingot)
	end
	-- r(1) = r(0).field(4) // arg0.Ingot
	if arg0.Ingot then
		-- r(1) = r(0).field(4) // arg0.Ingot
		-- r(1) = r(1):c[6] // arg0.Ingot:Destroy
		arg0.Ingot:Destroy()
		arg0.Ingot = nil
	end
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x3
	-- Constant Count: 0x1
	-- Registers Count: 0x3
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.ClearupBlacksmith(arg0)
	-- r(1) = r(0):c[0] // arg0:ClearUpCommon
	arg0:ClearUpCommon()
	-- return
end

-- r(0) = g[9] // HeroJobController
	-- OP Count: 0x71
	-- Constant Count: 0x1F
	-- Registers Count: 0xA
	-- UpValue Count: 0x0
	-- SubFuncs Count: 0x0
function HeroJobController.DestroyDummiesAndTeleportBlacksmith(arg0)
	-- r(1) = r(0):c[0] // arg0:RemoveIngotBlacksmith
	arg0:RemoveIngotBlacksmith()
	-- r(1) = c[1] // "QJ002_FinishedMarker"
	-- r(2) = g[2] // ScriptFunction
	-- r(2) = r(2).field(3) // ScriptFunction.TeleportPlayerTo
	-- r(3) = g[2] // ScriptFunction
	-- r(3) = r(3).field(4) // ScriptFunction.GetEntityWithName
	-- r(4) = r(1) // "QJ002_FinishedMarker"
	-- r(5) = r(0).field(5) // arg0.JobData
	-- r(5) = r(5).field(6) // arg0.JobData.Location
	-- r(4) = r(4)..r(5) // ("QJ002_FinishedMarker" .. arg0.JobData.Location)
	-- r(5) = c[7] // "marker"
	local registerVal3 = ScriptFunction.GetEntityWithName(("QJ002_FinishedMarker" .. arg0.JobData.Location), "marker")
	-- r(3) = r(3):c[8] // registerVal3:GetPosition
	registerVal3 = registerVal3:GetPosition()
	-- r(4) = true
	-- r(5) = true
	-- r(6) = true
	ScriptFunction.TeleportPlayerTo(registerVal3, true, true, true)
	-- r(2) = c[9] // "QJ002_DogFinishedMarker"
	-- r(3) = r(0).field(10) // arg0.Dog
	-- r(3) = r(3):c[11] // arg0.Dog:IsAlive
	registerVal3 = arg0.Dog:IsAlive()
	if registerVal3 then
		-- r(3) = g[12] // Physics
		-- r(3) = r(3).field(13) // Physics.TeleportToPosition
		-- r(4) = r(0).field(10) // arg0.Dog
		-- r(5) = g[2] // ScriptFunction
		-- r(5) = r(5).field(4) // ScriptFunction.GetEntityWithName
		-- r(6) = r(2) // "QJ002_DogFinishedMarker"
		-- r(7) = r(0).field(5) // arg0.JobData
		-- r(7) = r(7).field(6) // arg0.JobData.Location
		-- r(6) = r(6)..r(7) // ("QJ002_DogFinishedMarker" .. arg0.JobData.Location)
		-- r(7) = c[7] // "marker"
		local registerVal5 = ScriptFunction.GetEntityWithName(("QJ002_DogFinishedMarker" .. arg0.JobData.Location), "marker")
		-- r(5) = r(5):c[8] // registerVal5:GetPosition
		Physics.TeleportToPosition(arg0.Dog, registerVal5:GetPosition())
	end
	-- r(3) = r(0):c[14] // arg0:ClearUpCouchSpectator
	-- r(5) = r(1) // "QJ002_FinishedMarker"
	-- r(6) = r(2) // "QJ002_DogFinishedMarker"
	arg0:ClearUpCouchSpectator("QJ002_FinishedMarker", "QJ002_DogFinishedMarker")
	-- r(3) = g[2] // ScriptFunction
	-- r(3) = r(3).field(15) // ScriptFunction.SetExclusionZoneAsActive
	-- r(4) = c[16] // "QJ002_Camera_ExclusionZone"
	-- r(5) = r(0).field(5) // arg0.JobData
	-- r(5) = r(5).field(6) // arg0.JobData.Location
	-- r(4) = r(4)..r(5) // ("QJ002_Camera_ExclusionZone" .. arg0.JobData.Location)
	-- r(5) = false
	ScriptFunction.SetExclusionZoneAsActive(("QJ002_Camera_ExclusionZone" .. arg0.JobData.Location), false)
	-- r(3) = r(0).field(17) // arg0.HenchmanWentAWOL
	if not arg0.HenchmanWentAWOL then
		-- r(3) = g[18] // Carrying
		-- r(3) = r(3).field(19) // Carrying.RemoveEntityFromSlot
		-- r(4) = r(0).field(20) // arg0.EntityUsingItem
		-- r(5) = g[21] // DummyObjects
		-- r(5) = r(5).field(22) // DummyObjects.HAND_RIGHT
		registerVal3 = Carrying.RemoveEntityFromSlot(arg0.EntityUsingItem, DummyObjects.HAND_RIGHT)
		-- r(4) = r(3):c[11] // registerVal3:IsAlive
		local registerVal4 = registerVal3:IsAlive()
		if registerVal4 then
			-- r(4) = r(3):c[23] // registerVal3:Destroy
			registerVal3:Destroy()
		end
		-- r(4) = g[2] // ScriptFunction
		-- r(4) = r(4).field(24) // ScriptFunction.MoveAndRotateEntityToMarkerNamed
		-- r(5) = r(0).field(20) // arg0.EntityUsingItem
		-- r(6) = c[1] // "QJ002_FinishedMarker"
		-- r(7) = r(0).field(5) // arg0.JobData
		-- r(7) = r(7).field(6) // arg0.JobData.Location
		-- r(6) = r(6)..r(7) // ("QJ002_FinishedMarker" .. arg0.JobData.Location)
		-- r(7) = true
		-- r(8) = true
		-- r(9) = true
		ScriptFunction.MoveAndRotateEntityToMarkerNamed(arg0.EntityUsingItem, ("QJ002_FinishedMarker" .. arg0.JobData.Location), true, true, true)
		-- r(4) = r(0).field(10) // arg0.Dog
		-- r(4) = r(4):c[11] // arg0.Dog:IsAlive
		registerVal4 = arg0.Dog:IsAlive()
		if registerVal4 then
			-- r(4) = g[2] // ScriptFunction
			-- r(4) = r(4).field(4) // ScriptFunction.GetEntityWithName
			-- r(5) = c[9] // "QJ002_DogFinishedMarker"
			-- r(6) = r(0).field(5) // arg0.JobData
			-- r(6) = r(6).field(6) // arg0.JobData.Location
			-- r(5) = r(5)..r(6) // ("QJ002_DogFinishedMarker" .. arg0.JobData.Location)
			-- r(6) = c[7] // "marker"
			registerVal4 = ScriptFunction.GetEntityWithName(("QJ002_DogFinishedMarker" .. arg0.JobData.Location), "marker")
			-- r(5) = g[12] // Physics
			-- r(5) = r(5).field(13) // Physics.TeleportToPosition
			-- r(6) = r(0).field(10) // arg0.Dog
			-- r(7) = r(4):c[8] // registerVal4:GetPosition
			Physics.TeleportToPosition(arg0.Dog, registerVal4:GetPosition())
			-- r(5) = g[2] // ScriptFunction
			-- r(5) = r(5).field(25) // ScriptFunction.SetFacingVector
			-- r(6) = r(0).field(10) // arg0.Dog
			-- r(7) = g[12] // Physics
			-- r(7) = r(7).field(26) // Physics.GetFacingVector
			-- r(8) = r(4) // registerVal4
			ScriptFunction.SetFacingVector(arg0.Dog, Physics.GetFacingVector(registerVal4))
			-- r(5) = g[2] // ScriptFunction
			-- r(5) = r(5).field(27) // ScriptFunction.DogStopLying
			-- r(6) = r(0).field(10) // arg0.Dog
			ScriptFunction.DogStopLying(arg0.Dog)
		end
	end
	-- r(3) = g[28] // Layers
	-- r(3) = r(3).field(29) // Layers.ActivateLayer
	-- r(4) = c[30] // "QJ002_JobBlacksmith_Hammer"
	Layers.ActivateLayer("QJ002_JobBlacksmith_Hammer")
	-- return
end

-- return
